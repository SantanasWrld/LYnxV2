#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReplicatedCapture

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReplicatedCapture.BP_ReplicatedCapture_C
// 0x0040 (0x02D8 - 0x0298)
class ABP_ReplicatedCapture_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         DataLength;                                        // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         CaptureId;                                         // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 CompressedData;                                    // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_UPGameInstance_C*                   As_BP_UPGame_Instance;                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class ABP_ReplicatedCapture_C* ReplicatedCapture)> OnCaptureUncompressed; // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CheckIfReady();
	void ExecuteUbergraph_BP_ReplicatedCapture(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SetCaptureId(int32 CaptureId_0);
	void SetCompressedData(const TArray<uint8>& CompressedData_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReplicatedCapture_C">();
	}
	static class ABP_ReplicatedCapture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReplicatedCapture_C>();
	}
};
static_assert(alignof(ABP_ReplicatedCapture_C) == 0x000008, "Wrong alignment on ABP_ReplicatedCapture_C");
static_assert(sizeof(ABP_ReplicatedCapture_C) == 0x0002D8, "Wrong size on ABP_ReplicatedCapture_C");
static_assert(offsetof(ABP_ReplicatedCapture_C, UberGraphFrame) == 0x000298, "Member 'ABP_ReplicatedCapture_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedCapture_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_ReplicatedCapture_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedCapture_C, DataLength) == 0x0002A8, "Member 'ABP_ReplicatedCapture_C::DataLength' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedCapture_C, CaptureId) == 0x0002AC, "Member 'ABP_ReplicatedCapture_C::CaptureId' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedCapture_C, CompressedData) == 0x0002B0, "Member 'ABP_ReplicatedCapture_C::CompressedData' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedCapture_C, As_BP_UPGame_Instance) == 0x0002C0, "Member 'ABP_ReplicatedCapture_C::As_BP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedCapture_C, OnCaptureUncompressed) == 0x0002C8, "Member 'ABP_ReplicatedCapture_C::OnCaptureUncompressed' has a wrong offset!");

}

