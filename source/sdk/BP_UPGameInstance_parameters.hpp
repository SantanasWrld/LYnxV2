#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPGameInstance

#include "Basic.hpp"

#include "SteamIntegrationKit_structs.hpp"
#include "S_InventoryItem_structs.hpp"
#include "BlueprintJson_structs.hpp"
#include "S_InventoryItemSave_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_AntiAliasingMethod_structs.hpp"
#include "S_FindSessionsResult_structs.hpp"
#include "S_OnlineSession_structs.hpp"
#include "E_Dismemberment_structs.hpp"
#include "E_DeathType_structs.hpp"


namespace SDK::Params
{

// Function BP_UPGameInstance.BP_UPGameInstance_C.AddRequestLobbyCustomGamesFilter
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_AddRequestLobbyCustomGamesFilter final
{
public:
	bool                                          IncludeCustomGames;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_AddRequestLobbyCustomGamesFilter) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_AddRequestLobbyCustomGamesFilter");
static_assert(sizeof(BP_UPGameInstance_C_AddRequestLobbyCustomGamesFilter) == 0x000001, "Wrong size on BP_UPGameInstance_C_AddRequestLobbyCustomGamesFilter");
static_assert(offsetof(BP_UPGameInstance_C_AddRequestLobbyCustomGamesFilter, IncludeCustomGames) == 0x000000, "Member 'BP_UPGameInstance_C_AddRequestLobbyCustomGamesFilter::IncludeCustomGames' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.ApplyAntiAliasingMethod
// 0x0038 (0x0038 - 0x0000)
struct BP_UPGameInstance_C_ApplyAntiAliasingMethod final
{
public:
	E_AntiAliasingMethod                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_ApplyAntiAliasingMethod) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_ApplyAntiAliasingMethod");
static_assert(sizeof(BP_UPGameInstance_C_ApplyAntiAliasingMethod) == 0x000038, "Wrong size on BP_UPGameInstance_C_ApplyAntiAliasingMethod");
static_assert(offsetof(BP_UPGameInstance_C_ApplyAntiAliasingMethod, Temp_byte_Variable) == 0x000000, "Member 'BP_UPGameInstance_C_ApplyAntiAliasingMethod::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyAntiAliasingMethod, Temp_int_Variable) == 0x000004, "Member 'BP_UPGameInstance_C_ApplyAntiAliasingMethod::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyAntiAliasingMethod, Temp_int_Variable_1) == 0x000008, "Member 'BP_UPGameInstance_C_ApplyAntiAliasingMethod::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyAntiAliasingMethod, Temp_int_Variable_2) == 0x00000C, "Member 'BP_UPGameInstance_C_ApplyAntiAliasingMethod::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyAntiAliasingMethod, Temp_int_Variable_3) == 0x000010, "Member 'BP_UPGameInstance_C_ApplyAntiAliasingMethod::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyAntiAliasingMethod, K2Node_Select_Default) == 0x000014, "Member 'BP_UPGameInstance_C_ApplyAntiAliasingMethod::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyAntiAliasingMethod, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_ApplyAntiAliasingMethod::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyAntiAliasingMethod, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_UPGameInstance_C_ApplyAntiAliasingMethod::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.ApplyRenderScale
// 0x0048 (0x0048 - 0x0000)
struct BP_UPGameInstance_C_ApplyRenderScale final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_ApplyRenderScale) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_ApplyRenderScale");
static_assert(sizeof(BP_UPGameInstance_C_ApplyRenderScale) == 0x000048, "Wrong size on BP_UPGameInstance_C_ApplyRenderScale");
static_assert(offsetof(BP_UPGameInstance_C_ApplyRenderScale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_UPGameInstance_C_ApplyRenderScale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyRenderScale, CallFunc_Round_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_ApplyRenderScale::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyRenderScale, CallFunc_Clamp_ReturnValue) == 0x00000C, "Member 'BP_UPGameInstance_C_ApplyRenderScale::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyRenderScale, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_ApplyRenderScale::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyRenderScale, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'BP_UPGameInstance_C_ApplyRenderScale::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ApplyRenderScale, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_UPGameInstance_C_ApplyRenderScale::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.CheckSessionName
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameInstance_C_CheckSessionName final
{
public:
	class FString                                 InSessionName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 OutSessionName;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_CheckSessionName) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_CheckSessionName");
static_assert(sizeof(BP_UPGameInstance_C_CheckSessionName) == 0x000028, "Wrong size on BP_UPGameInstance_C_CheckSessionName");
static_assert(offsetof(BP_UPGameInstance_C_CheckSessionName, InSessionName) == 0x000000, "Member 'BP_UPGameInstance_C_CheckSessionName::InSessionName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_CheckSessionName, OutSessionName) == 0x000010, "Member 'BP_UPGameInstance_C_CheckSessionName::OutSessionName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_CheckSessionName, CallFunc_IsEmpty_ReturnValue) == 0x000020, "Member 'BP_UPGameInstance_C_CheckSessionName::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.ClearCameroidTextures
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_ClearCameroidTextures final
{
public:
	bool                                          IsPrivate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_ClearCameroidTextures) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_ClearCameroidTextures");
static_assert(sizeof(BP_UPGameInstance_C_ClearCameroidTextures) == 0x000001, "Wrong size on BP_UPGameInstance_C_ClearCameroidTextures");
static_assert(offsetof(BP_UPGameInstance_C_ClearCameroidTextures, IsPrivate) == 0x000000, "Member 'BP_UPGameInstance_C_ClearCameroidTextures::IsPrivate' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.ClearItemSave
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_ClearItemSave final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetInventoryItemSaveSlot_Slot;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeleteGameInSlot_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_ClearItemSave) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_ClearItemSave");
static_assert(sizeof(BP_UPGameInstance_C_ClearItemSave) == 0x000020, "Wrong size on BP_UPGameInstance_C_ClearItemSave");
static_assert(offsetof(BP_UPGameInstance_C_ClearItemSave, ItemId) == 0x000000, "Member 'BP_UPGameInstance_C_ClearItemSave::ItemId' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ClearItemSave, CallFunc_GetInventoryItemSaveSlot_Slot) == 0x000008, "Member 'BP_UPGameInstance_C_ClearItemSave::CallFunc_GetInventoryItemSaveSlot_Slot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ClearItemSave, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_ClearItemSave::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ClearItemSave, CallFunc_DeleteGameInSlot_ReturnValue) == 0x000019, "Member 'BP_UPGameInstance_C_ClearItemSave::CallFunc_DeleteGameInSlot_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.DeleteSavedSession
// 0x0078 (0x0078 - 0x0000)
struct BP_UPGameInstance_C_DeleteSavedSession final
{
public:
	int32                                         SessionSlot_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _SlotPrefix;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetAllSaveFileNames_ReturnValue;          // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeleteGameInSlot_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_DeleteSavedSession) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_DeleteSavedSession");
static_assert(sizeof(BP_UPGameInstance_C_DeleteSavedSession) == 0x000078, "Wrong size on BP_UPGameInstance_C_DeleteSavedSession");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, SessionSlot_0) == 0x000000, "Member 'BP_UPGameInstance_C_DeleteSavedSession::SessionSlot_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, _SlotPrefix) == 0x000008, "Member 'BP_UPGameInstance_C_DeleteSavedSession::_SlotPrefix' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_UPGameInstance_C_DeleteSavedSession::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_UPGameInstance_C_DeleteSavedSession::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_GetAllSaveFileNames_ReturnValue) == 0x000048, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_GetAllSaveFileNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_DeleteGameInSlot_ReturnValue) == 0x000071, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_DeleteGameInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000072, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteSavedSession, CallFunc_StartsWith_ReturnValue) == 0x000073, "Member 'BP_UPGameInstance_C_DeleteSavedSession::CallFunc_StartsWith_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.DeleteTempSaveFiles
// 0x0040 (0x0040 - 0x0000)
struct BP_UPGameInstance_C_DeleteTempSaveFiles final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetAllSaveFileNames_ReturnValue;          // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeleteGameInSlot_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTempSaveFile_IsTemp;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_DeleteTempSaveFiles) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_DeleteTempSaveFiles");
static_assert(sizeof(BP_UPGameInstance_C_DeleteTempSaveFiles) == 0x000040, "Wrong size on BP_UPGameInstance_C_DeleteTempSaveFiles");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, CallFunc_GetAllSaveFileNames_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::CallFunc_GetAllSaveFileNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, CallFunc_DeleteGameInSlot_ReturnValue) == 0x000039, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::CallFunc_DeleteGameInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, CallFunc_DoesSaveGameExist_ReturnValue) == 0x00003A, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_DeleteTempSaveFiles, CallFunc_IsTempSaveFile_IsTemp) == 0x00003B, "Member 'BP_UPGameInstance_C_DeleteTempSaveFiles::CallFunc_IsTempSaveFile_IsTemp' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.ExecuteUbergraph_BP_UPGameInstance
// 0x1038 (0x1038 - 0x0000)
struct BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_MapName_2;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Difficulty;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentPoints;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Objective;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RemainingDays;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CustomGameConfig_C*                 CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsPrivate)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_LobbyType                                Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUPGameViewportClient*                  CallFunc_GetViewportClient_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESIK_LobbyType                                Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUPGameViewportClient*                  CallFunc_GetViewportClient_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& UserId, const class FString& Username, const class FString& LoginMethod)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue_1;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InputsSettings_C*                   CallFunc_CreateSaveGameObject_ReturnValue_1;       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InputsSettings_C*                   K2Node_DynamicCast_AsBP_Inputs_Settings;           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Sensitivity;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsUsingGamepad;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_LobbyType                                Temp_byte_Variable_2;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InvertMouseX;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InvertMouseY;                   // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_UserID;                         // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_UserName;                       // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_LoginMethod;                    // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue;               // 0x0100(0x0010)()
	bool                                          K2Node_CustomEvent_IsPrivate_3;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPrivate_2;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_1;             // 0x0138(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_2;             // 0x0148(0x0010)()
	class ABP_UPPlayerCharacter_C*                K2Node_CustomEvent_Player_4;                       // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESIK_LobbyType                                Temp_byte_Variable_3;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0168(0x0050)()
	class FString                                 K2Node_CustomEvent_EventName_1;                    // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintJsonObject                   K2Node_CustomEvent_Event;                          // 0x01C8(0x0010)()
	class FString                                 K2Node_CustomEvent_EventName;                      // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, struct FBlueprintJsonValue> K2Node_CustomEvent_Properties_1;                 // 0x01E8(0x0050)()
	bool                                          Temp_bool_Variable_2;                              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_LobbyType                                K2Node_Select_Default;                             // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_1;           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_1;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CustomGameConfig_C*                 K2Node_DynamicCast_AsBP_Custom_Game_Config;        // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FBlueprintJsonValue> K2Node_CustomEvent_Properties;                   // 0x0260(0x0050)()
	TMap<class FString, class FString>            K2Node_MakeMap_Map_1;                              // 0x02B0(0x0050)()
	class FString                                 K2Node_CustomEvent_Key_1;                          // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Value_1;                        // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Key;                            // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_3;             // 0x0338(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue;                  // 0x0348(0x0010)()
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_2;                            // 0x0358(0x0050)()
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_3;                            // 0x03A8(0x0050)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x03F8(0x0018)()
	class UHostMigrationSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0418(0x0050)(HasGetValueTypeHash)
	TDelegate<void(bool IsPrivate)>               K2Node_CreateDelegate_OutputDelegate_3;            // 0x0468(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FSIK_SteamId& LobbyID, bool bLocalPlayerHost)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0478(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBlueprintJsonObject                   CallFunc_MakeIdentification_Identification;        // 0x0488(0x0010)()
	class FString                                 CallFunc_Conv_JsonObjectToString_ReturnValue;      // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintJsonObject                   CallFunc_MakeAnalyticsEvent_Event;                 // 0x04A8(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x04B8(0x0018)()
	struct FBlueprintJsonObject                   CallFunc_AddEventProperties_OutEvent;              // 0x04D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x04E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0530(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0540(0x0018)()
	struct FBlueprintJsonObject                   CallFunc_MakeAnalyticsBody_Body;                   // 0x0558(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SendRestfulRequest_success;               // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SendRestfulRequest_responseCode;          // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SendRestfulRequest_data;                  // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_SendRestfulRequest_responseHeaders;       // 0x0590(0x0050)()
	struct FBlueprintJsonObject                   CallFunc_MakeAnalyticsEvent_Event_1;               // 0x05E0(0x0010)()
	bool                                          CallFunc_GetCurrentMapType_InLobby;                // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentMapType_InResult;               // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2[0x6];                                      // 0x05F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameState_C*                      K2Node_DynamicCast_AsBP_UPGame_State;              // 0x0600(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInSession_Result;                      // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60A[0x6];                                      // 0x060A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x0610(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, struct FBlueprintJsonValue> CallFunc_MakeStringEventProperty_Properties;     // 0x0630(0x0050)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_4;             // 0x0680(0x0010)()
	class ABP_UPPlayerCharacter_C*                K2Node_CustomEvent_Player_3;                       // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                K2Node_CustomEvent_KilledCharacter;                // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Killer;                         // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x06B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UHostMigrationSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_5;             // 0x06D0(0x0010)()
	int32                                         K2Node_CustomEvent_Damage;                         // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Ragdoll;                        // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E5[0x3];                                      // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_SourceLocation;                 // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Force;                          // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Dismemberment                               K2Node_CustomEvent_Dismemberment;                  // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeathType                                   K2Node_CustomEvent_DeathType;                      // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A[0x6];                                      // 0x070A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Attacker;                       // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x3];                                      // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FSIK_SteamId& SteamID, const struct FSIK_SteamId& LobbyID)> K2Node_CreateDelegate_OutputDelegate_5; // 0x071C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C[0x4];                                      // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USIK_FriendsSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_1;        // 0x0740(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, struct FBlueprintJsonValue> CallFunc_MakeStringEventProperty_Properties_1;   // 0x0750(0x0050)()
	class ABP_UPGameSession_C*                    CallFunc_GetGameSession_GameSession;               // 0x07A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESIK_Result                                   Temp_byte_Variable_4;                              // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x07AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AB[0x5];                                      // 0x07AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPGameSession_C*                    K2Node_CustomEvent_GameSession;                    // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESIK_ChatRoomEnterResponse                    Temp_byte_Variable_5;                              // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x3];                                      // 0x07B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionElapsedDuration_Duration;       // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerDead_IsDead;                 // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue_1;                // 0x07C8(0x0010)()
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_3;          // 0x07D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_6;             // 0x07E8(0x0010)()
	ESIK_Result                                   K2Node_CustomEvent_Result;                         // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLocked;                        // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_ChatRoomEnterResponse                    K2Node_CustomEvent_ChatRoomEnterResponse;          // 0x07FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FB[0x5];                                      // 0x07FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_CustomEvent_Player_2;                       // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESIK_Result Result, bool bLocked, ESIK_ChatRoomEnterResponse ChatRoomEnterResponse)> K2Node_CreateDelegate_OutputDelegate_6; // 0x0808(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESIK_Result                                   K2Node_CustomEvent_Result_1;                       // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLocked_1;                      // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_ChatRoomEnterResponse                    K2Node_CustomEvent_ChatRoomEnterResponse_1;        // 0x081A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81B[0x5];                                      // 0x081B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Episodes_C*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ESIK_Result Result, bool bLocked, ESIK_ChatRoomEnterResponse ChatRoomEnterResponse)> K2Node_CreateDelegate_OutputDelegate_7; // 0x082C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Episodes_C*                         K2Node_CustomEvent_Episodes;                       // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResultsDetails_Score;                  // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResultsDetails_Difficulty;             // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResultsDetails_IsSuccess;              // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResultsDetails_IsFailed;               // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_852[0x6];                                      // 0x0852(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_4;          // 0x0858(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_5;          // 0x0868(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_7;             // 0x0878(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_8;             // 0x0888(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue_2;                // 0x0898(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue_3;                // 0x08A8(0x0010)()
	class ABP_UPGameSession_C*                    CallFunc_GetGameSession_GameSession_1;             // 0x08B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSessionElapsedDuration_Duration_1;     // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue_4;                // 0x08C8(0x0010)()
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_4;                            // 0x08D8(0x0050)()
	bool                                          CallFunc_PullPendingEvents_HasEvents;              // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x7];                                      // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintJsonValue>            CallFunc_PullPendingEvents_EventsArray;            // 0x0930(0x0010)(ReferenceParm)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeArray_ReturnValue;                // 0x0940(0x0010)()
	struct FBlueprintJsonObject                   CallFunc_JsonMakeField_ReturnValue;                // 0x0950(0x0010)(ConstParm)
	class FString                                 CallFunc_Conv_JsonObjectToString_ReturnValue_1;    // 0x0960(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SendRestfulRequest_success_1;             // 0x0974(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_975[0x3];                                      // 0x0975(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SendRestfulRequest_responseCode_1;        // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97C[0x4];                                      // 0x097C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SendRestfulRequest_data_1;                // 0x0980(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_SendRestfulRequest_responseHeaders_1;     // 0x0990(0x0050)()
	int32                                         CallFunc_GetPlayersCount_PlayersCount;             // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayersCount_PlayersCount_1;           // 0x09E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue_5;                // 0x09E8(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue_6;                // 0x09F8(0x0010)()
	int32                                         CallFunc_GetPlayersCount_PlayersCount_2;           // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A0C[0x4];                                      // 0x0A0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_5;                            // 0x0A10(0x0050)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue_7;                // 0x0A60(0x0010)()
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_6;                            // 0x0A70(0x0050)()
	class FString                                 CallFunc_GetProjectVersion_ReturnValue;            // 0x0AC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_9;             // 0x0AD0(0x0010)()
	int32                                         CallFunc_GetSessionDifficulty_Difficulty;          // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE4[0x4];                                      // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_7;                            // 0x0AE8(0x0050)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeInt_ReturnValue_8;                // 0x0B38(0x0010)()
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_8;                            // 0x0B48(0x0050)()
	class USIK_RequestLobbyList_AsyncFunction*    CallFunc_RequestLobbyList_ReturnValue;             // 0x0B98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA1[0x3];                                      // 0x0BA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_10;            // 0x0BA8(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue_11;            // 0x0BB8(0x0010)()
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_9;                            // 0x0BC8(0x0050)()
	TMap<class FString, struct FBlueprintJsonValue> K2Node_MakeMap_Map_10;                           // 0x0C18(0x0050)()
	ESIK_LobbyDistanceFilter                      K2Node_CustomEvent_DistanceFilter;                 // 0x0C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IncludeCustomGames;             // 0x0C69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6A[0x6];                                      // 0x0C6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SessionName;                    // 0x0C70(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FriendsOnly_1;                  // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CustomGame;                     // 0x0C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C82[0x6];                                      // 0x0C82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_FindSessionsResult                  CallFunc_ProcessSteamLobbies_Result;               // 0x0C88(0x0010)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_6;          // 0x0C98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CheckSessionName_OutSessionName;          // 0x0CA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_SessionId;                      // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSIK_SteamId                           CallFunc_ConvertInt64ToSteamId_ReturnValue;        // 0x0CC0(0x0008)(NoDestructor)
	class USIK_JoinLobby_AsyncFunction*           CallFunc_JoinLobby_ReturnValue;                    // 0x0CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLobbyGameServer_ServerIP;              // 0x0CD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLobbyGameServer_ServerPort;            // 0x0CE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE4[0x4];                                      // 0x0CE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           CallFunc_GetLobbyGameServer_SteamID;               // 0x0CE8(0x0008)(NoDestructor)
	bool                                          CallFunc_GetLobbyGameServer_ReturnValue;           // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x7];                                      // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_ConvertSteamIdToInt64_ReturnValue;        // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Int64ToString_ReturnValue;           // 0x0D00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0D10(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D21[0x7];                                      // 0x0D21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_SteamId_1;                      // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PlayerName;                     // 0x0D30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Method;                         // 0x0D40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MapName_1;                      // 0x0D50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0D60(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0D70(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LobbiesMatching;                // 0x0D80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0D84(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D94[0x4];                                      // 0x0D94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0D98(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MapName;                        // 0x0DA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 LobbiesMatching)>        K2Node_CreateDelegate_OutputDelegate_9;            // 0x0DB8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoggedOn_ReturnValue;                     // 0x0DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC9[0x7];                                      // 0x0DC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           CallFunc_GetSteamId_ReturnValue;                   // 0x0DD0(0x0008)(NoDestructor)
	class FString                                 CallFunc_GetPersonaName_ReturnValue;               // 0x0DD8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_ConvertSteamIdToInt64_ReturnValue_1;      // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LobbiesMatching_1;              // 0x0DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF4[0x4];                                      // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           CallFunc_GetSteamId_ReturnValue_1;                 // 0x0DF8(0x0008)(NoDestructor)
	TDelegate<void(int32 LobbiesMatching)>        K2Node_CreateDelegate_OutputDelegate_10;           // 0x0E00(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_Loading_C*                           CallFunc_Create_ReturnValue;                       // 0x0E10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0E18(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSIK_SteamId                           K2Node_MakeStruct_SIK_SteamId;                     // 0x0E28(0x0008)(NoDestructor)
	bool                                          CallFunc_SetLobbyData_ReturnValue;                 // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E31[0x3];                                      // 0x0E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0E34(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3C[0x4];                                      // 0x0E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLobbyData_ReturnValue;                 // 0x0E40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSIK_SteamId                           K2Node_CustomEvent_SteamId;                        // 0x0E50(0x0008)(NoDestructor)
	struct FSIK_SteamId                           K2Node_CustomEvent_LobbyID_1;                      // 0x0E58(0x0008)(NoDestructor)
	int64                                         CallFunc_ConvertSteamIdToInt64_ReturnValue_2;      // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_Result                                   Temp_byte_Variable_6;                              // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E69[0x7];                                      // 0x0E69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           Temp_struct_Variable;                              // 0x0E70(0x0008)(NoDestructor)
	struct FSIK_SteamId                           K2Node_CustomEvent_LobbyID;                        // 0x0E78(0x0008)(NoDestructor)
	bool                                          K2Node_CustomEvent_bLocalPlayerHost;               // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPrivate_1;                    // 0x0E81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_Result                                   K2Node_CustomEvent_Result_2;                       // 0x0E82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E83[0x5];                                      // 0x0E83(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           K2Node_CustomEvent_LobbyID_2;                      // 0x0E88(0x0008)(NoDestructor)
	TDelegate<void(ESIK_Result Result, const struct FSIK_SteamId& LobbyID)> K2Node_CreateDelegate_OutputDelegate_12; // 0x0E90(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSIK_SteamId                           CallFunc_GetSteamId_ReturnValue_2;                 // 0x0EA0(0x0008)(NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0EA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameState_C*                      K2Node_DynamicCast_AsBP_UPGame_State_1;            // 0x0EB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentMapType_InLobby_1;              // 0x0EB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentMapType_InResult_1;             // 0x0EBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0EBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0EBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0EBD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EBE[0x2];                                      // 0x0EBE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetProjectVersion_ReturnValue_1;          // 0x0EC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESIK_Result                                   K2Node_CustomEvent_Result_3;                       // 0x0ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED1[0x7];                                      // 0x0ED1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           K2Node_CustomEvent_LobbyID_3;                      // 0x0ED8(0x0008)(NoDestructor)
	bool                                          CallFunc_SetLobbyData_ReturnValue_1;               // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE1[0x3];                                      // 0x0EE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ESIK_Result Result, const struct FSIK_SteamId& LobbyID)> K2Node_CreateDelegate_OutputDelegate_13; // 0x0EE4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF4[0x4];                                      // 0x0EF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_Int64ToString_ReturnValue_1;         // 0x0EF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0F08(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F19[0x3];                                      // 0x0F19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0F1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Int64ToString_ReturnValue_2;         // 0x0F20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USIK_SteamCreateLobby_AsyncFunction*    CallFunc_CreateLobby_ReturnValue;                  // 0x0F30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0F38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F39[0x3];                                      // 0x0F39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0F3C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4C[0x4];                                      // 0x0F4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0F50(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLobbyData_ReturnValue_2;               // 0x0F58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F59[0x3];                                      // 0x0F59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_Episodes_C* Episodes)> K2Node_CreateDelegate_OutputDelegate_15;         // 0x0F5C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x0F6C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FriendsOnly;                    // 0x0F7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F7D[0x3];                                      // 0x0F7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x0F80(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESIK_LobbyType                                K2Node_Select_Default_2;                           // 0x0F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLobbyType_ReturnValue;                 // 0x0F91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F92[0x2];                                      // 0x0F92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_UPGameSession_C* GameSession)> K2Node_CreateDelegate_OutputDelegate_18; // 0x0F94(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Damage, bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Attacker)> K2Node_CreateDelegate_OutputDelegate_19; // 0x0FA4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0FB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0FB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB6[0x2];                                      // 0x0FB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_ConvertSteamIdToInt64_ReturnValue_3;      // 0x0FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AchievementName;                // 0x0FC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAchievement_ReturnValue;               // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StoreStats_ReturnValue;                   // 0x0FD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD2[0x2];                                      // 0x0FD2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_KillableCharacter_C* KilledCharacter, class AActor* Killer)> K2Node_CreateDelegate_OutputDelegate_20; // 0x0FD4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE4[0x4];                                      // 0x0FE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_CustomEvent_Player_1;                       // 0x0FE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_CustomEvent_Player;                         // 0x0FF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF9[0x3];                                      // 0x0FF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0FFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPrivate;                      // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1001[0x3];                                     // 0x1001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsPrivate)>               K2Node_CreateDelegate_OutputDelegate_21;           // 0x1004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1014[0x4];                                     // 0x1014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x1018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsPrivate)>               K2Node_CreateDelegate_OutputDelegate_22;           // 0x1020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEqualSteamId_ReturnValue;               // 0x1030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1031[0x3];                                     // 0x1031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x1034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance");
static_assert(sizeof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance) == 0x001038, "Wrong size on BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, EntryPoint) == 0x000000, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_MapName_2) == 0x000008, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_MapName_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Difficulty) == 0x000018, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_CurrentPoints) == 0x00001C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_CurrentPoints' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Objective) == 0x000020, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Objective' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_RemainingDays) == 0x000024, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_RemainingDays' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SaveGameToSlot_ReturnValue) == 0x000028, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_byte_Variable) == 0x000061, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetViewportClient_ReturnValue) == 0x000068, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetViewportClient_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_byte_Variable_1) == 0x000070, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetViewportClient_ReturnValue_1) == 0x000078, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetViewportClient_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_2) == 0x000080, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_bool_Variable) == 0x000091, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_2) == 0x000092, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_int_Variable) == 0x000094, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000098, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SaveGameToSlot_ReturnValue_1) == 0x000099, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SaveGameToSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_LoadGameFromSlot_ReturnValue) == 0x0000A0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_CreateSaveGameObject_ReturnValue_1) == 0x0000A8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_CreateSaveGameObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_DynamicCast_AsBP_Inputs_Settings) == 0x0000B0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_DynamicCast_AsBP_Inputs_Settings' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Sensitivity) == 0x0000C0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Sensitivity' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_IsUsingGamepad) == 0x0000C8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_IsUsingGamepad' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000C9, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_bool_Variable_1) == 0x0000CA, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_byte_Variable_2) == 0x0000CB, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_InvertMouseX) == 0x0000CC, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_InvertMouseX' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_InvertMouseY) == 0x0000CD, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_InvertMouseY' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_UserID) == 0x0000D0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_UserID' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_UserName) == 0x0000E0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_UserName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_LoginMethod) == 0x0000F0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_LoginMethod' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue) == 0x000100, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_IsPrivate_3) == 0x000110, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_IsPrivate_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_IsPrivate_2) == 0x000111, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_IsPrivate_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_BoolToString_ReturnValue) == 0x000118, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000128, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_1) == 0x000138, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_2) == 0x000148, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Player_4) == 0x000158, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Player_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_byte_Variable_3) == 0x000160, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map) == 0x000168, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_EventName_1) == 0x0001B8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_EventName_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Event) == 0x0001C8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_EventName) == 0x0001D8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Properties_1) == 0x0001E8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Properties_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_bool_Variable_2) == 0x000238, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_Select_Default) == 0x000239, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_LoadGameFromSlot_ReturnValue_1) == 0x000240, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_LoadGameFromSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_DoesSaveGameExist_ReturnValue_1) == 0x000248, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_DoesSaveGameExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_DynamicCast_AsBP_Custom_Game_Config) == 0x000250, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_DynamicCast_AsBP_Custom_Game_Config' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Properties) == 0x000260, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Properties' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_1) == 0x0002B0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Key_1) == 0x000300, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Value_1) == 0x000310, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Value_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Key) == 0x000320, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Value) == 0x000330, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_3) == 0x000338, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue) == 0x000348, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_2) == 0x000358, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_3) == 0x0003A8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_StringToText_ReturnValue) == 0x0003F8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000410, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeStruct_FormatArgumentData) == 0x000418, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_3) == 0x000468, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_4) == 0x000478, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_MakeIdentification_Identification) == 0x000488, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_MakeIdentification_Identification' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_JsonObjectToString_ReturnValue) == 0x000498, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_JsonObjectToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_MakeAnalyticsEvent_Event) == 0x0004A8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_MakeAnalyticsEvent_Event' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0004B8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_AddEventProperties_OutEvent) == 0x0004D0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_AddEventProperties_OutEvent' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeStruct_FormatArgumentData_1) == 0x0004E0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeArray_Array) == 0x000530, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Format_ReturnValue) == 0x000540, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_MakeAnalyticsBody_Body) == 0x000558, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_MakeAnalyticsBody_Body' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_TextToString_ReturnValue) == 0x000568, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SendRestfulRequest_success) == 0x000578, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SendRestfulRequest_success' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SendRestfulRequest_responseCode) == 0x00057C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SendRestfulRequest_responseCode' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SendRestfulRequest_data) == 0x000580, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SendRestfulRequest_data' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SendRestfulRequest_responseHeaders) == 0x000590, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SendRestfulRequest_responseHeaders' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_MakeAnalyticsEvent_Event_1) == 0x0005E0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_MakeAnalyticsEvent_Event_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetCurrentMapType_InLobby) == 0x0005F0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetCurrentMapType_InLobby' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetCurrentMapType_InResult) == 0x0005F1, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetCurrentMapType_InResult' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetGameState_ReturnValue) == 0x0005F8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_DynamicCast_AsBP_UPGame_State) == 0x000600, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_DynamicCast_AsBP_UPGame_State' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_DynamicCast_bSuccess_2) == 0x000608, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_WasInSession_Result) == 0x000609, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_WasInSession_Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x000610, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000620, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_MakeStringEventProperty_Properties) == 0x000630, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_MakeStringEventProperty_Properties' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_4) == 0x000680, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Player_3) == 0x000690, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Player_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_KilledCharacter) == 0x000698, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_KilledCharacter' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Killer) == 0x0006A0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_3) == 0x0006A8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetObjectClass_ReturnValue) == 0x0006B0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetClassDisplayName_ReturnValue) == 0x0006B8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0006C8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_5) == 0x0006D0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Damage) == 0x0006E0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Ragdoll) == 0x0006E4, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Ragdoll' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_SourceLocation) == 0x0006E8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Force) == 0x000700, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Force' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Dismemberment) == 0x000708, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Dismemberment' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_DeathType) == 0x000709, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_DeathType' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Attacker) == 0x000710, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Attacker' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_4) == 0x000718, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_5) == 0x00071C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetObjectClass_ReturnValue_1) == 0x000730, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000738, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetClassDisplayName_ReturnValue_1) == 0x000740, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetClassDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_MakeStringEventProperty_Properties_1) == 0x000750, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_MakeStringEventProperty_Properties_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetGameSession_GameSession) == 0x0007A0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetGameSession_GameSession' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_byte_Variable_4) == 0x0007A8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_5) == 0x0007A9, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_bool_Variable_3) == 0x0007AA, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_GameSession) == 0x0007B0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_GameSession' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_byte_Variable_5) == 0x0007B8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetSessionElapsedDuration_Duration) == 0x0007BC, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetSessionElapsedDuration_Duration' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsLocalPlayerDead_IsDead) == 0x0007C0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsLocalPlayerDead_IsDead' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue_1) == 0x0007C8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_BoolToString_ReturnValue_3) == 0x0007D8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_BoolToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_6) == 0x0007E8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Result) == 0x0007F8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_bLocked) == 0x0007F9, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_bLocked' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_ChatRoomEnterResponse) == 0x0007FA, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_ChatRoomEnterResponse' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Player_2) == 0x000800, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Player_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_6) == 0x000808, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Result_1) == 0x000818, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Result_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_bLocked_1) == 0x000819, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_bLocked_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_ChatRoomEnterResponse_1) == 0x00081A, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_ChatRoomEnterResponse_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetActorOfClass_ReturnValue) == 0x000820, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_6) == 0x000828, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_7) == 0x00082C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Episodes) == 0x000840, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Episodes' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetResultsDetails_Score) == 0x000848, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetResultsDetails_Score' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetResultsDetails_Difficulty) == 0x00084C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetResultsDetails_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetResultsDetails_IsSuccess) == 0x000850, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetResultsDetails_IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetResultsDetails_IsFailed) == 0x000851, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetResultsDetails_IsFailed' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_BoolToString_ReturnValue_4) == 0x000858, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_BoolToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_BoolToString_ReturnValue_5) == 0x000868, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_BoolToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_7) == 0x000878, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_8) == 0x000888, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue_2) == 0x000898, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue_3) == 0x0008A8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetGameSession_GameSession_1) == 0x0008B8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetGameSession_GameSession_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetSessionElapsedDuration_Duration_1) == 0x0008C0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetSessionElapsedDuration_Duration_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue_4) == 0x0008C8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_4) == 0x0008D8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_PullPendingEvents_HasEvents) == 0x000928, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_PullPendingEvents_HasEvents' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_PullPendingEvents_EventsArray) == 0x000930, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_PullPendingEvents_EventsArray' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeArray_ReturnValue) == 0x000940, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeField_ReturnValue) == 0x000950, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_JsonObjectToString_ReturnValue_1) == 0x000960, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_JsonObjectToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Array_Add_ReturnValue) == 0x000970, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SendRestfulRequest_success_1) == 0x000974, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SendRestfulRequest_success_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SendRestfulRequest_responseCode_1) == 0x000978, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SendRestfulRequest_responseCode_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SendRestfulRequest_data_1) == 0x000980, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SendRestfulRequest_data_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SendRestfulRequest_responseHeaders_1) == 0x000990, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SendRestfulRequest_responseHeaders_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetPlayersCount_PlayersCount) == 0x0009E0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetPlayersCount_PlayersCount' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetPlayersCount_PlayersCount_1) == 0x0009E4, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetPlayersCount_PlayersCount_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue_5) == 0x0009E8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue_6) == 0x0009F8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetPlayersCount_PlayersCount_2) == 0x000A08, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetPlayersCount_PlayersCount_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_5) == 0x000A10, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue_7) == 0x000A60, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_6) == 0x000A70, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_6' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetProjectVersion_ReturnValue) == 0x000AC0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetProjectVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_9) == 0x000AD0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetSessionDifficulty_Difficulty) == 0x000AE0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetSessionDifficulty_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_7) == 0x000AE8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_7' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeInt_ReturnValue_8) == 0x000B38, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_8) == 0x000B48, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_8' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_RequestLobbyList_ReturnValue) == 0x000B98, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_RequestLobbyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_7) == 0x000BA0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_int_Variable_1) == 0x000BA4, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_10) == 0x000BA8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JsonMakeString_ReturnValue_11) == 0x000BB8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JsonMakeString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_9) == 0x000BC8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_9' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeMap_Map_10) == 0x000C18, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeMap_Map_10' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_DistanceFilter) == 0x000C68, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_DistanceFilter' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_IncludeCustomGames) == 0x000C69, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_IncludeCustomGames' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_SessionName) == 0x000C70, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_SessionName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_FriendsOnly_1) == 0x000C80, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_FriendsOnly_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_CustomGame) == 0x000C81, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_CustomGame' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_ProcessSteamLobbies_Result) == 0x000C88, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_ProcessSteamLobbies_Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_BoolToString_ReturnValue_6) == 0x000C98, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_BoolToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_CheckSessionName_OutSessionName) == 0x000CA8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_CheckSessionName_OutSessionName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_SessionId) == 0x000CB8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_SessionId' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_ConvertInt64ToSteamId_ReturnValue) == 0x000CC0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_ConvertInt64ToSteamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_JoinLobby_ReturnValue) == 0x000CC8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_JoinLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetLobbyGameServer_ServerIP) == 0x000CD0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetLobbyGameServer_ServerIP' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetLobbyGameServer_ServerPort) == 0x000CE0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetLobbyGameServer_ServerPort' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetLobbyGameServer_SteamID) == 0x000CE8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetLobbyGameServer_SteamID' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetLobbyGameServer_ReturnValue) == 0x000CF0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetLobbyGameServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_ConvertSteamIdToInt64_ReturnValue) == 0x000CF8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_ConvertSteamIdToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_Int64ToString_ReturnValue) == 0x000D00, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_Int64ToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Concat_StrStr_ReturnValue) == 0x000D10, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_8) == 0x000D20, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_SteamId_1) == 0x000D28, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_SteamId_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_PlayerName) == 0x000D30, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Method) == 0x000D40, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Method' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_MapName_1) == 0x000D50, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_MapName_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000D60, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000D70, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_LobbiesMatching) == 0x000D80, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_LobbiesMatching' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_8) == 0x000D84, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000D98, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_MapName) == 0x000DA0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_MapName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_StringToName_ReturnValue) == 0x000DB0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_9) == 0x000DB8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_LoggedOn_ReturnValue) == 0x000DC8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_LoggedOn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetSteamId_ReturnValue) == 0x000DD0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetSteamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetPersonaName_ReturnValue) == 0x000DD8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetPersonaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_ConvertSteamIdToInt64_ReturnValue_1) == 0x000DE8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_ConvertSteamIdToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_LobbiesMatching_1) == 0x000DF0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_LobbiesMatching_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetSteamId_ReturnValue_1) == 0x000DF8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetSteamId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_10) == 0x000E00, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Create_ReturnValue) == 0x000E10, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_11) == 0x000E18, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_MakeStruct_SIK_SteamId) == 0x000E28, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_MakeStruct_SIK_SteamId' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SetLobbyData_ReturnValue) == 0x000E30, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SetLobbyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000E34, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetLobbyData_ReturnValue) == 0x000E40, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetLobbyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_SteamId) == 0x000E50, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_SteamId' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_LobbyID_1) == 0x000E58, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_LobbyID_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_ConvertSteamIdToInt64_ReturnValue_2) == 0x000E60, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_ConvertSteamIdToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_byte_Variable_6) == 0x000E68, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, Temp_struct_Variable) == 0x000E70, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_LobbyID) == 0x000E78, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_LobbyID' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_bLocalPlayerHost) == 0x000E80, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_bLocalPlayerHost' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_IsPrivate_1) == 0x000E81, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_IsPrivate_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Result_2) == 0x000E82, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Result_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_LobbyID_2) == 0x000E88, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_LobbyID_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_12) == 0x000E90, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetSteamId_ReturnValue_2) == 0x000EA0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetSteamId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetGameState_ReturnValue_1) == 0x000EA8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_DynamicCast_AsBP_UPGame_State_1) == 0x000EB0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_DynamicCast_AsBP_UPGame_State_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_DynamicCast_bSuccess_3) == 0x000EB8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetCurrentMapType_InLobby_1) == 0x000EB9, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetCurrentMapType_InLobby_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetCurrentMapType_InResult_1) == 0x000EBA, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetCurrentMapType_InResult_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Not_PreBool_ReturnValue) == 0x000EBB, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Not_PreBool_ReturnValue_1) == 0x000EBC, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_BooleanAND_ReturnValue) == 0x000EBD, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_GetProjectVersion_ReturnValue_1) == 0x000EC0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_GetProjectVersion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Result_3) == 0x000ED0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Result_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_LobbyID_3) == 0x000ED8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_LobbyID_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SetLobbyData_ReturnValue_1) == 0x000EE0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SetLobbyData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_13) == 0x000EE4, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_Int64ToString_ReturnValue_1) == 0x000EF8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_Int64ToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_ParseIntoArray_ReturnValue) == 0x000F08, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Array_Contains_ReturnValue) == 0x000F18, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_Select_Default_1) == 0x000F1C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Conv_Int64ToString_ReturnValue_2) == 0x000F20, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Conv_Int64ToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_CreateLobby_ReturnValue) == 0x000F30, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_CreateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsValid_ReturnValue_9) == 0x000F38, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_14) == 0x000F3C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000F50, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SetLobbyData_ReturnValue_2) == 0x000F58, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SetLobbyData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_15) == 0x000F5C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_16) == 0x000F6C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_FriendsOnly) == 0x000F7C, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_FriendsOnly' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_17) == 0x000F80, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_Select_Default_2) == 0x000F90, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SetLobbyType_ReturnValue) == 0x000F91, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SetLobbyType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_18) == 0x000F94, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_19) == 0x000FA4, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000FB4, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_BooleanAND_ReturnValue_1) == 0x000FB5, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_ConvertSteamIdToInt64_ReturnValue_3) == 0x000FB8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_ConvertSteamIdToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_AchievementName) == 0x000FC0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_AchievementName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SetAchievement_ReturnValue) == 0x000FD0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SetAchievement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_StoreStats_ReturnValue) == 0x000FD1, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_StoreStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_20) == 0x000FD4, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Player_1) == 0x000FE8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Player_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_Player) == 0x000FF0, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Array_RemoveItem_ReturnValue) == 0x000FF8, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_Array_Add_ReturnValue_1) == 0x000FFC, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CustomEvent_IsPrivate) == 0x001000, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CustomEvent_IsPrivate' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_21) == 0x001004, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_UtcNow_ReturnValue) == 0x001018, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, K2Node_CreateDelegate_OutputDelegate_22) == 0x001020, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_IsEqualSteamId_ReturnValue) == 0x001030, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_IsEqualSteamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x001034, "Member 'BP_UPGameInstance_C_ExecuteUbergraph_BP_UPGameInstance::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetAllItems
// 0x0178 (0x0178 - 0x0000)
struct BP_UPGameInstance_C_GetAllItems final
{
public:
	TArray<struct FS_InventoryItemSave>           Items;                                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FS_InventoryItemSave>           _Items;                                            // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PickupItem_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	class ABP_PickupItem_C*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InventoryItemSave                   K2Node_MakeStruct_S_InventoryItemSave;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InventoryItem                       CallFunc_Map_Find_Value;                           // 0x0060(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_InventoryItem_C*>            CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00D8(0x0010)(ReferenceParm)
	class ABP_InventoryItem_C*                    CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InventoryItem                       CallFunc_Map_Find_Value_1;                         // 0x00F8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InventoryItemSave                   K2Node_MakeStruct_S_InventoryItemSave_1;           // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetAllItems) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetAllItems");
static_assert(sizeof(BP_UPGameInstance_C_GetAllItems) == 0x000178, "Wrong size on BP_UPGameInstance_C_GetAllItems");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, Items) == 0x000000, "Member 'BP_UPGameInstance_C_GetAllItems::Items' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, _Items) == 0x000010, "Member 'BP_UPGameInstance_C_GetAllItems::_Items' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_UPGameInstance_C_GetAllItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_UPGameInstance_C_GetAllItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_UPGameInstance_C_GetAllItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_UPGameInstance_C_GetAllItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, K2Node_MakeStruct_S_InventoryItemSave) == 0x000058, "Member 'BP_UPGameInstance_C_GetAllItems::K2Node_MakeStruct_S_InventoryItemSave' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Map_Find_Value) == 0x000060, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000D8, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F4, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Map_Find_Value_1) == 0x0000F8, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Map_Find_ReturnValue_1) == 0x000160, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, K2Node_MakeStruct_S_InventoryItemSave_1) == 0x000164, "Member 'BP_UPGameInstance_C_GetAllItems::K2Node_MakeStruct_S_InventoryItemSave_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_Array_Add_ReturnValue_1) == 0x00016C, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetAllItems, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000170, "Member 'BP_UPGameInstance_C_GetAllItems::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetCurrentMapType
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_GetCurrentMapType final
{
public:
	bool                                          InLobby;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InResult;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetCurrentMapType) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetCurrentMapType");
static_assert(sizeof(BP_UPGameInstance_C_GetCurrentMapType) == 0x000020, "Wrong size on BP_UPGameInstance_C_GetCurrentMapType");
static_assert(offsetof(BP_UPGameInstance_C_GetCurrentMapType, InLobby) == 0x000000, "Member 'BP_UPGameInstance_C_GetCurrentMapType::InLobby' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetCurrentMapType, InResult) == 0x000001, "Member 'BP_UPGameInstance_C_GetCurrentMapType::InResult' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetCurrentMapType, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_GetCurrentMapType::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetCurrentMapType, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_GetCurrentMapType::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetCurrentMapType, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000019, "Member 'BP_UPGameInstance_C_GetCurrentMapType::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetGameSession
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_GetGameSession final
{
public:
	class ABP_UPGameSession_C*                    GameSession;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameSession_C*                    CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetGameSession) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetGameSession");
static_assert(sizeof(BP_UPGameInstance_C_GetGameSession) == 0x000010, "Wrong size on BP_UPGameInstance_C_GetGameSession");
static_assert(offsetof(BP_UPGameInstance_C_GetGameSession, GameSession) == 0x000000, "Member 'BP_UPGameInstance_C_GetGameSession::GameSession' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetGameSession, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_GetGameSession::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetMaxPlayersInSession
// 0x000C (0x000C - 0x0000)
struct BP_UPGameInstance_C_GetMaxPlayersInSession final
{
public:
	int32                                         MaxPlayers;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSteamId_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLobbyMemberLimit_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetMaxPlayersInSession) == 0x000004, "Wrong alignment on BP_UPGameInstance_C_GetMaxPlayersInSession");
static_assert(sizeof(BP_UPGameInstance_C_GetMaxPlayersInSession) == 0x00000C, "Wrong size on BP_UPGameInstance_C_GetMaxPlayersInSession");
static_assert(offsetof(BP_UPGameInstance_C_GetMaxPlayersInSession, MaxPlayers) == 0x000000, "Member 'BP_UPGameInstance_C_GetMaxPlayersInSession::MaxPlayers' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetMaxPlayersInSession, CallFunc_IsValidSteamId_ReturnValue) == 0x000004, "Member 'BP_UPGameInstance_C_GetMaxPlayersInSession::CallFunc_IsValidSteamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetMaxPlayersInSession, CallFunc_GetLobbyMemberLimit_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_GetMaxPlayersInSession::CallFunc_GetLobbyMemberLimit_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetNewItemID
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_GetNewItemID final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _ItemID;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetNewItemID) == 0x000004, "Wrong alignment on BP_UPGameInstance_C_GetNewItemID");
static_assert(sizeof(BP_UPGameInstance_C_GetNewItemID) == 0x000010, "Wrong size on BP_UPGameInstance_C_GetNewItemID");
static_assert(offsetof(BP_UPGameInstance_C_GetNewItemID, ItemId) == 0x000000, "Member 'BP_UPGameInstance_C_GetNewItemID::ItemId' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetNewItemID, _ItemID) == 0x000004, "Member 'BP_UPGameInstance_C_GetNewItemID::_ItemID' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetNewItemID, Temp_int_Variable) == 0x000008, "Member 'BP_UPGameInstance_C_GetNewItemID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetNewItemID, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UPGameInstance_C_GetNewItemID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetPerfEventProperties
// 0x0070 (0x0070 - 0x0000)
struct BP_UPGameInstance_C_GetPerfEventProperties final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsHost_0;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInterior;                                        // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FrameRate;                                         // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Latency;                                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Latency;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Framerate;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _IsInterior;                                       // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _MapName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UW_Statistics_C*                        CallFunc_GetStatistics_Statistics;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPing_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetPerfEventProperties) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetPerfEventProperties");
static_assert(sizeof(BP_UPGameInstance_C_GetPerfEventProperties) == 0x000070, "Wrong size on BP_UPGameInstance_C_GetPerfEventProperties");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, MapName) == 0x000000, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::MapName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, IsHost_0) == 0x000010, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::IsHost_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, IsInterior) == 0x000011, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::IsInterior' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, FrameRate) == 0x000014, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::FrameRate' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, Latency) == 0x000018, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::Latency' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, _Latency) == 0x00001C, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::_Latency' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, _Framerate) == 0x000020, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::_Framerate' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, _IsInterior) == 0x000024, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::_IsInterior' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, _MapName) == 0x000028, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::_MapName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, CallFunc_GetStatistics_Statistics) == 0x000038, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::CallFunc_GetStatistics_Statistics' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, CallFunc_GetPing_ReturnValue) == 0x000040, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::CallFunc_GetPing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, CallFunc_GetPlayerPawn_ReturnValue) == 0x000048, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000050, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000060, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPerfEventProperties, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_UPGameInstance_C_GetPerfEventProperties::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetPlayersCount
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_GetPlayersCount final
{
public:
	int32                                         PlayersCount;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetPlayersCount) == 0x000004, "Wrong alignment on BP_UPGameInstance_C_GetPlayersCount");
static_assert(sizeof(BP_UPGameInstance_C_GetPlayersCount) == 0x000008, "Wrong size on BP_UPGameInstance_C_GetPlayersCount");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayersCount, PlayersCount) == 0x000000, "Member 'BP_UPGameInstance_C_GetPlayersCount::PlayersCount' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayersCount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_UPGameInstance_C_GetPlayersCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetPlayerWithId
// 0x0030 (0x0030 - 0x0000)
struct BP_UPGameInstance_C_GetPlayerWithId final
{
public:
	int64                                         SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetPlayerWithId) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetPlayerWithId");
static_assert(sizeof(BP_UPGameInstance_C_GetPlayerWithId) == 0x000030, "Wrong size on BP_UPGameInstance_C_GetPlayerWithId");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, SteamID) == 0x000000, "Member 'BP_UPGameInstance_C_GetPlayerWithId::SteamID' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, Player) == 0x000008, "Member 'BP_UPGameInstance_C_GetPlayerWithId::Player' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_UPGameInstance_C_GetPlayerWithId::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_UPGameInstance_C_GetPlayerWithId::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_GetPlayerWithId::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_UPGameInstance_C_GetPlayerWithId::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_UPGameInstance_C_GetPlayerWithId::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_UPGameInstance_C_GetPlayerWithId::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetPlayerWithId, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000029, "Member 'BP_UPGameInstance_C_GetPlayerWithId::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetProfilePicture
// 0x0058 (0x0058 - 0x0000)
struct BP_UPGameInstance_C_GetProfilePicture final
{
public:
	int64                                         SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ProfilePicture;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSIK_SteamId                           CallFunc_ConvertInt64ToSteamId_ReturnValue;        // 0x0010(0x0008)(NoDestructor)
	int32                                         CallFunc_GetMediumFriendAvatar_ReturnValue;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FColor>                         CallFunc_GetImageRGBA_OutData;                     // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetImageRGBA_OutWidth;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetImageRGBA_OutHeight;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetImageRGBA_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_CreateTextureFromRGBA_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetProfilePicture) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetProfilePicture");
static_assert(sizeof(BP_UPGameInstance_C_GetProfilePicture) == 0x000058, "Wrong size on BP_UPGameInstance_C_GetProfilePicture");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, SteamID) == 0x000000, "Member 'BP_UPGameInstance_C_GetProfilePicture::SteamID' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, ProfilePicture) == 0x000008, "Member 'BP_UPGameInstance_C_GetProfilePicture::ProfilePicture' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_ConvertInt64ToSteamId_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_ConvertInt64ToSteamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_GetMediumFriendAvatar_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_GetMediumFriendAvatar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_GetImageRGBA_OutData) == 0x000020, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_GetImageRGBA_OutData' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_GetImageRGBA_OutWidth) == 0x000030, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_GetImageRGBA_OutWidth' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_GetImageRGBA_OutHeight) == 0x000034, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_GetImageRGBA_OutHeight' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_GetImageRGBA_ReturnValue) == 0x000038, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_GetImageRGBA_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetProfilePicture, CallFunc_CreateTextureFromRGBA_ReturnValue) == 0x000050, "Member 'BP_UPGameInstance_C_GetProfilePicture::CallFunc_CreateTextureFromRGBA_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetResultsDetails
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_GetResultsDetails final
{
public:
	class ABP_Episodes_C*                         Episodes;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Difficulty;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFailed;                                          // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _Score;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Difficulty;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetResultsDetails) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetResultsDetails");
static_assert(sizeof(BP_UPGameInstance_C_GetResultsDetails) == 0x000020, "Wrong size on BP_UPGameInstance_C_GetResultsDetails");
static_assert(offsetof(BP_UPGameInstance_C_GetResultsDetails, Episodes) == 0x000000, "Member 'BP_UPGameInstance_C_GetResultsDetails::Episodes' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetResultsDetails, Score) == 0x000008, "Member 'BP_UPGameInstance_C_GetResultsDetails::Score' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetResultsDetails, Difficulty) == 0x00000C, "Member 'BP_UPGameInstance_C_GetResultsDetails::Difficulty' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetResultsDetails, IsSuccess) == 0x000010, "Member 'BP_UPGameInstance_C_GetResultsDetails::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetResultsDetails, IsFailed) == 0x000011, "Member 'BP_UPGameInstance_C_GetResultsDetails::IsFailed' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetResultsDetails, _Score) == 0x000014, "Member 'BP_UPGameInstance_C_GetResultsDetails::_Score' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetResultsDetails, _Difficulty) == 0x000018, "Member 'BP_UPGameInstance_C_GetResultsDetails::_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetResultsDetails, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_UPGameInstance_C_GetResultsDetails::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetSaveSessionInfo
// 0x0050 (0x0050 - 0x0000)
struct BP_UPGameInstance_C_GetSaveSessionInfo final
{
public:
	int32                                         SessionSlot_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsed;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Objective;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DaysLeft;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCustom;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Episodes_C*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSaveSessionSlot_Slot;                  // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadSavedSessionObject_SaveObject;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_EpisodesSave_C*                     K2Node_DynamicCast_AsBP_Episodes_Save;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetSaveSessionInfo) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetSaveSessionInfo");
static_assert(sizeof(BP_UPGameInstance_C_GetSaveSessionInfo) == 0x000050, "Wrong size on BP_UPGameInstance_C_GetSaveSessionInfo");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, SessionSlot_0) == 0x000000, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::SessionSlot_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, IsUsed) == 0x000004, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::IsUsed' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, Objective) == 0x000008, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::Objective' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, DaysLeft) == 0x00000C, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::DaysLeft' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, IsCustom) == 0x000010, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::IsCustom' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, CallFunc_GetSaveSessionSlot_Slot) == 0x000020, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::CallFunc_GetSaveSessionSlot_Slot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, CallFunc_LoadSavedSessionObject_SaveObject) == 0x000038, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::CallFunc_LoadSavedSessionObject_SaveObject' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, K2Node_DynamicCast_AsBP_Episodes_Save) == 0x000040, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::K2Node_DynamicCast_AsBP_Episodes_Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionInfo, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BP_UPGameInstance_C_GetSaveSessionInfo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetSaveSessionSlot
// 0x0120 (0x0120 - 0x0000)
struct BP_UPGameInstance_C_GetSaveSessionSlot final
{
public:
	class FString                                 ObjectSlot;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SessionSlot_0;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Slot;                                              // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetSaveSessionSlot) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetSaveSessionSlot");
static_assert(sizeof(BP_UPGameInstance_C_GetSaveSessionSlot) == 0x000120, "Wrong size on BP_UPGameInstance_C_GetSaveSessionSlot");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, ObjectSlot) == 0x000000, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::ObjectSlot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, SessionSlot_0) == 0x000010, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::SessionSlot_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, Slot) == 0x000018, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000040, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSaveSessionSlot, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_UPGameInstance_C_GetSaveSessionSlot::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetSessionDifficulty
// 0x0018 (0x0018 - 0x0000)
struct BP_UPGameInstance_C_GetSessionDifficulty final
{
public:
	int32                                         Difficulty;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPGameSession_C*                    CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetSessionDifficulty) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetSessionDifficulty");
static_assert(sizeof(BP_UPGameInstance_C_GetSessionDifficulty) == 0x000018, "Wrong size on BP_UPGameInstance_C_GetSessionDifficulty");
static_assert(offsetof(BP_UPGameInstance_C_GetSessionDifficulty, Difficulty) == 0x000000, "Member 'BP_UPGameInstance_C_GetSessionDifficulty::Difficulty' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSessionDifficulty, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_GetSessionDifficulty::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSessionDifficulty, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_GetSessionDifficulty::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetSessionElapsedDuration
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_GetSessionElapsedDuration final
{
public:
	class ABP_UPGameSession_C*                    GameSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Duration;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetSessionElapsedDuration) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetSessionElapsedDuration");
static_assert(sizeof(BP_UPGameInstance_C_GetSessionElapsedDuration) == 0x000020, "Wrong size on BP_UPGameInstance_C_GetSessionElapsedDuration");
static_assert(offsetof(BP_UPGameInstance_C_GetSessionElapsedDuration, GameSession) == 0x000000, "Member 'BP_UPGameInstance_C_GetSessionElapsedDuration::GameSession' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSessionElapsedDuration, Duration) == 0x000008, "Member 'BP_UPGameInstance_C_GetSessionElapsedDuration::Duration' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSessionElapsedDuration, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_UPGameInstance_C_GetSessionElapsedDuration::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSessionElapsedDuration, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_GetSessionElapsedDuration::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetSessionElapsedDuration, CallFunc_Round_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_GetSessionElapsedDuration::CallFunc_Round_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.GetStatistics
// 0x0040 (0x0040 - 0x0000)
struct BP_UPGameInstance_C_GetStatistics final
{
public:
	class UW_Statistics_C*                        Statistics;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerController_C*               K2Node_DynamicCast_AsBP_UPPlayer_Controller;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_HudParent_C*                         CallFunc_GetHudParent_HudParent;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_FindHudWidget_Widget;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_MainHUD_C*                           K2Node_DynamicCast_AsW_Main_HUD;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_GetStatistics) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_GetStatistics");
static_assert(sizeof(BP_UPGameInstance_C_GetStatistics) == 0x000040, "Wrong size on BP_UPGameInstance_C_GetStatistics");
static_assert(offsetof(BP_UPGameInstance_C_GetStatistics, Statistics) == 0x000000, "Member 'BP_UPGameInstance_C_GetStatistics::Statistics' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetStatistics, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_GetStatistics::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetStatistics, K2Node_DynamicCast_AsBP_UPPlayer_Controller) == 0x000010, "Member 'BP_UPGameInstance_C_GetStatistics::K2Node_DynamicCast_AsBP_UPPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetStatistics, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UPGameInstance_C_GetStatistics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetStatistics, CallFunc_GetHudParent_HudParent) == 0x000020, "Member 'BP_UPGameInstance_C_GetStatistics::CallFunc_GetHudParent_HudParent' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetStatistics, CallFunc_FindHudWidget_Widget) == 0x000028, "Member 'BP_UPGameInstance_C_GetStatistics::CallFunc_FindHudWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetStatistics, K2Node_DynamicCast_AsW_Main_HUD) == 0x000030, "Member 'BP_UPGameInstance_C_GetStatistics::K2Node_DynamicCast_AsW_Main_HUD' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_GetStatistics, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_UPGameInstance_C_GetStatistics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.InitCombatEvents
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_InitCombatEvents final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_InitCombatEvents) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_InitCombatEvents");
static_assert(sizeof(BP_UPGameInstance_C_InitCombatEvents) == 0x000008, "Wrong size on BP_UPGameInstance_C_InitCombatEvents");
static_assert(offsetof(BP_UPGameInstance_C_InitCombatEvents, Player) == 0x000000, "Member 'BP_UPGameInstance_C_InitCombatEvents::Player' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.InitInteriorEvents
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_InitInteriorEvents final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_InitInteriorEvents) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_InitInteriorEvents");
static_assert(sizeof(BP_UPGameInstance_C_InitInteriorEvents) == 0x000008, "Wrong size on BP_UPGameInstance_C_InitInteriorEvents");
static_assert(offsetof(BP_UPGameInstance_C_InitInteriorEvents, Player) == 0x000000, "Member 'BP_UPGameInstance_C_InitInteriorEvents::Player' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.InitPlayerAnalytics
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_InitPlayerAnalytics final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_InitPlayerAnalytics) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_InitPlayerAnalytics");
static_assert(sizeof(BP_UPGameInstance_C_InitPlayerAnalytics) == 0x000008, "Wrong size on BP_UPGameInstance_C_InitPlayerAnalytics");
static_assert(offsetof(BP_UPGameInstance_C_InitPlayerAnalytics, Player) == 0x000000, "Member 'BP_UPGameInstance_C_InitPlayerAnalytics::Player' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.InitSessionId
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameInstance_C_InitSessionId final
{
public:
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalMilliseconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_InitSessionId) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_InitSessionId");
static_assert(sizeof(BP_UPGameInstance_C_InitSessionId) == 0x000028, "Wrong size on BP_UPGameInstance_C_InitSessionId");
static_assert(offsetof(BP_UPGameInstance_C_InitSessionId, CallFunc_MakeDateTime_ReturnValue) == 0x000000, "Member 'BP_UPGameInstance_C_InitSessionId::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_InitSessionId, CallFunc_UtcNow_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_InitSessionId::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_InitSessionId, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_InitSessionId::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_InitSessionId, CallFunc_GetTotalMilliseconds_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_InitSessionId::CallFunc_GetTotalMilliseconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_InitSessionId, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'BP_UPGameInstance_C_InitSessionId::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_InitSessionId, CallFunc_FTrunc_A_ImplicitCast) == 0x000020, "Member 'BP_UPGameInstance_C_InitSessionId::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsCurrentSessionFull
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_IsCurrentSessionFull final
{
public:
	bool                                          IsFull;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumLobbyMembers_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLobbyMemberLimit_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsCurrentSessionFull) == 0x000004, "Wrong alignment on BP_UPGameInstance_C_IsCurrentSessionFull");
static_assert(sizeof(BP_UPGameInstance_C_IsCurrentSessionFull) == 0x000010, "Wrong size on BP_UPGameInstance_C_IsCurrentSessionFull");
static_assert(offsetof(BP_UPGameInstance_C_IsCurrentSessionFull, IsFull) == 0x000000, "Member 'BP_UPGameInstance_C_IsCurrentSessionFull::IsFull' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsCurrentSessionFull, CallFunc_GetNumLobbyMembers_ReturnValue) == 0x000004, "Member 'BP_UPGameInstance_C_IsCurrentSessionFull::CallFunc_GetNumLobbyMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsCurrentSessionFull, CallFunc_GetLobbyMemberLimit_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_IsCurrentSessionFull::CallFunc_GetLobbyMemberLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsCurrentSessionFull, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UPGameInstance_C_IsCurrentSessionFull::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsFirstSpawnInResults
// 0x0002 (0x0002 - 0x0000)
struct BP_UPGameInstance_C_IsFirstSpawnInResults final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInResults_InResults;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsFirstSpawnInResults) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_IsFirstSpawnInResults");
static_assert(sizeof(BP_UPGameInstance_C_IsFirstSpawnInResults) == 0x000002, "Wrong size on BP_UPGameInstance_C_IsFirstSpawnInResults");
static_assert(offsetof(BP_UPGameInstance_C_IsFirstSpawnInResults, Result) == 0x000000, "Member 'BP_UPGameInstance_C_IsFirstSpawnInResults::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsFirstSpawnInResults, CallFunc_IsInResults_InResults) == 0x000001, "Member 'BP_UPGameInstance_C_IsFirstSpawnInResults::CallFunc_IsInResults_InResults' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsInLobby
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_IsInLobby final
{
public:
	bool                                          InLobby;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsInLobby) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_IsInLobby");
static_assert(sizeof(BP_UPGameInstance_C_IsInLobby) == 0x000020, "Wrong size on BP_UPGameInstance_C_IsInLobby");
static_assert(offsetof(BP_UPGameInstance_C_IsInLobby, InLobby) == 0x000000, "Member 'BP_UPGameInstance_C_IsInLobby::InLobby' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsInLobby, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_IsInLobby::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsInLobby, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_IsInLobby::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsInResults
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_IsInResults final
{
public:
	bool                                          InResults;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsInResults) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_IsInResults");
static_assert(sizeof(BP_UPGameInstance_C_IsInResults) == 0x000020, "Wrong size on BP_UPGameInstance_C_IsInResults");
static_assert(offsetof(BP_UPGameInstance_C_IsInResults, InResults) == 0x000000, "Member 'BP_UPGameInstance_C_IsInResults::InResults' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsInResults, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_IsInResults::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsInResults, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_IsInResults::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsInSession
// 0x0005 (0x0005 - 0x0000)
struct BP_UPGameInstance_C_IsInSession final
{
public:
	bool                                          InSession;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_Int64Int64_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsInSession) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_IsInSession");
static_assert(sizeof(BP_UPGameInstance_C_IsInSession) == 0x000005, "Wrong size on BP_UPGameInstance_C_IsInSession");
static_assert(offsetof(BP_UPGameInstance_C_IsInSession, InSession) == 0x000000, "Member 'BP_UPGameInstance_C_IsInSession::InSession' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsInSession, CallFunc_IsEmpty_ReturnValue) == 0x000001, "Member 'BP_UPGameInstance_C_IsInSession::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsInSession, CallFunc_GreaterEqual_Int64Int64_ReturnValue) == 0x000002, "Member 'BP_UPGameInstance_C_IsInSession::CallFunc_GreaterEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsInSession, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_UPGameInstance_C_IsInSession::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsInSession, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_UPGameInstance_C_IsInSession::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsLobbyVersion
// 0x0038 (0x0038 - 0x0000)
struct BP_UPGameInstance_C_IsLobbyVersion final
{
public:
	struct FSIK_SteamId                           LobbyID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FString                                 Version;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Compatible;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLobbyData_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsLobbyVersion) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_IsLobbyVersion");
static_assert(sizeof(BP_UPGameInstance_C_IsLobbyVersion) == 0x000038, "Wrong size on BP_UPGameInstance_C_IsLobbyVersion");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersion, LobbyID_0) == 0x000000, "Member 'BP_UPGameInstance_C_IsLobbyVersion::LobbyID_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersion, Version) == 0x000008, "Member 'BP_UPGameInstance_C_IsLobbyVersion::Version' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersion, Compatible) == 0x000018, "Member 'BP_UPGameInstance_C_IsLobbyVersion::Compatible' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersion, CallFunc_GetLobbyData_ReturnValue) == 0x000020, "Member 'BP_UPGameInstance_C_IsLobbyVersion::CallFunc_GetLobbyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersion, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_IsLobbyVersion::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsLobbyVersionCompatible
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameInstance_C_IsLobbyVersionCompatible final
{
public:
	struct FSIK_SteamId                           LobbyID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Compatible;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetProjectVersion_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLobbyVersion_Compatible;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsLobbyVersionCompatible) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_IsLobbyVersionCompatible");
static_assert(sizeof(BP_UPGameInstance_C_IsLobbyVersionCompatible) == 0x000028, "Wrong size on BP_UPGameInstance_C_IsLobbyVersionCompatible");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersionCompatible, LobbyID_0) == 0x000000, "Member 'BP_UPGameInstance_C_IsLobbyVersionCompatible::LobbyID_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersionCompatible, Compatible) == 0x000008, "Member 'BP_UPGameInstance_C_IsLobbyVersionCompatible::Compatible' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersionCompatible, CallFunc_GetProjectVersion_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_IsLobbyVersionCompatible::CallFunc_GetProjectVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLobbyVersionCompatible, CallFunc_IsLobbyVersion_Compatible) == 0x000020, "Member 'BP_UPGameInstance_C_IsLobbyVersionCompatible::CallFunc_IsLobbyVersion_Compatible' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsLocalPlayerDead
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_IsLocalPlayerDead final
{
public:
	bool                                          IsDead;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsLocalPlayerDead) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_IsLocalPlayerDead");
static_assert(sizeof(BP_UPGameInstance_C_IsLocalPlayerDead) == 0x000020, "Wrong size on BP_UPGameInstance_C_IsLocalPlayerDead");
static_assert(offsetof(BP_UPGameInstance_C_IsLocalPlayerDead, IsDead) == 0x000000, "Member 'BP_UPGameInstance_C_IsLocalPlayerDead::IsDead' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLocalPlayerDead, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_IsLocalPlayerDead::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLocalPlayerDead, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000010, "Member 'BP_UPGameInstance_C_IsLocalPlayerDead::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLocalPlayerDead, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UPGameInstance_C_IsLocalPlayerDead::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsLoggedIn
// 0x0002 (0x0002 - 0x0000)
struct BP_UPGameInstance_C_IsLoggedIn final
{
public:
	bool                                          LoggedIn;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsLoggedIn) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_IsLoggedIn");
static_assert(sizeof(BP_UPGameInstance_C_IsLoggedIn) == 0x000002, "Wrong size on BP_UPGameInstance_C_IsLoggedIn");
static_assert(offsetof(BP_UPGameInstance_C_IsLoggedIn, LoggedIn) == 0x000000, "Member 'BP_UPGameInstance_C_IsLoggedIn::LoggedIn' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsLoggedIn, CallFunc_NotEqual_Int64Int64_ReturnValue) == 0x000001, "Member 'BP_UPGameInstance_C_IsLoggedIn::CallFunc_NotEqual_Int64Int64_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsSessionFull
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameInstance_C_IsSessionFull final
{
public:
	int64                                         SessionID_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFull;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           CallFunc_ConvertInt64ToSteamId_ReturnValue;        // 0x0010(0x0008)(NoDestructor)
	int32                                         CallFunc_GetNumLobbyMembers_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLobbyMemberLimit_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsSessionFull) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_IsSessionFull");
static_assert(sizeof(BP_UPGameInstance_C_IsSessionFull) == 0x000028, "Wrong size on BP_UPGameInstance_C_IsSessionFull");
static_assert(offsetof(BP_UPGameInstance_C_IsSessionFull, SessionID_0) == 0x000000, "Member 'BP_UPGameInstance_C_IsSessionFull::SessionID_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsSessionFull, IsFull) == 0x000008, "Member 'BP_UPGameInstance_C_IsSessionFull::IsFull' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsSessionFull, CallFunc_ConvertInt64ToSteamId_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_IsSessionFull::CallFunc_ConvertInt64ToSteamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsSessionFull, CallFunc_GetNumLobbyMembers_ReturnValue) == 0x000018, "Member 'BP_UPGameInstance_C_IsSessionFull::CallFunc_GetNumLobbyMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsSessionFull, CallFunc_GetLobbyMemberLimit_ReturnValue) == 0x00001C, "Member 'BP_UPGameInstance_C_IsSessionFull::CallFunc_GetLobbyMemberLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsSessionFull, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_UPGameInstance_C_IsSessionFull::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsTempSaveFile
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_IsTempSaveFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsTemp;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue_1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsTempSaveFile) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_IsTempSaveFile");
static_assert(sizeof(BP_UPGameInstance_C_IsTempSaveFile) == 0x000020, "Wrong size on BP_UPGameInstance_C_IsTempSaveFile");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, Filename) == 0x000000, "Member 'BP_UPGameInstance_C_IsTempSaveFile::Filename' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, IsTemp) == 0x000010, "Member 'BP_UPGameInstance_C_IsTempSaveFile::IsTemp' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_StartsWith_ReturnValue) == 0x000011, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000012, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000013, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000014, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_StartsWith_ReturnValue_1) == 0x000015, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_StartsWith_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_BooleanOR_ReturnValue_1) == 0x000017, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_BooleanOR_ReturnValue_2) == 0x000018, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTempSaveFile, CallFunc_BooleanOR_ReturnValue_3) == 0x000019, "Member 'BP_UPGameInstance_C_IsTempSaveFile::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.IsTutorialDone
// 0x000C (0x000C - 0x0000)
struct BP_UPGameInstance_C_IsTutorialDone final
{
public:
	class FName                                   TutorialStep;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDone;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_IsTutorialDone) == 0x000004, "Wrong alignment on BP_UPGameInstance_C_IsTutorialDone");
static_assert(sizeof(BP_UPGameInstance_C_IsTutorialDone) == 0x00000C, "Wrong size on BP_UPGameInstance_C_IsTutorialDone");
static_assert(offsetof(BP_UPGameInstance_C_IsTutorialDone, TutorialStep) == 0x000000, "Member 'BP_UPGameInstance_C_IsTutorialDone::TutorialStep' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTutorialDone, IsDone) == 0x000008, "Member 'BP_UPGameInstance_C_IsTutorialDone::IsDone' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTutorialDone, CallFunc_Map_Find_Value) == 0x000009, "Member 'BP_UPGameInstance_C_IsTutorialDone::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_IsTutorialDone, CallFunc_Map_Find_ReturnValue) == 0x00000A, "Member 'BP_UPGameInstance_C_IsTutorialDone::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.LoadCustomGameConfig
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameInstance_C_LoadCustomGameConfig final
{
public:
	int32                                         SaveSlot;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCustomGame_0;                                    // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadSavedSessionObject_SaveObject;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CustomGameConfig_C*                 K2Node_DynamicCast_AsBP_Custom_Game_Config;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_LoadCustomGameConfig) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_LoadCustomGameConfig");
static_assert(sizeof(BP_UPGameInstance_C_LoadCustomGameConfig) == 0x000028, "Wrong size on BP_UPGameInstance_C_LoadCustomGameConfig");
static_assert(offsetof(BP_UPGameInstance_C_LoadCustomGameConfig, SaveSlot) == 0x000000, "Member 'BP_UPGameInstance_C_LoadCustomGameConfig::SaveSlot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadCustomGameConfig, IsCustomGame_0) == 0x000004, "Member 'BP_UPGameInstance_C_LoadCustomGameConfig::IsCustomGame_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadCustomGameConfig, CallFunc_LoadSavedSessionObject_SaveObject) == 0x000008, "Member 'BP_UPGameInstance_C_LoadCustomGameConfig::CallFunc_LoadSavedSessionObject_SaveObject' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadCustomGameConfig, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_LoadCustomGameConfig::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadCustomGameConfig, K2Node_DynamicCast_AsBP_Custom_Game_Config) == 0x000018, "Member 'BP_UPGameInstance_C_LoadCustomGameConfig::K2Node_DynamicCast_AsBP_Custom_Game_Config' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadCustomGameConfig, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_UPGameInstance_C_LoadCustomGameConfig::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.LoadPlayerSettings
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_LoadPlayerSettings final
{
public:
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerSettingsSave_C*               K2Node_DynamicCast_AsBP_Player_Settings_Save;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_LoadPlayerSettings) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_LoadPlayerSettings");
static_assert(sizeof(BP_UPGameInstance_C_LoadPlayerSettings) == 0x000020, "Wrong size on BP_UPGameInstance_C_LoadPlayerSettings");
static_assert(offsetof(BP_UPGameInstance_C_LoadPlayerSettings, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000000, "Member 'BP_UPGameInstance_C_LoadPlayerSettings::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadPlayerSettings, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_LoadPlayerSettings::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadPlayerSettings, K2Node_DynamicCast_AsBP_Player_Settings_Save) == 0x000010, "Member 'BP_UPGameInstance_C_LoadPlayerSettings::K2Node_DynamicCast_AsBP_Player_Settings_Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadPlayerSettings, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UPGameInstance_C_LoadPlayerSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.LoadSavedSession
// 0x0128 (0x0128 - 0x0000)
struct BP_UPGameInstance_C_LoadSavedSession final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Scoring_C*                          CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadSavedSessionObject_SaveObject;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Episodes_C*                         CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameState_C*                      K2Node_DynamicCast_AsBP_UPGame_State;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadSavedSessionObject_SaveObject_1;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0050(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSaveSessionSlot_Slot;                  // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadSavedSessionObject_SaveObject_2;      // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadSavedSessionObject_SaveObject_3;      // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_LoadSavedSession) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_LoadSavedSession");
static_assert(sizeof(BP_UPGameInstance_C_LoadSavedSession) == 0x000128, "Wrong size on BP_UPGameInstance_C_LoadSavedSession");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_UPGameInstance_C_LoadSavedSession::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_UPGameInstance_C_LoadSavedSession::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_LoadSavedSessionObject_SaveObject) == 0x000018, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_LoadSavedSessionObject_SaveObject' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000020, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, K2Node_DynamicCast_AsBP_UPGame_State) == 0x000030, "Member 'BP_UPGameInstance_C_LoadSavedSession::K2Node_DynamicCast_AsBP_UPGame_State' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_UPGameInstance_C_LoadSavedSession::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_LoadSavedSessionObject_SaveObject_1) == 0x000040, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_LoadSavedSessionObject_SaveObject_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000050, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'BP_UPGameInstance_C_LoadSavedSession::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_UPGameInstance_C_LoadSavedSession::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_GetSaveSessionSlot_Slot) == 0x000100, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_GetSaveSessionSlot_Slot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_LoadSavedSessionObject_SaveObject_2) == 0x000110, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_LoadSavedSessionObject_SaveObject_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_SaveGameToSlot_ReturnValue) == 0x000118, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_IsValid_ReturnValue) == 0x000119, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSession, CallFunc_LoadSavedSessionObject_SaveObject_3) == 0x000120, "Member 'BP_UPGameInstance_C_LoadSavedSession::CallFunc_LoadSavedSessionObject_SaveObject_3' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.LoadSavedSessionObject
// 0x0040 (0x0040 - 0x0000)
struct BP_UPGameInstance_C_LoadSavedSessionObject final
{
public:
	class FString                                 ObjectSlot;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SessionSlot_0;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              SaveObject;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSaveSessionSlot_Slot;                  // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_LoadSavedSessionObject) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_LoadSavedSessionObject");
static_assert(sizeof(BP_UPGameInstance_C_LoadSavedSessionObject) == 0x000040, "Wrong size on BP_UPGameInstance_C_LoadSavedSessionObject");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSessionObject, ObjectSlot) == 0x000000, "Member 'BP_UPGameInstance_C_LoadSavedSessionObject::ObjectSlot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSessionObject, SessionSlot_0) == 0x000010, "Member 'BP_UPGameInstance_C_LoadSavedSessionObject::SessionSlot_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSessionObject, SaveObject) == 0x000018, "Member 'BP_UPGameInstance_C_LoadSavedSessionObject::SaveObject' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSessionObject, CallFunc_GetSaveSessionSlot_Slot) == 0x000020, "Member 'BP_UPGameInstance_C_LoadSavedSessionObject::CallFunc_GetSaveSessionSlot_Slot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSessionObject, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_LoadSavedSessionObject::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadSavedSessionObject, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000038, "Member 'BP_UPGameInstance_C_LoadSavedSessionObject::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.LoadTutorial
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_LoadTutorial final
{
public:
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_TutorialSave_C*                     K2Node_DynamicCast_AsBP_Tutorial_Save;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_LoadTutorial) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_LoadTutorial");
static_assert(sizeof(BP_UPGameInstance_C_LoadTutorial) == 0x000020, "Wrong size on BP_UPGameInstance_C_LoadTutorial");
static_assert(offsetof(BP_UPGameInstance_C_LoadTutorial, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000000, "Member 'BP_UPGameInstance_C_LoadTutorial::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadTutorial, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_LoadTutorial::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadTutorial, K2Node_DynamicCast_AsBP_Tutorial_Save) == 0x000010, "Member 'BP_UPGameInstance_C_LoadTutorial::K2Node_DynamicCast_AsBP_Tutorial_Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_LoadTutorial, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UPGameInstance_C_LoadTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.MakeIdentification
// 0x0158 (0x0158 - 0x0000)
struct BP_UPGameInstance_C_MakeIdentification final
{
public:
	class FString                                 UserId_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, struct FBlueprintJsonValue> UserProperties;                                  // 0x0010(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBlueprintJsonObject                   Identification;                                    // 0x0060(0x0010)(Parm, OutParm)
	struct FBlueprintJsonObject                   _Properties;                                       // 0x0070(0x0010)(Edit, BlueprintVisible)
	struct FBlueprintJsonObject                   _Identification;                                   // 0x0080(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0098(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonValue                    CallFunc_Map_Find_Value;                           // 0x00C0(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonValue                    CallFunc_JsonMakeString_ReturnValue;               // 0x00D8(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonObject                   CallFunc_JsonMake_ReturnValue;                     // 0x00F8(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeObject_ReturnValue;               // 0x0108(0x0010)()
	struct FBlueprintJsonObject                   CallFunc_JsonSetField_ReturnValue;                 // 0x0118(0x0010)(ConstParm)
	struct FBlueprintJsonObject                   CallFunc_JsonSetField_ReturnValue_1;               // 0x0128(0x0010)(ConstParm)
	struct FBlueprintJsonObject                   CallFunc_JsonMake_ReturnValue_1;                   // 0x0138(0x0010)()
	struct FBlueprintJsonObject                   CallFunc_JsonSetField_ReturnValue_2;               // 0x0148(0x0010)(ConstParm)
};
static_assert(alignof(BP_UPGameInstance_C_MakeIdentification) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_MakeIdentification");
static_assert(sizeof(BP_UPGameInstance_C_MakeIdentification) == 0x000158, "Wrong size on BP_UPGameInstance_C_MakeIdentification");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, UserId_0) == 0x000000, "Member 'BP_UPGameInstance_C_MakeIdentification::UserId_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, UserProperties) == 0x000010, "Member 'BP_UPGameInstance_C_MakeIdentification::UserProperties' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, Identification) == 0x000060, "Member 'BP_UPGameInstance_C_MakeIdentification::Identification' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, _Properties) == 0x000070, "Member 'BP_UPGameInstance_C_MakeIdentification::_Properties' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, _Identification) == 0x000080, "Member 'BP_UPGameInstance_C_MakeIdentification::_Identification' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_UPGameInstance_C_MakeIdentification::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_Map_Keys_Keys) == 0x000098, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_JsonMakeString_ReturnValue) == 0x0000D8, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_JsonMakeString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BP_UPGameInstance_C_MakeIdentification::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_JsonMake_ReturnValue) == 0x0000F8, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_JsonMake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_JsonMakeObject_ReturnValue) == 0x000108, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_JsonMakeObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_JsonSetField_ReturnValue) == 0x000118, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_JsonSetField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_JsonSetField_ReturnValue_1) == 0x000128, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_JsonSetField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_JsonMake_ReturnValue_1) == 0x000138, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_JsonMake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_MakeIdentification, CallFunc_JsonSetField_ReturnValue_2) == 0x000148, "Member 'BP_UPGameInstance_C_MakeIdentification::CallFunc_JsonSetField_ReturnValue_2' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07
// 0x0003 (0x0003 - 0x0000)
struct BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07 final
{
public:
	ESIK_Result                                   Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_ChatRoomEnterResponse                    ChatRoomEnterResponse;                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07");
static_assert(sizeof(BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07) == 0x000003, "Wrong size on BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07");
static_assert(offsetof(BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07, Result) == 0x000000, "Member 'BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07, bLocked) == 0x000001, "Member 'BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07::bLocked' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07, ChatRoomEnterResponse) == 0x000002, "Member 'BP_UPGameInstance_C_OnFailure_3F21F4844E933DB6BDE924BFD6B4CF07::ChatRoomEnterResponse' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C final
{
public:
	ESIK_Result                                   Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           LobbyID_0;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C");
static_assert(sizeof(BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C) == 0x000010, "Wrong size on BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C");
static_assert(offsetof(BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C, Result) == 0x000000, "Member 'BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C, LobbyID_0) == 0x000008, "Member 'BP_UPGameInstance_C_OnFailure_C16FC9C64CE22E0C5B9170B23CEA3D5C::LobbyID_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OnFailure_D1760A044E6CA70A24A8B6BE23278679
// 0x0004 (0x0004 - 0x0000)
struct BP_UPGameInstance_C_OnFailure_D1760A044E6CA70A24A8B6BE23278679 final
{
public:
	int32                                         LobbiesMatching;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OnFailure_D1760A044E6CA70A24A8B6BE23278679) == 0x000004, "Wrong alignment on BP_UPGameInstance_C_OnFailure_D1760A044E6CA70A24A8B6BE23278679");
static_assert(sizeof(BP_UPGameInstance_C_OnFailure_D1760A044E6CA70A24A8B6BE23278679) == 0x000004, "Wrong size on BP_UPGameInstance_C_OnFailure_D1760A044E6CA70A24A8B6BE23278679");
static_assert(offsetof(BP_UPGameInstance_C_OnFailure_D1760A044E6CA70A24A8B6BE23278679, LobbiesMatching) == 0x000000, "Member 'BP_UPGameInstance_C_OnFailure_D1760A044E6CA70A24A8B6BE23278679::LobbiesMatching' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07
// 0x0003 (0x0003 - 0x0000)
struct BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07 final
{
public:
	ESIK_Result                                   Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESIK_ChatRoomEnterResponse                    ChatRoomEnterResponse;                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07");
static_assert(sizeof(BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07) == 0x000003, "Wrong size on BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07");
static_assert(offsetof(BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07, Result) == 0x000000, "Member 'BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07, bLocked) == 0x000001, "Member 'BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07::bLocked' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07, ChatRoomEnterResponse) == 0x000002, "Member 'BP_UPGameInstance_C_OnSuccess_3F21F4844E933DB6BDE924BFD6B4CF07::ChatRoomEnterResponse' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C final
{
public:
	ESIK_Result                                   Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           LobbyID_0;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C");
static_assert(sizeof(BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C) == 0x000010, "Wrong size on BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C");
static_assert(offsetof(BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C, Result) == 0x000000, "Member 'BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C, LobbyID_0) == 0x000008, "Member 'BP_UPGameInstance_C_OnSuccess_C16FC9C64CE22E0C5B9170B23CEA3D5C::LobbyID_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OnSuccess_D1760A044E6CA70A24A8B6BE23278679
// 0x0004 (0x0004 - 0x0000)
struct BP_UPGameInstance_C_OnSuccess_D1760A044E6CA70A24A8B6BE23278679 final
{
public:
	int32                                         LobbiesMatching;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OnSuccess_D1760A044E6CA70A24A8B6BE23278679) == 0x000004, "Wrong alignment on BP_UPGameInstance_C_OnSuccess_D1760A044E6CA70A24A8B6BE23278679");
static_assert(sizeof(BP_UPGameInstance_C_OnSuccess_D1760A044E6CA70A24A8B6BE23278679) == 0x000004, "Wrong size on BP_UPGameInstance_C_OnSuccess_D1760A044E6CA70A24A8B6BE23278679");
static_assert(offsetof(BP_UPGameInstance_C_OnSuccess_D1760A044E6CA70A24A8B6BE23278679, LobbiesMatching) == 0x000000, "Member 'BP_UPGameInstance_C_OnSuccess_D1760A044E6CA70A24A8B6BE23278679::LobbiesMatching' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_AbsoluteServerTravel
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_OS_AbsoluteServerTravel final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_AbsoluteServerTravel) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OS_AbsoluteServerTravel");
static_assert(sizeof(BP_UPGameInstance_C_OS_AbsoluteServerTravel) == 0x000010, "Wrong size on BP_UPGameInstance_C_OS_AbsoluteServerTravel");
static_assert(offsetof(BP_UPGameInstance_C_OS_AbsoluteServerTravel, MapName) == 0x000000, "Member 'BP_UPGameInstance_C_OS_AbsoluteServerTravel::MapName' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_CreateSession
// 0x0018 (0x0018 - 0x0000)
struct BP_UPGameInstance_C_OS_CreateSession final
{
public:
	class FString                                 SessionName_0;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          FriendsOnly;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CustomGame;                                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_CreateSession) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OS_CreateSession");
static_assert(sizeof(BP_UPGameInstance_C_OS_CreateSession) == 0x000018, "Wrong size on BP_UPGameInstance_C_OS_CreateSession");
static_assert(offsetof(BP_UPGameInstance_C_OS_CreateSession, SessionName_0) == 0x000000, "Member 'BP_UPGameInstance_C_OS_CreateSession::SessionName_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OS_CreateSession, FriendsOnly) == 0x000010, "Member 'BP_UPGameInstance_C_OS_CreateSession::FriendsOnly' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OS_CreateSession, CustomGame) == 0x000011, "Member 'BP_UPGameInstance_C_OS_CreateSession::CustomGame' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_EndLogin
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameInstance_C_OS_EndLogin final
{
public:
	int64                                         SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlayerName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Method;                                            // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_EndLogin) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OS_EndLogin");
static_assert(sizeof(BP_UPGameInstance_C_OS_EndLogin) == 0x000028, "Wrong size on BP_UPGameInstance_C_OS_EndLogin");
static_assert(offsetof(BP_UPGameInstance_C_OS_EndLogin, SteamID) == 0x000000, "Member 'BP_UPGameInstance_C_OS_EndLogin::SteamID' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OS_EndLogin, PlayerName) == 0x000008, "Member 'BP_UPGameInstance_C_OS_EndLogin::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OS_EndLogin, Method) == 0x000018, "Member 'BP_UPGameInstance_C_OS_EndLogin::Method' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_FindSessions
// 0x0002 (0x0002 - 0x0000)
struct BP_UPGameInstance_C_OS_FindSessions final
{
public:
	ESIK_LobbyDistanceFilter                      DistanceFilter;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludeCustomGames;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_FindSessions) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_OS_FindSessions");
static_assert(sizeof(BP_UPGameInstance_C_OS_FindSessions) == 0x000002, "Wrong size on BP_UPGameInstance_C_OS_FindSessions");
static_assert(offsetof(BP_UPGameInstance_C_OS_FindSessions, DistanceFilter) == 0x000000, "Member 'BP_UPGameInstance_C_OS_FindSessions::DistanceFilter' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OS_FindSessions, IncludeCustomGames) == 0x000001, "Member 'BP_UPGameInstance_C_OS_FindSessions::IncludeCustomGames' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_HostMigrated
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_OS_HostMigrated final
{
public:
	struct FSIK_SteamId                           LobbyID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          bLocalPlayerHost;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_HostMigrated) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OS_HostMigrated");
static_assert(sizeof(BP_UPGameInstance_C_OS_HostMigrated) == 0x000010, "Wrong size on BP_UPGameInstance_C_OS_HostMigrated");
static_assert(offsetof(BP_UPGameInstance_C_OS_HostMigrated, LobbyID_0) == 0x000000, "Member 'BP_UPGameInstance_C_OS_HostMigrated::LobbyID_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OS_HostMigrated, bLocalPlayerHost) == 0x000008, "Member 'BP_UPGameInstance_C_OS_HostMigrated::bLocalPlayerHost' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_InviteAccepted
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_OS_InviteAccepted final
{
public:
	struct FSIK_SteamId                           SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FSIK_SteamId                           LobbyID_0;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_UPGameInstance_C_OS_InviteAccepted) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OS_InviteAccepted");
static_assert(sizeof(BP_UPGameInstance_C_OS_InviteAccepted) == 0x000010, "Wrong size on BP_UPGameInstance_C_OS_InviteAccepted");
static_assert(offsetof(BP_UPGameInstance_C_OS_InviteAccepted, SteamID) == 0x000000, "Member 'BP_UPGameInstance_C_OS_InviteAccepted::SteamID' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_OS_InviteAccepted, LobbyID_0) == 0x000008, "Member 'BP_UPGameInstance_C_OS_InviteAccepted::LobbyID_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_JoinSession
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_OS_JoinSession final
{
public:
	int64                                         SessionID_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_JoinSession) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OS_JoinSession");
static_assert(sizeof(BP_UPGameInstance_C_OS_JoinSession) == 0x000008, "Wrong size on BP_UPGameInstance_C_OS_JoinSession");
static_assert(offsetof(BP_UPGameInstance_C_OS_JoinSession, SessionID_0) == 0x000000, "Member 'BP_UPGameInstance_C_OS_JoinSession::SessionID_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_PrepareHostMigration
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_OS_PrepareHostMigration final
{
public:
	bool                                          IsPrivate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_PrepareHostMigration) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_OS_PrepareHostMigration");
static_assert(sizeof(BP_UPGameInstance_C_OS_PrepareHostMigration) == 0x000001, "Wrong size on BP_UPGameInstance_C_OS_PrepareHostMigration");
static_assert(offsetof(BP_UPGameInstance_C_OS_PrepareHostMigration, IsPrivate) == 0x000000, "Member 'BP_UPGameInstance_C_OS_PrepareHostMigration::IsPrivate' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_ServerTravel
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_OS_ServerTravel final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_ServerTravel) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_OS_ServerTravel");
static_assert(sizeof(BP_UPGameInstance_C_OS_ServerTravel) == 0x000010, "Wrong size on BP_UPGameInstance_C_OS_ServerTravel");
static_assert(offsetof(BP_UPGameInstance_C_OS_ServerTravel, MapName) == 0x000000, "Member 'BP_UPGameInstance_C_OS_ServerTravel::MapName' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.OS_SetSessionFriendsOnly
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_OS_SetSessionFriendsOnly final
{
public:
	bool                                          FriendsOnly;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_OS_SetSessionFriendsOnly) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_OS_SetSessionFriendsOnly");
static_assert(sizeof(BP_UPGameInstance_C_OS_SetSessionFriendsOnly) == 0x000001, "Wrong size on BP_UPGameInstance_C_OS_SetSessionFriendsOnly");
static_assert(offsetof(BP_UPGameInstance_C_OS_SetSessionFriendsOnly, FriendsOnly) == 0x000000, "Member 'BP_UPGameInstance_C_OS_SetSessionFriendsOnly::FriendsOnly' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.PlayerCreated
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_PlayerCreated final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_PlayerCreated) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_PlayerCreated");
static_assert(sizeof(BP_UPGameInstance_C_PlayerCreated) == 0x000008, "Wrong size on BP_UPGameInstance_C_PlayerCreated");
static_assert(offsetof(BP_UPGameInstance_C_PlayerCreated, Player) == 0x000000, "Member 'BP_UPGameInstance_C_PlayerCreated::Player' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.PlayerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_PlayerDestroyed final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_PlayerDestroyed) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_PlayerDestroyed");
static_assert(sizeof(BP_UPGameInstance_C_PlayerDestroyed) == 0x000008, "Wrong size on BP_UPGameInstance_C_PlayerDestroyed");
static_assert(offsetof(BP_UPGameInstance_C_PlayerDestroyed, Player) == 0x000000, "Member 'BP_UPGameInstance_C_PlayerDestroyed::Player' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.PostLogin
// 0x0030 (0x0030 - 0x0000)
struct BP_UPGameInstance_C_PostLogin final
{
public:
	class FString                                 UserId_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Username;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LoginMethod;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_PostLogin) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_PostLogin");
static_assert(sizeof(BP_UPGameInstance_C_PostLogin) == 0x000030, "Wrong size on BP_UPGameInstance_C_PostLogin");
static_assert(offsetof(BP_UPGameInstance_C_PostLogin, UserId_0) == 0x000000, "Member 'BP_UPGameInstance_C_PostLogin::UserId_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PostLogin, Username) == 0x000010, "Member 'BP_UPGameInstance_C_PostLogin::Username' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PostLogin, LoginMethod) == 0x000020, "Member 'BP_UPGameInstance_C_PostLogin::LoginMethod' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.ProcessSteamLobbies
// 0x00D8 (0x00D8 - 0x0000)
struct BP_UPGameInstance_C_ProcessSteamLobbies final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludeCustomGames;                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_FindSessionsResult                  Result;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          _IsCustomGame;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_OnlineSession>               _Sessions;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetProjectVersion_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSIK_SteamId                           CallFunc_GetLobbyByIndex_ReturnValue;              // 0x0050(0x0008)(NoDestructor)
	int32                                         CallFunc_GetLobbyMemberLimit_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumLobbyMembers_ReturnValue;           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_ConvertSteamIdToInt64_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLobbyData_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLobbyVersion_Compatible;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLobbyData_ReturnValue_1;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OnlineSession                       K2Node_MakeStruct_S_OnlineSession;                 // 0x0098(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_FindSessionsResult                  K2Node_MakeStruct_S_FindSessionsResult;            // 0x00C8(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_ProcessSteamLobbies) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_ProcessSteamLobbies");
static_assert(sizeof(BP_UPGameInstance_C_ProcessSteamLobbies) == 0x0000D8, "Wrong size on BP_UPGameInstance_C_ProcessSteamLobbies");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, Count) == 0x000000, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::Count' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, IncludeCustomGames) == 0x000004, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::IncludeCustomGames' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, Result) == 0x000008, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, _IsCustomGame) == 0x000018, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::_IsCustomGame' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, _Sessions) == 0x000020, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::_Sessions' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_GetProjectVersion_ReturnValue) == 0x000038, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_GetProjectVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, Temp_int_Variable) == 0x000048, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_GetLobbyByIndex_ReturnValue) == 0x000050, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_GetLobbyByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_GetLobbyMemberLimit_ReturnValue) == 0x000058, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_GetLobbyMemberLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_GetNumLobbyMembers_ReturnValue) == 0x00005C, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_GetNumLobbyMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_ConvertSteamIdToInt64_ReturnValue) == 0x000060, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_ConvertSteamIdToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_GetLobbyData_ReturnValue) == 0x000068, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_GetLobbyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_IsLobbyVersion_Compatible) == 0x000078, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_IsLobbyVersion_Compatible' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000079, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007A, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_GetLobbyData_ReturnValue_1) == 0x000080, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_GetLobbyData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, K2Node_MakeStruct_S_OnlineSession) == 0x000098, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::K2Node_MakeStruct_S_OnlineSession' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_BooleanOR_ReturnValue) == 0x0000C0, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ProcessSteamLobbies, K2Node_MakeStruct_S_FindSessionsResult) == 0x0000C8, "Member 'BP_UPGameInstance_C_ProcessSteamLobbies::K2Node_MakeStruct_S_FindSessionsResult' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.PullPendingEvents
// 0x0090 (0x0090 - 0x0000)
struct BP_UPGameInstance_C_PullPendingEvents final
{
public:
	bool                                          HasEvents;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintJsonValue>            EventsArray;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm)
	TArray<struct FBlueprintJsonValue>            _Events;                                           // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintJsonValue>            K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	TArray<struct FBlueprintJsonObject>           K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonObject                   CallFunc_Array_Get_Item;                           // 0x0060(0x0010)()
	struct FBlueprintJsonValue                    CallFunc_JsonMakeObject_ReturnValue;               // 0x0070(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_PullPendingEvents) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_PullPendingEvents");
static_assert(sizeof(BP_UPGameInstance_C_PullPendingEvents) == 0x000090, "Wrong size on BP_UPGameInstance_C_PullPendingEvents");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, HasEvents) == 0x000000, "Member 'BP_UPGameInstance_C_PullPendingEvents::HasEvents' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, EventsArray) == 0x000008, "Member 'BP_UPGameInstance_C_PullPendingEvents::EventsArray' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, _Events) == 0x000018, "Member 'BP_UPGameInstance_C_PullPendingEvents::_Events' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_UPGameInstance_C_PullPendingEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_UPGameInstance_C_PullPendingEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_PullPendingEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_UPGameInstance_C_PullPendingEvents::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, K2Node_MakeArray_Array_1) == 0x000048, "Member 'BP_UPGameInstance_C_PullPendingEvents::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000058, "Member 'BP_UPGameInstance_C_PullPendingEvents::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_UPGameInstance_C_PullPendingEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, CallFunc_JsonMakeObject_ReturnValue) == 0x000070, "Member 'BP_UPGameInstance_C_PullPendingEvents::CallFunc_JsonMakeObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_UPGameInstance_C_PullPendingEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_UPGameInstance_C_PullPendingEvents::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_PullPendingEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_UPGameInstance_C_PullPendingEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SavePlayerSettings
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_SavePlayerSettings final
{
public:
	class UBP_PlayerSettingsSave_C*               CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SavePlayerSettings) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SavePlayerSettings");
static_assert(sizeof(BP_UPGameInstance_C_SavePlayerSettings) == 0x000010, "Wrong size on BP_UPGameInstance_C_SavePlayerSettings");
static_assert(offsetof(BP_UPGameInstance_C_SavePlayerSettings, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'BP_UPGameInstance_C_SavePlayerSettings::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SavePlayerSettings, CallFunc_SaveGameToSlot_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_SavePlayerSettings::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SaveSession
// 0x0060 (0x0060 - 0x0000)
struct BP_UPGameInstance_C_SaveSession final
{
public:
	TArray<struct FS_InventoryItemSave>           CallFunc_GetAllItems_Items;                        // 0x0000(0x0010)(ReferenceParm)
	class ABP_Scoring_C*                          CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Episodes_C*                         CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_EpisodesSave_C*                     CallFunc_CreateSave_OutputPin;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ScoringSave_C*                      CallFunc_CreateSave_ScoringSave;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameState_C*                      K2Node_DynamicCast_AsBP_UPGame_State;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSaveSessionSlot_Slot;                  // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_UPGameStateSave_C*                  CallFunc_CreateSave_Save;                          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SaveSession) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SaveSession");
static_assert(sizeof(BP_UPGameInstance_C_SaveSession) == 0x000060, "Wrong size on BP_UPGameInstance_C_SaveSession");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, CallFunc_GetAllItems_Items) == 0x000000, "Member 'BP_UPGameInstance_C_SaveSession::CallFunc_GetAllItems_Items' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_SaveSession::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000018, "Member 'BP_UPGameInstance_C_SaveSession::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, CallFunc_CreateSave_OutputPin) == 0x000020, "Member 'BP_UPGameInstance_C_SaveSession::CallFunc_CreateSave_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, CallFunc_CreateSave_ScoringSave) == 0x000028, "Member 'BP_UPGameInstance_C_SaveSession::CallFunc_CreateSave_ScoringSave' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_SaveSession::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, K2Node_DynamicCast_AsBP_UPGame_State) == 0x000038, "Member 'BP_UPGameInstance_C_SaveSession::K2Node_DynamicCast_AsBP_UPGame_State' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_UPGameInstance_C_SaveSession::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, CallFunc_GetSaveSessionSlot_Slot) == 0x000048, "Member 'BP_UPGameInstance_C_SaveSession::CallFunc_GetSaveSessionSlot_Slot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSession, CallFunc_CreateSave_Save) == 0x000058, "Member 'BP_UPGameInstance_C_SaveSession::CallFunc_CreateSave_Save' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SaveSessionObject
// 0x0038 (0x0038 - 0x0000)
struct BP_UPGameInstance_C_SaveSessionObject final
{
public:
	class USaveGame*                              ObjectSave;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ObjectSlot;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SessionSlot_0;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSaveSessionSlot_Slot;                  // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SaveSessionObject) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SaveSessionObject");
static_assert(sizeof(BP_UPGameInstance_C_SaveSessionObject) == 0x000038, "Wrong size on BP_UPGameInstance_C_SaveSessionObject");
static_assert(offsetof(BP_UPGameInstance_C_SaveSessionObject, ObjectSave) == 0x000000, "Member 'BP_UPGameInstance_C_SaveSessionObject::ObjectSave' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSessionObject, ObjectSlot) == 0x000008, "Member 'BP_UPGameInstance_C_SaveSessionObject::ObjectSlot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSessionObject, SessionSlot_0) == 0x000018, "Member 'BP_UPGameInstance_C_SaveSessionObject::SessionSlot_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSessionObject, CallFunc_GetSaveSessionSlot_Slot) == 0x000020, "Member 'BP_UPGameInstance_C_SaveSessionObject::CallFunc_GetSaveSessionSlot_Slot' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveSessionObject, CallFunc_SaveGameToSlot_ReturnValue) == 0x000030, "Member 'BP_UPGameInstance_C_SaveSessionObject::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SaveTutorial
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_SaveTutorial final
{
public:
	class UBP_TutorialSave_C*                     CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SaveTutorial) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SaveTutorial");
static_assert(sizeof(BP_UPGameInstance_C_SaveTutorial) == 0x000010, "Wrong size on BP_UPGameInstance_C_SaveTutorial");
static_assert(offsetof(BP_UPGameInstance_C_SaveTutorial, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'BP_UPGameInstance_C_SaveTutorial::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SaveTutorial, CallFunc_SaveGameToSlot_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_SaveTutorial::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SendAttackedEvent
// 0x0038 (0x0038 - 0x0000)
struct BP_UPGameInstance_C_SendAttackedEvent final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ragdoll;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SourceLocation;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Force;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Dismemberment                               Dismemberment;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeathType                                   DeathType;                                         // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Attacker;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SendAttackedEvent) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SendAttackedEvent");
static_assert(sizeof(BP_UPGameInstance_C_SendAttackedEvent) == 0x000038, "Wrong size on BP_UPGameInstance_C_SendAttackedEvent");
static_assert(offsetof(BP_UPGameInstance_C_SendAttackedEvent, Damage) == 0x000000, "Member 'BP_UPGameInstance_C_SendAttackedEvent::Damage' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SendAttackedEvent, Ragdoll) == 0x000004, "Member 'BP_UPGameInstance_C_SendAttackedEvent::Ragdoll' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SendAttackedEvent, SourceLocation) == 0x000008, "Member 'BP_UPGameInstance_C_SendAttackedEvent::SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SendAttackedEvent, Force) == 0x000020, "Member 'BP_UPGameInstance_C_SendAttackedEvent::Force' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SendAttackedEvent, Dismemberment) == 0x000028, "Member 'BP_UPGameInstance_C_SendAttackedEvent::Dismemberment' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SendAttackedEvent, DeathType) == 0x000029, "Member 'BP_UPGameInstance_C_SendAttackedEvent::DeathType' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SendAttackedEvent, Attacker) == 0x000030, "Member 'BP_UPGameInstance_C_SendAttackedEvent::Attacker' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SendDayEndEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_SendDayEndEvent final
{
public:
	class ABP_UPGameSession_C*                    GameSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SendDayEndEvent) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SendDayEndEvent");
static_assert(sizeof(BP_UPGameInstance_C_SendDayEndEvent) == 0x000008, "Wrong size on BP_UPGameInstance_C_SendDayEndEvent");
static_assert(offsetof(BP_UPGameInstance_C_SendDayEndEvent, GameSession) == 0x000000, "Member 'BP_UPGameInstance_C_SendDayEndEvent::GameSession' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SendEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_SendEvent final
{
public:
	struct FBlueprintJsonObject                   Event;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_UPGameInstance_C_SendEvent) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SendEvent");
static_assert(sizeof(BP_UPGameInstance_C_SendEvent) == 0x000010, "Wrong size on BP_UPGameInstance_C_SendEvent");
static_assert(offsetof(BP_UPGameInstance_C_SendEvent, Event) == 0x000000, "Member 'BP_UPGameInstance_C_SendEvent::Event' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SendEventWithProperties
// 0x0060 (0x0060 - 0x0000)
struct BP_UPGameInstance_C_SendEventWithProperties final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, struct FBlueprintJsonValue> properties;                                      // 0x0010(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_UPGameInstance_C_SendEventWithProperties) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SendEventWithProperties");
static_assert(sizeof(BP_UPGameInstance_C_SendEventWithProperties) == 0x000060, "Wrong size on BP_UPGameInstance_C_SendEventWithProperties");
static_assert(offsetof(BP_UPGameInstance_C_SendEventWithProperties, EventName) == 0x000000, "Member 'BP_UPGameInstance_C_SendEventWithProperties::EventName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SendEventWithProperties, properties) == 0x000010, "Member 'BP_UPGameInstance_C_SendEventWithProperties::properties' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SendIdentify
// 0x0050 (0x0050 - 0x0000)
struct BP_UPGameInstance_C_SendIdentify final
{
public:
	TMap<class FString, struct FBlueprintJsonValue> properties;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_UPGameInstance_C_SendIdentify) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SendIdentify");
static_assert(sizeof(BP_UPGameInstance_C_SendIdentify) == 0x000050, "Wrong size on BP_UPGameInstance_C_SendIdentify");
static_assert(offsetof(BP_UPGameInstance_C_SendIdentify, properties) == 0x000000, "Member 'BP_UPGameInstance_C_SendIdentify::properties' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SendKilledEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_SendKilledEvent final
{
public:
	class ABP_KillableCharacter_C*                KilledCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SendKilledEvent) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SendKilledEvent");
static_assert(sizeof(BP_UPGameInstance_C_SendKilledEvent) == 0x000010, "Wrong size on BP_UPGameInstance_C_SendKilledEvent");
static_assert(offsetof(BP_UPGameInstance_C_SendKilledEvent, KilledCharacter) == 0x000000, "Member 'BP_UPGameInstance_C_SendKilledEvent::KilledCharacter' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SendKilledEvent, Killer) == 0x000008, "Member 'BP_UPGameInstance_C_SendKilledEvent::Killer' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SendResultsEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_SendResultsEvent final
{
public:
	class ABP_Episodes_C*                         Episodes;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SendResultsEvent) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SendResultsEvent");
static_assert(sizeof(BP_UPGameInstance_C_SendResultsEvent) == 0x000008, "Wrong size on BP_UPGameInstance_C_SendResultsEvent");
static_assert(offsetof(BP_UPGameInstance_C_SendResultsEvent, Episodes) == 0x000000, "Member 'BP_UPGameInstance_C_SendResultsEvent::Episodes' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SendSimpleEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_SendSimpleEvent final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SendSimpleEvent) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SendSimpleEvent");
static_assert(sizeof(BP_UPGameInstance_C_SendSimpleEvent) == 0x000010, "Wrong size on BP_UPGameInstance_C_SendSimpleEvent");
static_assert(offsetof(BP_UPGameInstance_C_SendSimpleEvent, EventName) == 0x000000, "Member 'BP_UPGameInstance_C_SendSimpleEvent::EventName' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SessionCreated
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SessionCreated final
{
public:
	bool                                          IsPrivate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SessionCreated) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SessionCreated");
static_assert(sizeof(BP_UPGameInstance_C_SessionCreated) == 0x000001, "Wrong size on BP_UPGameInstance_C_SessionCreated");
static_assert(offsetof(BP_UPGameInstance_C_SessionCreated, IsPrivate) == 0x000000, "Member 'BP_UPGameInstance_C_SessionCreated::IsPrivate' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SessionJoined
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SessionJoined final
{
public:
	bool                                          IsPrivate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SessionJoined) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SessionJoined");
static_assert(sizeof(BP_UPGameInstance_C_SessionJoined) == 0x000001, "Wrong size on BP_UPGameInstance_C_SessionJoined");
static_assert(offsetof(BP_UPGameInstance_C_SessionJoined, IsPrivate) == 0x000000, "Member 'BP_UPGameInstance_C_SessionJoined::IsPrivate' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetAntiAliasingMethod
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SetAntiAliasingMethod final
{
public:
	E_AntiAliasingMethod                          AntiAliasingMethod_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetAntiAliasingMethod) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SetAntiAliasingMethod");
static_assert(sizeof(BP_UPGameInstance_C_SetAntiAliasingMethod) == 0x000001, "Wrong size on BP_UPGameInstance_C_SetAntiAliasingMethod");
static_assert(offsetof(BP_UPGameInstance_C_SetAntiAliasingMethod, AntiAliasingMethod_0) == 0x000000, "Member 'BP_UPGameInstance_C_SetAntiAliasingMethod::AntiAliasingMethod_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetBaseFov
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_SetBaseFov final
{
public:
	double                                        BaseFOV_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetBaseFov) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SetBaseFov");
static_assert(sizeof(BP_UPGameInstance_C_SetBaseFov) == 0x000008, "Wrong size on BP_UPGameInstance_C_SetBaseFov");
static_assert(offsetof(BP_UPGameInstance_C_SetBaseFov, BaseFOV_0) == 0x000000, "Member 'BP_UPGameInstance_C_SetBaseFov::BaseFOV_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetCinematicRatioEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SetCinematicRatioEnabled final
{
public:
	bool                                          CinematicRatioEnabled_0;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetCinematicRatioEnabled) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SetCinematicRatioEnabled");
static_assert(sizeof(BP_UPGameInstance_C_SetCinematicRatioEnabled) == 0x000001, "Wrong size on BP_UPGameInstance_C_SetCinematicRatioEnabled");
static_assert(offsetof(BP_UPGameInstance_C_SetCinematicRatioEnabled, CinematicRatioEnabled_0) == 0x000000, "Member 'BP_UPGameInstance_C_SetCinematicRatioEnabled::CinematicRatioEnabled_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetHeadBobbingEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SetHeadBobbingEnabled final
{
public:
	bool                                          HeadBobbingEnabled_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetHeadBobbingEnabled) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SetHeadBobbingEnabled");
static_assert(sizeof(BP_UPGameInstance_C_SetHeadBobbingEnabled) == 0x000001, "Wrong size on BP_UPGameInstance_C_SetHeadBobbingEnabled");
static_assert(offsetof(BP_UPGameInstance_C_SetHeadBobbingEnabled, HeadBobbingEnabled_0) == 0x000000, "Member 'BP_UPGameInstance_C_SetHeadBobbingEnabled::HeadBobbingEnabled_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetInvertMouseX
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SetInvertMouseX final
{
public:
	bool                                          InvertMouseX;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetInvertMouseX) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SetInvertMouseX");
static_assert(sizeof(BP_UPGameInstance_C_SetInvertMouseX) == 0x000001, "Wrong size on BP_UPGameInstance_C_SetInvertMouseX");
static_assert(offsetof(BP_UPGameInstance_C_SetInvertMouseX, InvertMouseX) == 0x000000, "Member 'BP_UPGameInstance_C_SetInvertMouseX::InvertMouseX' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetInvertMouseY
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SetInvertMouseY final
{
public:
	bool                                          InvertMouseY;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetInvertMouseY) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SetInvertMouseY");
static_assert(sizeof(BP_UPGameInstance_C_SetInvertMouseY) == 0x000001, "Wrong size on BP_UPGameInstance_C_SetInvertMouseY");
static_assert(offsetof(BP_UPGameInstance_C_SetInvertMouseY, InvertMouseY) == 0x000000, "Member 'BP_UPGameInstance_C_SetInvertMouseY::InvertMouseY' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetLobbyMusicEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SetLobbyMusicEnabled final
{
public:
	bool                                          LobbyMusicEnabled_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetLobbyMusicEnabled) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SetLobbyMusicEnabled");
static_assert(sizeof(BP_UPGameInstance_C_SetLobbyMusicEnabled) == 0x000001, "Wrong size on BP_UPGameInstance_C_SetLobbyMusicEnabled");
static_assert(offsetof(BP_UPGameInstance_C_SetLobbyMusicEnabled, LobbyMusicEnabled_0) == 0x000000, "Member 'BP_UPGameInstance_C_SetLobbyMusicEnabled::LobbyMusicEnabled_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetLookSensitivity
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_SetLookSensitivity final
{
public:
	double                                        Sensitivity;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetLookSensitivity) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SetLookSensitivity");
static_assert(sizeof(BP_UPGameInstance_C_SetLookSensitivity) == 0x000008, "Wrong size on BP_UPGameInstance_C_SetLookSensitivity");
static_assert(offsetof(BP_UPGameInstance_C_SetLookSensitivity, Sensitivity) == 0x000000, "Member 'BP_UPGameInstance_C_SetLookSensitivity::Sensitivity' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetMasterVolume
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_SetMasterVolume final
{
public:
	double                                        MasterVolume_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetMasterVolume) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SetMasterVolume");
static_assert(sizeof(BP_UPGameInstance_C_SetMasterVolume) == 0x000008, "Wrong size on BP_UPGameInstance_C_SetMasterVolume");
static_assert(offsetof(BP_UPGameInstance_C_SetMasterVolume, MasterVolume_0) == 0x000000, "Member 'BP_UPGameInstance_C_SetMasterVolume::MasterVolume_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetNoGoreModeEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_SetNoGoreModeEnabled final
{
public:
	bool                                          NoGoreModeEnabled_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetNoGoreModeEnabled) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_SetNoGoreModeEnabled");
static_assert(sizeof(BP_UPGameInstance_C_SetNoGoreModeEnabled) == 0x000001, "Wrong size on BP_UPGameInstance_C_SetNoGoreModeEnabled");
static_assert(offsetof(BP_UPGameInstance_C_SetNoGoreModeEnabled, NoGoreModeEnabled_0) == 0x000000, "Member 'BP_UPGameInstance_C_SetNoGoreModeEnabled::NoGoreModeEnabled_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetRenderScale
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameInstance_C_SetRenderScale final
{
public:
	double                                        RenderScale_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetRenderScale) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SetRenderScale");
static_assert(sizeof(BP_UPGameInstance_C_SetRenderScale) == 0x000008, "Wrong size on BP_UPGameInstance_C_SetRenderScale");
static_assert(offsetof(BP_UPGameInstance_C_SetRenderScale, RenderScale_0) == 0x000000, "Member 'BP_UPGameInstance_C_SetRenderScale::RenderScale_0' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetTutorialDone
// 0x000C (0x000C - 0x0000)
struct BP_UPGameInstance_C_SetTutorialDone final
{
public:
	class FName                                   TutorialStep;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetTutorialDone) == 0x000004, "Wrong alignment on BP_UPGameInstance_C_SetTutorialDone");
static_assert(sizeof(BP_UPGameInstance_C_SetTutorialDone) == 0x00000C, "Wrong size on BP_UPGameInstance_C_SetTutorialDone");
static_assert(offsetof(BP_UPGameInstance_C_SetTutorialDone, TutorialStep) == 0x000000, "Member 'BP_UPGameInstance_C_SetTutorialDone::TutorialStep' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SetTutorialDone, Temp_bool_Variable) == 0x000008, "Member 'BP_UPGameInstance_C_SetTutorialDone::Temp_bool_Variable' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetUserPropertyInt
// 0x0018 (0x0018 - 0x0000)
struct BP_UPGameInstance_C_SetUserPropertyInt final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetUserPropertyInt) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SetUserPropertyInt");
static_assert(sizeof(BP_UPGameInstance_C_SetUserPropertyInt) == 0x000018, "Wrong size on BP_UPGameInstance_C_SetUserPropertyInt");
static_assert(offsetof(BP_UPGameInstance_C_SetUserPropertyInt, Key) == 0x000000, "Member 'BP_UPGameInstance_C_SetUserPropertyInt::Key' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SetUserPropertyInt, Value) == 0x000010, "Member 'BP_UPGameInstance_C_SetUserPropertyInt::Value' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.SetUserPropertyString
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_SetUserPropertyString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_SetUserPropertyString) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_SetUserPropertyString");
static_assert(sizeof(BP_UPGameInstance_C_SetUserPropertyString) == 0x000020, "Wrong size on BP_UPGameInstance_C_SetUserPropertyString");
static_assert(offsetof(BP_UPGameInstance_C_SetUserPropertyString, Key) == 0x000000, "Member 'BP_UPGameInstance_C_SetUserPropertyString::Key' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_SetUserPropertyString, Value) == 0x000010, "Member 'BP_UPGameInstance_C_SetUserPropertyString::Value' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.ShouldShowSessionSurvey
// 0x0030 (0x0030 - 0x0000)
struct BP_UPGameInstance_C_ShouldShowSessionSurvey final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTutorialDone_IsDone;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalMinutes_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_ShouldShowSessionSurvey) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_ShouldShowSessionSurvey");
static_assert(sizeof(BP_UPGameInstance_C_ShouldShowSessionSurvey) == 0x000030, "Wrong size on BP_UPGameInstance_C_ShouldShowSessionSurvey");
static_assert(offsetof(BP_UPGameInstance_C_ShouldShowSessionSurvey, Result) == 0x000000, "Member 'BP_UPGameInstance_C_ShouldShowSessionSurvey::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShouldShowSessionSurvey, CallFunc_UtcNow_ReturnValue) == 0x000008, "Member 'BP_UPGameInstance_C_ShouldShowSessionSurvey::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShouldShowSessionSurvey, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'BP_UPGameInstance_C_ShouldShowSessionSurvey::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShouldShowSessionSurvey, CallFunc_IsTutorialDone_IsDone) == 0x000018, "Member 'BP_UPGameInstance_C_ShouldShowSessionSurvey::CallFunc_IsTutorialDone_IsDone' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShouldShowSessionSurvey, CallFunc_GetTotalMinutes_ReturnValue) == 0x00001C, "Member 'BP_UPGameInstance_C_ShouldShowSessionSurvey::CallFunc_GetTotalMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShouldShowSessionSurvey, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_UPGameInstance_C_ShouldShowSessionSurvey::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShouldShowSessionSurvey, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_UPGameInstance_C_ShouldShowSessionSurvey::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.ShowLoading
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameInstance_C_ShowLoading final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Difficulty;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPoints;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Objective;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingDays;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_ShowLoading) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_ShowLoading");
static_assert(sizeof(BP_UPGameInstance_C_ShowLoading) == 0x000020, "Wrong size on BP_UPGameInstance_C_ShowLoading");
static_assert(offsetof(BP_UPGameInstance_C_ShowLoading, MapName) == 0x000000, "Member 'BP_UPGameInstance_C_ShowLoading::MapName' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShowLoading, Difficulty) == 0x000010, "Member 'BP_UPGameInstance_C_ShowLoading::Difficulty' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShowLoading, CurrentPoints) == 0x000014, "Member 'BP_UPGameInstance_C_ShowLoading::CurrentPoints' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShowLoading, Objective) == 0x000018, "Member 'BP_UPGameInstance_C_ShowLoading::Objective' has a wrong offset!");
static_assert(offsetof(BP_UPGameInstance_C_ShowLoading, RemainingDays) == 0x00001C, "Member 'BP_UPGameInstance_C_ShowLoading::RemainingDays' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.UnlockAchievement
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameInstance_C_UnlockAchievement final
{
public:
	class FString                                 AchievementName;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_UnlockAchievement) == 0x000008, "Wrong alignment on BP_UPGameInstance_C_UnlockAchievement");
static_assert(sizeof(BP_UPGameInstance_C_UnlockAchievement) == 0x000010, "Wrong size on BP_UPGameInstance_C_UnlockAchievement");
static_assert(offsetof(BP_UPGameInstance_C_UnlockAchievement, AchievementName) == 0x000000, "Member 'BP_UPGameInstance_C_UnlockAchievement::AchievementName' has a wrong offset!");

// Function BP_UPGameInstance.BP_UPGameInstance_C.UpdateGamepadUsage
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameInstance_C_UpdateGamepadUsage final
{
public:
	bool                                          IsUsingGamepad_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameInstance_C_UpdateGamepadUsage) == 0x000001, "Wrong alignment on BP_UPGameInstance_C_UpdateGamepadUsage");
static_assert(sizeof(BP_UPGameInstance_C_UpdateGamepadUsage) == 0x000001, "Wrong size on BP_UPGameInstance_C_UpdateGamepadUsage");
static_assert(offsetof(BP_UPGameInstance_C_UpdateGamepadUsage, IsUsingGamepad_0) == 0x000000, "Member 'BP_UPGameInstance_C_UpdateGamepadUsage::IsUsingGamepad_0' has a wrong offset!");

}

