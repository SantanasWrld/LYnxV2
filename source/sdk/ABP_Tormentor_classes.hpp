#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Tormentor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Tormentor.ABP_Tormentor_C
// 0x06C0 (0x0A10 - 0x0350)
class UABP_Tormentor_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_BlendSpaceGraph;            // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0390(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0408(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0430(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0478(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0498(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x04E0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0500(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_8;            // 0x0548(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0568(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_7;            // 0x05B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x05D0(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_6;            // 0x0618(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0638(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_5;            // 0x0680(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x06A0(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_4;            // 0x06E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0708(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_3;            // 0x0750(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0770(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_2;            // 0x07B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x07D8(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_1;            // 0x0820(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0840(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult;              // 0x0888(0x0020)()
	struct FAnimNode_BlendSpaceGraph              AnimGraphNode_BlendSpaceGraph;                     // 0x08A8(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0910(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0930(0x00C8)()
	class ABP_Tormentor_C*                        Tormentor;                                         // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardSpeed;                                      // 0x0A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightSpeed;                                        // 0x0A04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x0A08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGrawling;                                        // 0x0A09(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_DanceImpact();
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Tormentor_AnimGraphNode_TransitionResult_D415344F45F34813A3F17E96DA756745();
	void ExecuteUbergraph_ABP_Tormentor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Tormentor_C">();
	}
	static class UABP_Tormentor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Tormentor_C>();
	}
};
static_assert(alignof(UABP_Tormentor_C) == 0x000010, "Wrong alignment on UABP_Tormentor_C");
static_assert(sizeof(UABP_Tormentor_C) == 0x000A10, "Wrong size on UABP_Tormentor_C");
static_assert(offsetof(UABP_Tormentor_C, UberGraphFrame) == 0x000350, "Member 'UABP_Tormentor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UABP_Tormentor_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimBlueprintExtension_BlendSpaceGraph) == 0x000360, "Member 'UABP_Tormentor_C::AnimBlueprintExtension_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UABP_Tormentor_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_Root) == 0x000370, "Member 'UABP_Tormentor_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_TransitionResult_3) == 0x000390, "Member 'UABP_Tormentor_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_TransitionResult_2) == 0x0003B8, "Member 'UABP_Tormentor_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_TransitionResult_1) == 0x0003E0, "Member 'UABP_Tormentor_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_TransitionResult) == 0x000408, "Member 'UABP_Tormentor_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_10) == 0x000430, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_StateResult_2) == 0x000478, "Member 'UABP_Tormentor_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_9) == 0x000498, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_StateResult_1) == 0x0004E0, "Member 'UABP_Tormentor_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_8) == 0x000500, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult_8) == 0x000548, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_7) == 0x000568, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult_7) == 0x0005B0, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_6) == 0x0005D0, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult_6) == 0x000618, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_5) == 0x000638, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult_5) == 0x000680, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_4) == 0x0006A0, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult_4) == 0x0006E8, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_3) == 0x000708, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult_3) == 0x000750, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_2) == 0x000770, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult_2) == 0x0007B8, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer_1) == 0x0007D8, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult_1) == 0x000820, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_SequencePlayer) == 0x000840, "Member 'UABP_Tormentor_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceSampleResult) == 0x000888, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceSampleResult' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_BlendSpaceGraph) == 0x0008A8, "Member 'UABP_Tormentor_C::AnimGraphNode_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_StateResult) == 0x000910, "Member 'UABP_Tormentor_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, AnimGraphNode_StateMachine) == 0x000930, "Member 'UABP_Tormentor_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, Tormentor) == 0x0009F8, "Member 'UABP_Tormentor_C::Tormentor' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, ForwardSpeed) == 0x000A00, "Member 'UABP_Tormentor_C::ForwardSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, RightSpeed) == 0x000A04, "Member 'UABP_Tormentor_C::RightSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, IsAttacking) == 0x000A08, "Member 'UABP_Tormentor_C::IsAttacking' has a wrong offset!");
static_assert(offsetof(UABP_Tormentor_C, IsGrawling) == 0x000A09, "Member 'UABP_Tormentor_C::IsGrawling' has a wrong offset!");

}

