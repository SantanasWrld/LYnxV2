#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataIO

#include "Basic.hpp"

#include "BP_DataIO_classes.hpp"
#include "BP_DataIO_parameters.hpp"


namespace SDK
{

// Function BP_DataIO.BP_DataIO_C.AddPendingCapture (All)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DataLength                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CaptureId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::AddPendingCapture__All_(int32 DataLength, int32 CaptureId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "AddPendingCapture (All)");

	Params::BP_DataIO_C_AddPendingCapture__All_ Parms{};

	Parms.DataLength = DataLength;
	Parms.CaptureId = CaptureId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.AddPendingCapture (Server)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DataLength                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CaptureId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::AddPendingCapture__Server_(int32 DataLength, int32 CaptureId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "AddPendingCapture (Server)");

	Params::BP_DataIO_C_AddPendingCapture__Server_ Parms{};

	Parms.DataLength = DataLength;
	Parms.CaptureId = CaptureId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.BroadcastCapture
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<uint8>&                    CompressedData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_DataIO_C::BroadcastCapture(const TArray<uint8>& CompressedData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "BroadcastCapture");

	Params::BP_DataIO_C_BroadcastCapture Parms{};

	Parms.CompressedData = std::move(CompressedData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.BroadcastMessage
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<uint8>&                    Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_DataIO_C::BroadcastMessage(const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "BroadcastMessage");

	Params::BP_DataIO_C_BroadcastMessage Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.CaptureUncompressed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ReplicatedCapture_C*          ReplicatedCapture                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::CaptureUncompressed(class ABP_ReplicatedCapture_C* ReplicatedCapture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "CaptureUncompressed");

	Params::BP_DataIO_C_CaptureUncompressed Parms{};

	Parms.ReplicatedCapture = ReplicatedCapture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.DestroyReplicatedCapture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ReplicatedCapture_C*          ReplicatedCapture                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::DestroyReplicatedCapture(class ABP_ReplicatedCapture_C* ReplicatedCapture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "DestroyReplicatedCapture");

	Params::BP_DataIO_C_DestroyReplicatedCapture Parms{};

	Parms.ReplicatedCapture = ReplicatedCapture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.ExecuteUbergraph_BP_DataIO
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::ExecuteUbergraph_BP_DataIO(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "ExecuteUbergraph_BP_DataIO");

	Params::BP_DataIO_C_ExecuteUbergraph_BP_DataIO Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.GetOrCreateReplicatedCapture
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DataLength                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TDelegate<void(class ABP_ReplicatedCapture_C* ReplicatedCapture)>&CaptureUncompressedEvent                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class ABP_ReplicatedCapture_C**         ReplicatedCapture                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::GetOrCreateReplicatedCapture(int32 DataLength, const TDelegate<void(class ABP_ReplicatedCapture_C* ReplicatedCapture)>& CaptureUncompressedEvent, class ABP_ReplicatedCapture_C** ReplicatedCapture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "GetOrCreateReplicatedCapture");

	Params::BP_DataIO_C_GetOrCreateReplicatedCapture Parms{};

	Parms.DataLength = DataLength;
	Parms.CaptureUncompressedEvent = CaptureUncompressedEvent;

	UObject::ProcessEvent(Func, &Parms);

	if (ReplicatedCapture != nullptr)
		*ReplicatedCapture = Parms.ReplicatedCapture;
}


// Function BP_DataIO.BP_DataIO_C.GetOtherPeerIds
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int64>*                          PeerIds                                                (Parm, OutParm)

void ABP_DataIO_C::GetOtherPeerIds(TArray<int64>* PeerIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "GetOtherPeerIds");

	Params::BP_DataIO_C_GetOtherPeerIds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PeerIds != nullptr)
		*PeerIds = std::move(Parms.PeerIds);
}


// Function BP_DataIO.BP_DataIO_C.InitMessaging
// (BlueprintCallable, BlueprintEvent)

void ABP_DataIO_C::InitMessaging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "InitMessaging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DataIO.BP_DataIO_C.MessageReceived
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<uint8>&                    Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::MessageReceived(int64 peerId, const TArray<uint8>& Data, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "MessageReceived");

	Params::BP_DataIO_C_MessageReceived Parms{};

	Parms.peerId = peerId;
	Parms.Data = std::move(Data);
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.OnResponse_AA3122D84FA83A2EF79C40BF2F8B276C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::OnResponse_AA3122D84FA83A2EF79C40BF2F8B276C(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "OnResponse_AA3122D84FA83A2EF79C40BF2F8B276C");

	Params::BP_DataIO_C_OnResponse_AA3122D84FA83A2EF79C40BF2F8B276C Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DataIO_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DataIO.BP_DataIO_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "ReceiveTick");

	Params::BP_DataIO_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataIO.BP_DataIO_C.SendMessageFailed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   errorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DataIO_C::SendMessageFailed(int64 errorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataIO_C", "SendMessageFailed");

	Params::BP_DataIO_C_SendMessageFailed Parms{};

	Parms.errorCode = errorCode;

	UObject::ProcessEvent(Func, &Parms);
}

}

