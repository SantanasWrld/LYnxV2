#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerSettingsSave

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "E_AntiAliasingMethod_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerSettingsSave.BP_PlayerSettingsSave_C
// 0x0028 (0x0050 - 0x0028)
class UBP_PlayerSettingsSave_C final : public USaveGame
{
public:
	bool                                          CinematicRatioEnabled;                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AntiAliasingMethod                          AntiAliasingMethod;                                // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoGoreModeEnabled;                                 // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LobbyMusicEnabled;                                 // 0x002B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BaseFOV;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MasterVolume;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HeadBobbingEnabled;                                // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RenderScale;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerSettingsSave_C">();
	}
	static class UBP_PlayerSettingsSave_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerSettingsSave_C>();
	}
};
static_assert(alignof(UBP_PlayerSettingsSave_C) == 0x000008, "Wrong alignment on UBP_PlayerSettingsSave_C");
static_assert(sizeof(UBP_PlayerSettingsSave_C) == 0x000050, "Wrong size on UBP_PlayerSettingsSave_C");
static_assert(offsetof(UBP_PlayerSettingsSave_C, CinematicRatioEnabled) == 0x000028, "Member 'UBP_PlayerSettingsSave_C::CinematicRatioEnabled' has a wrong offset!");
static_assert(offsetof(UBP_PlayerSettingsSave_C, AntiAliasingMethod) == 0x000029, "Member 'UBP_PlayerSettingsSave_C::AntiAliasingMethod' has a wrong offset!");
static_assert(offsetof(UBP_PlayerSettingsSave_C, NoGoreModeEnabled) == 0x00002A, "Member 'UBP_PlayerSettingsSave_C::NoGoreModeEnabled' has a wrong offset!");
static_assert(offsetof(UBP_PlayerSettingsSave_C, LobbyMusicEnabled) == 0x00002B, "Member 'UBP_PlayerSettingsSave_C::LobbyMusicEnabled' has a wrong offset!");
static_assert(offsetof(UBP_PlayerSettingsSave_C, BaseFOV) == 0x000030, "Member 'UBP_PlayerSettingsSave_C::BaseFOV' has a wrong offset!");
static_assert(offsetof(UBP_PlayerSettingsSave_C, MasterVolume) == 0x000038, "Member 'UBP_PlayerSettingsSave_C::MasterVolume' has a wrong offset!");
static_assert(offsetof(UBP_PlayerSettingsSave_C, HeadBobbingEnabled) == 0x000040, "Member 'UBP_PlayerSettingsSave_C::HeadBobbingEnabled' has a wrong offset!");
static_assert(offsetof(UBP_PlayerSettingsSave_C, RenderScale) == 0x000048, "Member 'UBP_PlayerSettingsSave_C::RenderScale' has a wrong offset!");

}

