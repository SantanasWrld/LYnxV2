#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResultTopPicture

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ResultTopPicture.BP_ResultTopPicture_C
// 0x0050 (0x02E8 - 0x0298)
class ABP_ResultTopPicture_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightMesh;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Capture;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   GameInstance;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameState_C*                      GameState;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScreenMaterial;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         TopPictureIndex;                                   // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AskForCapture(int32 CaptureId);
	void ExecuteUbergraph_BP_ResultTopPicture(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetVisibility(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ResultTopPicture_C">();
	}
	static class ABP_ResultTopPicture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ResultTopPicture_C>();
	}
};
static_assert(alignof(ABP_ResultTopPicture_C) == 0x000008, "Wrong alignment on ABP_ResultTopPicture_C");
static_assert(sizeof(ABP_ResultTopPicture_C) == 0x0002E8, "Wrong size on ABP_ResultTopPicture_C");
static_assert(offsetof(ABP_ResultTopPicture_C, UberGraphFrame) == 0x000298, "Member 'ABP_ResultTopPicture_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, SpotLight) == 0x0002A0, "Member 'ABP_ResultTopPicture_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, LightMesh) == 0x0002A8, "Member 'ABP_ResultTopPicture_C::LightMesh' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, Capture) == 0x0002B0, "Member 'ABP_ResultTopPicture_C::Capture' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, Frame) == 0x0002B8, "Member 'ABP_ResultTopPicture_C::Frame' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, Scene) == 0x0002C0, "Member 'ABP_ResultTopPicture_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, GameInstance) == 0x0002C8, "Member 'ABP_ResultTopPicture_C::GameInstance' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, GameState) == 0x0002D0, "Member 'ABP_ResultTopPicture_C::GameState' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, ScreenMaterial) == 0x0002D8, "Member 'ABP_ResultTopPicture_C::ScreenMaterial' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPicture_C, TopPictureIndex) == 0x0002E0, "Member 'ABP_ResultTopPicture_C::TopPictureIndex' has a wrong offset!");

}

