#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Killable

#include "Basic.hpp"

#include "BPI_Killable_classes.hpp"
#include "BPI_Killable_parameters.hpp"


namespace SDK
{

// Function BPI_Killable.BPI_Killable_C.Harm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DeathType                             DeathType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_Killable_C::Harm(int32 Damage, bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Killable_C", "Harm");

	Params::BPI_Killable_C_Harm Parms{};

	Parms.Damage = Damage;
	Parms.Ragdoll = Ragdoll;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;
	Parms.Dismemberment = Dismemberment;
	Parms.DeathType = DeathType;
	Parms.Attacker = Attacker;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_Killable.BPI_Killable_C.IsDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Dead                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Killable_C::IsDead(bool* Dead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Killable_C", "IsDead");

	Params::BPI_Killable_C_IsDead Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Dead != nullptr)
		*Dead = Parms.Dead;
}


// Function BPI_Killable.BPI_Killable_C.Kill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DeathType                             DeathType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_Killable_C::Kill(bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Killable_C", "Kill");

	Params::BPI_Killable_C_Kill Parms{};

	Parms.Ragdoll = Ragdoll;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;
	Parms.Dismemberment = Dismemberment;
	Parms.DeathType = DeathType;
	Parms.Killer = Killer;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

