#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SessionStart

#include "Basic.hpp"

#include "BP_SessionStart_classes.hpp"
#include "BP_SessionStart_parameters.hpp"


namespace SDK
{

// Function BP_SessionStart.BP_SessionStart_C.AddPlayerInside
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::AddPlayerInside(class ABP_UPPlayerCharacter_C* Player, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "AddPlayerInside");

	Params::BP_SessionStart_C_AddPlayerInside Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_SessionStart.BP_SessionStart_C.AllPlayersInside
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::AllPlayersInside(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "AllPlayersInside");

	Params::BP_SessionStart_C_AllPlayersInside Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SessionStart.BP_SessionStart_C.CanLeave
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::CanLeave(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "CanLeave");

	Params::BP_SessionStart_C_CanLeave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_SessionStart.BP_SessionStart_C.CheckLeavingAchievement
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::CheckLeavingAchievement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "CheckLeavingAchievement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.CreatePlayerStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  PlayerSpawnPoint                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::CreatePlayerStart(class USceneComponent* PlayerSpawnPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "CreatePlayerStart");

	Params::BP_SessionStart_C_CreatePlayerStart Parms{};

	Parms.PlayerSpawnPoint = PlayerSpawnPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.EntersHelicopter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::EntersHelicopter(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "EntersHelicopter");

	Params::BP_SessionStart_C_EntersHelicopter Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.ExecuteUbergraph_BP_SessionStart
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::ExecuteUbergraph_BP_SessionStart(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "ExecuteUbergraph_BP_SessionStart");

	Params::BP_SessionStart_C_ExecuteUbergraph_BP_SessionStart Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.ExitHelicopter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::ExitHelicopter(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "ExitHelicopter");

	Params::BP_SessionStart_C_ExitHelicopter Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.GetEnteringDialogue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            DialogueText                                           (Parm, OutParm)

void ABP_SessionStart_C::GetEnteringDialogue(class ABP_UPPlayerCharacter_C* Player, bool* IsValid, class FText* DialogueText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetEnteringDialogue");

	Params::BP_SessionStart_C_GetEnteringDialogue Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (DialogueText != nullptr)
		*DialogueText = std::move(Parms.DialogueText);
}


// Function BP_SessionStart.BP_SessionStart_C.GetFreePlayerIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  PlayerIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::GetFreePlayerIndex(int32* PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetFreePlayerIndex");

	Params::BP_SessionStart_C_GetFreePlayerIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerIndex != nullptr)
		*PlayerIndex = Parms.PlayerIndex;
}


// Function BP_SessionStart.BP_SessionStart_C.GetInteractDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::GetInteractDistance(double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetInteractDistance");

	Params::BP_SessionStart_C_GetInteractDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_SessionStart.BP_SessionStart_C.GetInteractDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::GetInteractDuration(double* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetInteractDuration");

	Params::BP_SessionStart_C_GetInteractDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_SessionStart.BP_SessionStart_C.GetInteractNoise
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoiseOnInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NoiseRange                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetInteractNoise");

	Params::BP_SessionStart_C_GetInteractNoise Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoiseOnInteract != nullptr)
		*NoiseOnInteract = Parms.NoiseOnInteract;

	if (NoiseRange != nullptr)
		*NoiseRange = Parms.NoiseRange;
}


// Function BP_SessionStart.BP_SessionStart_C.GetInteractText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            Text                                                   (Parm, OutParm)

void ABP_SessionStart_C::GetInteractText(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetInteractText");

	Params::BP_SessionStart_C_GetInteractText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_SessionStart.BP_SessionStart_C.GetPlayerIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  PlayerIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::GetPlayerIndex(class ABP_UPPlayerCharacter_C* Player, int32* PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetPlayerIndex");

	Params::BP_SessionStart_C_GetPlayerIndex Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerIndex != nullptr)
		*PlayerIndex = Parms.PlayerIndex;
}


// Function BP_SessionStart.BP_SessionStart_C.GetPlayersWithoutCamera
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_UPPlayerCharacter_C*>* Players                                                (Parm, OutParm)

void ABP_SessionStart_C::GetPlayersWithoutCamera(TArray<class ABP_UPPlayerCharacter_C*>* Players)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetPlayersWithoutCamera");

	Params::BP_SessionStart_C_GetPlayersWithoutCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Players != nullptr)
		*Players = std::move(Parms.Players);
}


// Function BP_SessionStart.BP_SessionStart_C.GetSessionMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString*                          MapName                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_SessionStart_C::GetSessionMap(class FString* MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "GetSessionMap");

	Params::BP_SessionStart_C_GetSessionMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapName != nullptr)
		*MapName = std::move(Parms.MapName);
}


// Function BP_SessionStart.BP_SessionStart_C.HelicopterEndedMoving
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::HelicopterEndedMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "HelicopterEndedMoving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.HelicopterStartedMoving
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::HelicopterStartedMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "HelicopterStartedMoving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.Init (Server)
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::Init__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "Init (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::Interact(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "Interact");

	Params::BP_SessionStart_C_Interact Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.InteractionStarted
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::InteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "InteractionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.InteractionStopped
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::InteractionStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "InteractionStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.IsHelicopterEmpty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::IsHelicopterEmpty(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "IsHelicopterEmpty");

	Params::BP_SessionStart_C_IsHelicopterEmpty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SessionStart.BP_SessionStart_C.IsInside
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::IsInside(class ABP_UPPlayerCharacter_C* Player, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "IsInside");

	Params::BP_SessionStart_C_IsInside Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SessionStart.BP_SessionStart_C.LeaveIfReady
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::LeaveIfReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "LeaveIfReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.LoadNextMap
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::LoadNextMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "LoadNextMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.MoveHelicopter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Landing                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::MoveHelicopter(bool Landing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "MoveHelicopter");

	Params::BP_SessionStart_C_MoveHelicopter Parms{};

	Parms.Landing = Landing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.OnRep_IsFlying
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::OnRep_IsFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "OnRep_IsFlying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.OnRep_IsSelected
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::OnRep_IsSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "OnRep_IsSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.PlayerDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::PlayerDestroyed(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "PlayerDestroyed");

	Params::BP_SessionStart_C_PlayerDestroyed Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.PlayerKilled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          KilledCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::PlayerKilled(class ABP_KillableCharacter_C* KilledCharacter, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "PlayerKilled");

	Params::BP_SessionStart_C_PlayerKilled Parms{};

	Parms.KilledCharacter = KilledCharacter;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.PlayerSpawned
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerStart*                     PlayerStart                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::PlayerSpawned(class ABP_UPPlayerCharacter_C* Player, class APlayerStart* PlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "PlayerSpawned");

	Params::BP_SessionStart_C_PlayerSpawned Parms{};

	Parms.Player = Player;
	Parms.PlayerStart = PlayerStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SessionStart_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "ReceiveEndPlay");

	Params::BP_SessionStart_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.RemovePlayerInside
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::RemovePlayerInside(class ABP_UPPlayerCharacter_C* Player, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "RemovePlayerInside");

	Params::BP_SessionStart_C_RemovePlayerInside Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_SessionStart.BP_SessionStart_C.SetEngineRunning
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRunning                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::SetEngineRunning(bool IsRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "SetEngineRunning");

	Params::BP_SessionStart_C_SetEngineRunning Parms{};

	Parms.IsRunning = IsRunning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.SetEngineSoundMixEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::SetEngineSoundMixEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "SetEngineSoundMixEnabled");

	Params::BP_SessionStart_C_SetEngineSoundMixEnabled Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.SetSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSelected_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::SetSelected(bool IsSelected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "SetSelected");

	Params::BP_SessionStart_C_SetSelected Parms{};

	Parms.IsSelected_0 = IsSelected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.ShowEnteringDialogue
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SessionStart_C::ShowEnteringDialogue(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "ShowEnteringDialogue");

	Params::BP_SessionStart_C_ShowEnteringDialogue Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SessionStart.BP_SessionStart_C.ShowTakeOffDialogue
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::ShowTakeOffDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "ShowTakeOffDialogue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.StartLanding
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::StartLanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "StartLanding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.Timeline_Landing__FinishedFunc
// (BlueprintEvent)

void ABP_SessionStart_C::Timeline_Landing__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "Timeline_Landing__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.Timeline_Landing__UpdateFunc
// (BlueprintEvent)

void ABP_SessionStart_C::Timeline_Landing__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "Timeline_Landing__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.Timeline_OpenDoor__FinishedFunc
// (BlueprintEvent)

void ABP_SessionStart_C::Timeline_OpenDoor__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "Timeline_OpenDoor__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.Timeline_OpenDoor__UpdateFunc
// (BlueprintEvent)

void ABP_SessionStart_C::Timeline_OpenDoor__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "Timeline_OpenDoor__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SessionStart.BP_SessionStart_C.UpdateVisibility
// (BlueprintCallable, BlueprintEvent)

void ABP_SessionStart_C::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SessionStart_C", "UpdateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}

}

