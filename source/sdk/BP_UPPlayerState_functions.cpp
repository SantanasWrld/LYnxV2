#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPPlayerState

#include "Basic.hpp"

#include "BP_UPPlayerState_classes.hpp"
#include "BP_UPPlayerState_parameters.hpp"


namespace SDK
{

// Function BP_UPPlayerState.BP_UPPlayerState_C.AddInventoryItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_InventoryItem                         Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_InventoryItem_C*              SpawnedItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::AddInventoryItem(E_InventoryItem Item, class ABP_InventoryItem_C* SpawnedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "AddInventoryItem");

	Params::BP_UPPlayerState_C_AddInventoryItem Parms{};

	Parms.Item = Item;
	Parms.SpawnedItem = SpawnedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.AddMinimumItems
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::AddMinimumItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "AddMinimumItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.AskPlayername
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::AskPlayername()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "AskPlayername");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.CheckPlayername
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::CheckPlayername()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "CheckPlayername");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.ClearIfNeeded
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::ClearIfNeeded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "ClearIfNeeded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.CreateSave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_UPPlayerStateSave_C**         Save                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::CreateSave(class UBP_UPPlayerStateSave_C** Save)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "CreateSave");

	Params::BP_UPPlayerState_C_CreateSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Save != nullptr)
		*Save = Parms.Save;
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.ExecuteUbergraph_BP_UPPlayerState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::ExecuteUbergraph_BP_UPPlayerState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "ExecuteUbergraph_BP_UPPlayerState");

	Params::BP_UPPlayerState_C_ExecuteUbergraph_BP_UPPlayerState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.GetPlayerCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C**         Player                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::GetPlayerCharacter(class ABP_UPPlayerCharacter_C** Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "GetPlayerCharacter");

	Params::BP_UPPlayerState_C_GetPlayerCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player != nullptr)
		*Player = Parms.Player;
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.GetSaveSlotName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString*                          SlotName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::GetSaveSlotName(class FString* SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "GetSaveSlotName");

	Params::BP_UPPlayerState_C_GetSaveSlotName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SlotName != nullptr)
		*SlotName = std::move(Parms.SlotName);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.Initialize
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.InitInventory
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::InitInventory(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "InitInventory");

	Params::BP_UPPlayerState_C_InitInventory Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.ItemsRecoveredNotification
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::ItemsRecoveredNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "ItemsRecoveredNotification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.LoadSave
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::LoadSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "LoadSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.OnRep_PlayerAvatar
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::OnRep_PlayerAvatar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "OnRep_PlayerAvatar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.OnRep_SteamId
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::OnRep_SteamId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "OnRep_SteamId");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.PlayerJoinedNotification
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::PlayerJoinedNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "PlayerJoinedNotification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.PlayerKilled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          KilledCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::PlayerKilled(class ABP_KillableCharacter_C* KilledCharacter, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "PlayerKilled");

	Params::BP_UPPlayerState_C_PlayerKilled Parms{};

	Parms.KilledCharacter = KilledCharacter;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.PlayerLeftNotification
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::PlayerLeftNotification(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "PlayerLeftNotification");

	Params::BP_UPPlayerState_C_PlayerLeftNotification Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_UPPlayerState_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "ReceiveEndPlay");

	Params::BP_UPPlayerState_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.RegisterToDeath
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::RegisterToDeath(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "RegisterToDeath");

	Params::BP_UPPlayerState_C_RegisterToDeath Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.SaveData
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::SaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "SaveData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.ShouldResetInventory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Reset                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::ShouldResetInventory(bool* Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "ShouldResetInventory");

	Params::BP_UPPlayerState_C_ShouldResetInventory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Reset != nullptr)
		*Reset = Parms.Reset;
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.UpdateInventoryItems
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerState_C::UpdateInventoryItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "UpdateInventoryItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.UpdatePlayerAvatar
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_PlayerAvatar                          Avatar                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::UpdatePlayerAvatar(E_PlayerAvatar Avatar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "UpdatePlayerAvatar");

	Params::BP_UPPlayerState_C_UpdatePlayerAvatar Parms{};

	Parms.Avatar = Avatar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerState.BP_UPPlayerState_C.UpdatePlayername
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerName_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_UPPlayerState_C::UpdatePlayername(const class FString& PlayerName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerState_C", "UpdatePlayername");

	Params::BP_UPPlayerState_C_UpdatePlayername Parms{};

	Parms.PlayerName_0 = std::move(PlayerName_0);

	UObject::ProcessEvent(Func, &Parms);
}

}

