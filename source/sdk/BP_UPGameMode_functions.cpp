#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPGameMode

#include "Basic.hpp"

#include "BP_UPGameMode_classes.hpp"
#include "BP_UPGameMode_parameters.hpp"


namespace SDK
{

// Function BP_UPGameMode.BP_UPGameMode_C.CheckPlayersCount
// (BlueprintCallable, BlueprintEvent)

void ABP_UPGameMode_C::CheckPlayersCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "CheckPlayersCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.ChoosePlayerStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AActor* ABP_UPGameMode_C::ChoosePlayerStart(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "ChoosePlayerStart");

	Params::BP_UPGameMode_C_ChoosePlayerStart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UPGameMode.BP_UPGameMode_C.ExecuteUbergraph_BP_UPGameMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::ExecuteUbergraph_BP_UPGameMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "ExecuteUbergraph_BP_UPGameMode");

	Params::BP_UPGameMode_C_ExecuteUbergraph_BP_UPGameMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPGameMode.BP_UPGameMode_C.ForceSpawnPlayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerController_C*         PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::ForceSpawnPlayer(class ABP_UPPlayerController_C* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "ForceSpawnPlayer");

	Params::BP_UPGameMode_C_ForceSpawnPlayer Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPGameMode.BP_UPGameMode_C.GetLastPlayerStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerStart**                    PlayerStart                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::GetLastPlayerStart(class APlayerStart** PlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "GetLastPlayerStart");

	Params::BP_UPGameMode_C_GetLastPlayerStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerStart != nullptr)
		*PlayerStart = Parms.PlayerStart;
}


// Function BP_UPGameMode.BP_UPGameMode_C.GetNextPlayerStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerStart**                    PlayerStart                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::GetNextPlayerStart(class APlayerStart** PlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "GetNextPlayerStart");

	Params::BP_UPGameMode_C_GetNextPlayerStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerStart != nullptr)
		*PlayerStart = Parms.PlayerStart;
}


// Function BP_UPGameMode.BP_UPGameMode_C.GetPlayerStarts
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class APlayerStart*>*            PlayerStarts_0                                         (Parm, OutParm)

void ABP_UPGameMode_C::GetPlayerStarts(TArray<class APlayerStart*>* PlayerStarts_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "GetPlayerStarts");

	Params::BP_UPGameMode_C_GetPlayerStarts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerStarts_0 != nullptr)
		*PlayerStarts_0 = std::move(Parms.PlayerStarts_0);
}


// Function BP_UPGameMode.BP_UPGameMode_C.IncrementPlayerStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UPGameMode_C::IncrementPlayerStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "IncrementPlayerStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.InitDataIO
// (BlueprintCallable, BlueprintEvent)

void ABP_UPGameMode_C::InitDataIO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "InitDataIO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.InitEpisodes
// (BlueprintCallable, BlueprintEvent)

void ABP_UPGameMode_C::InitEpisodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "InitEpisodes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.InitLoading
// (BlueprintCallable, BlueprintEvent)

void ABP_UPGameMode_C::InitLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "InitLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.InitPlayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerController_C*         PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_UPPlayerCharacter_C*          PlayerCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::InitPlayer(class ABP_UPPlayerController_C* PlayerController, class ABP_UPPlayerCharacter_C* PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "InitPlayer");

	Params::BP_UPGameMode_C_InitPlayer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.PlayerCharacter = PlayerCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPGameMode.BP_UPGameMode_C.InitScoring
// (BlueprintCallable, BlueprintEvent)

void ABP_UPGameMode_C::InitScoring()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "InitScoring");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.InitVoiceChat
// (BlueprintCallable, BlueprintEvent)

void ABP_UPGameMode_C::InitVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "InitVoiceChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_UPGameMode_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "ReceiveTick");

	Params::BP_UPGameMode_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPGameMode.BP_UPGameMode_C.RegisterScoringComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBPC_ScoringComponent_C*          Scoring_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::RegisterScoringComponent(class UBPC_ScoringComponent_C* Scoring_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "RegisterScoringComponent");

	Params::BP_UPGameMode_C_RegisterScoringComponent Parms{};

	Parms.Scoring_0 = Scoring_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPGameMode.BP_UPGameMode_C.ResetVoiceChat
// (BlueprintCallable, BlueprintEvent)

void ABP_UPGameMode_C::ResetVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "ResetVoiceChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPGameMode.BP_UPGameMode_C.SelectSessionStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_SessionStart_C**              SessionStart_0                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::SelectSessionStart(class ABP_SessionStart_C** SessionStart_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "SelectSessionStart");

	Params::BP_UPGameMode_C_SelectSessionStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SessionStart_0 != nullptr)
		*SessionStart_0 = Parms.SessionStart_0;
}


// Function BP_UPGameMode.BP_UPGameMode_C.ShouldEnableVoiceChat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   EnableVoiceChat                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPGameMode_C::ShouldEnableVoiceChat(bool* EnableVoiceChat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPGameMode_C", "ShouldEnableVoiceChat");

	Params::BP_UPGameMode_C_ShouldEnableVoiceChat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EnableVoiceChat != nullptr)
		*EnableVoiceChat = Parms.EnableVoiceChat;
}

}

