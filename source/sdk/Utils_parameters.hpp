#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Utils

#include "Basic.hpp"

#include "SkeletalMerging_structs.hpp"
#include "ImageWriteQueue_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_AvatarHeadMorphTargets_structs.hpp"
#include "S_CameroidActorScore_structs.hpp"
#include "E_ScoringActorState_structs.hpp"
#include "S_PlayerAvatar_structs.hpp"
#include "S_CameroidCapture_structs.hpp"
#include "E_InventoryItem_structs.hpp"
#include "S_InventoryItem_structs.hpp"


namespace SDK::Params
{

// Function Utils.Utils_C.GetDangerForDifficulty
// 0x0040 (0x0040 - 0x0000)
struct Utils_C_GetDangerForDifficulty final
{
public:
	int32                                         Difficulty;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Danger;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetDangerForDifficulty) == 0x000008, "Wrong alignment on Utils_C_GetDangerForDifficulty");
static_assert(sizeof(Utils_C_GetDangerForDifficulty) == 0x000040, "Wrong size on Utils_C_GetDangerForDifficulty");
static_assert(offsetof(Utils_C_GetDangerForDifficulty, Difficulty) == 0x000000, "Member 'Utils_C_GetDangerForDifficulty::Difficulty' has a wrong offset!");
static_assert(offsetof(Utils_C_GetDangerForDifficulty, __WorldContext) == 0x000008, "Member 'Utils_C_GetDangerForDifficulty::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetDangerForDifficulty, Danger) == 0x000010, "Member 'Utils_C_GetDangerForDifficulty::Danger' has a wrong offset!");
static_assert(offsetof(Utils_C_GetDangerForDifficulty, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Utils_C_GetDangerForDifficulty::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetDangerForDifficulty, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Utils_C_GetDangerForDifficulty::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetDangerForDifficulty, CallFunc_Round_ReturnValue) == 0x000028, "Member 'Utils_C_GetDangerForDifficulty::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetDangerForDifficulty, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000030, "Member 'Utils_C_GetDangerForDifficulty::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_GetDangerForDifficulty, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Utils_C_GetDangerForDifficulty::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.SetPercentageValue
// 0x0038 (0x0038 - 0x0000)
struct Utils_C_SetPercentageValue final
{
public:
	class UTextBlock*                             Text;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsPercent_Float_ReturnValue;              // 0x0018(0x0018)()
	float                                         CallFunc_AsPercent_Float_Value_ImplicitCast;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_SetPercentageValue) == 0x000008, "Wrong alignment on Utils_C_SetPercentageValue");
static_assert(sizeof(Utils_C_SetPercentageValue) == 0x000038, "Wrong size on Utils_C_SetPercentageValue");
static_assert(offsetof(Utils_C_SetPercentageValue, Text) == 0x000000, "Member 'Utils_C_SetPercentageValue::Text' has a wrong offset!");
static_assert(offsetof(Utils_C_SetPercentageValue, Value) == 0x000008, "Member 'Utils_C_SetPercentageValue::Value' has a wrong offset!");
static_assert(offsetof(Utils_C_SetPercentageValue, __WorldContext) == 0x000010, "Member 'Utils_C_SetPercentageValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_SetPercentageValue, CallFunc_AsPercent_Float_ReturnValue) == 0x000018, "Member 'Utils_C_SetPercentageValue::CallFunc_AsPercent_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_SetPercentageValue, CallFunc_AsPercent_Float_Value_ImplicitCast) == 0x000030, "Member 'Utils_C_SetPercentageValue::CallFunc_AsPercent_Float_Value_ImplicitCast' has a wrong offset!");

// Function Utils.Utils_C.GetPawnNavData
// 0x0038 (0x0038 - 0x0000)
struct Utils_C_GetPawnNavData final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         NavData;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            _Controller;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         CallFunc_GetControllerNavData_NavData;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetPawnNavData) == 0x000008, "Wrong alignment on Utils_C_GetPawnNavData");
static_assert(sizeof(Utils_C_GetPawnNavData) == 0x000038, "Wrong size on Utils_C_GetPawnNavData");
static_assert(offsetof(Utils_C_GetPawnNavData, Pawn) == 0x000000, "Member 'Utils_C_GetPawnNavData::Pawn' has a wrong offset!");
static_assert(offsetof(Utils_C_GetPawnNavData, __WorldContext) == 0x000008, "Member 'Utils_C_GetPawnNavData::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetPawnNavData, NavData) == 0x000010, "Member 'Utils_C_GetPawnNavData::NavData' has a wrong offset!");
static_assert(offsetof(Utils_C_GetPawnNavData, _Controller) == 0x000018, "Member 'Utils_C_GetPawnNavData::_Controller' has a wrong offset!");
static_assert(offsetof(Utils_C_GetPawnNavData, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'Utils_C_GetPawnNavData::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetPawnNavData, CallFunc_GetControllerNavData_NavData) == 0x000028, "Member 'Utils_C_GetPawnNavData::CallFunc_GetControllerNavData_NavData' has a wrong offset!");
static_assert(offsetof(Utils_C_GetPawnNavData, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Utils_C_GetPawnNavData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.GetControllerNavData
// 0x0030 (0x0030 - 0x0000)
struct Utils_C_GetControllerNavData final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         NavData;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBPC_NavDataReference_C*                _NavDataRef;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBPC_NavDataReference_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetControllerNavData) == 0x000008, "Wrong alignment on Utils_C_GetControllerNavData");
static_assert(sizeof(Utils_C_GetControllerNavData) == 0x000030, "Wrong size on Utils_C_GetControllerNavData");
static_assert(offsetof(Utils_C_GetControllerNavData, Controller) == 0x000000, "Member 'Utils_C_GetControllerNavData::Controller' has a wrong offset!");
static_assert(offsetof(Utils_C_GetControllerNavData, __WorldContext) == 0x000008, "Member 'Utils_C_GetControllerNavData::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetControllerNavData, NavData) == 0x000010, "Member 'Utils_C_GetControllerNavData::NavData' has a wrong offset!");
static_assert(offsetof(Utils_C_GetControllerNavData, _NavDataRef) == 0x000018, "Member 'Utils_C_GetControllerNavData::_NavDataRef' has a wrong offset!");
static_assert(offsetof(Utils_C_GetControllerNavData, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'Utils_C_GetControllerNavData::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetControllerNavData, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Utils_C_GetControllerNavData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.ExportTextureAsJpg
// 0x0320 (0x0320 - 0x0000)
struct Utils_C_ExportTextureAsJpg final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDesktopFolderPath_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0160(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01D0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0220(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0270(0x0010)(ReferenceParm)
	struct FImageWriteOptions                     K2Node_MakeStruct_ImageWriteOptions;               // 0x0280(0x0060)(ContainsInstancedReference)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02E0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_ExportTextureAsJpg) == 0x000010, "Wrong alignment on Utils_C_ExportTextureAsJpg");
static_assert(sizeof(Utils_C_ExportTextureAsJpg) == 0x000320, "Wrong size on Utils_C_ExportTextureAsJpg");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, Texture) == 0x000000, "Member 'Utils_C_ExportTextureAsJpg::Texture' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, __WorldContext) == 0x000008, "Member 'Utils_C_ExportTextureAsJpg::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, Success) == 0x000010, "Member 'Utils_C_ExportTextureAsJpg::Success' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_GetDesktopFolderPath_ReturnValue) == 0x000018, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_GetDesktopFolderPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Now_ReturnValue) == 0x000028, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_IsEmpty_ReturnValue) == 0x000030, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_BreakDateTime_Year) == 0x000034, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_BreakDateTime_Month) == 0x000038, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_BreakDateTime_Day) == 0x00003C, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_BreakDateTime_Hour) == 0x000040, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_BreakDateTime_Minute) == 0x000044, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_BreakDateTime_Second) == 0x000048, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_BreakDateTime_Millisecond) == 0x00004C, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000050, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000058, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'Utils_C_ExportTextureAsJpg::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'Utils_C_ExportTextureAsJpg::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000100, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000108, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'Utils_C_ExportTextureAsJpg::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, K2Node_MakeStruct_FormatArgumentData_3) == 0x000160, "Member 'Utils_C_ExportTextureAsJpg::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x0001B0, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Conv_IntToText_ReturnValue) == 0x0001B8, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001D0, "Member 'Utils_C_ExportTextureAsJpg::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, K2Node_MakeStruct_FormatArgumentData_5) == 0x000220, "Member 'Utils_C_ExportTextureAsJpg::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, K2Node_MakeArray_Array) == 0x000270, "Member 'Utils_C_ExportTextureAsJpg::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, K2Node_MakeStruct_ImageWriteOptions) == 0x000280, "Member 'Utils_C_ExportTextureAsJpg::K2Node_MakeStruct_ImageWriteOptions' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Format_ReturnValue) == 0x0002E0, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Conv_TextToString_ReturnValue) == 0x0002F8, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ExportTextureAsJpg, CallFunc_Concat_StrStr_ReturnValue) == 0x000308, "Member 'Utils_C_ExportTextureAsJpg::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.ApplyHeadMorphTargets
// 0x00A8 (0x00A8 - 0x0000)
struct Utils_C_ApplyHeadMorphTargets final
{
public:
	class USkeletalMeshComponent*                 HeadMesh;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_AvatarHeadMorphTargets              MorphTargets;                                      // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_ApplyHeadMorphTargets) == 0x000008, "Wrong alignment on Utils_C_ApplyHeadMorphTargets");
static_assert(sizeof(Utils_C_ApplyHeadMorphTargets) == 0x0000A8, "Wrong size on Utils_C_ApplyHeadMorphTargets");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, HeadMesh) == 0x000000, "Member 'Utils_C_ApplyHeadMorphTargets::HeadMesh' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, MorphTargets) == 0x000008, "Member 'Utils_C_ApplyHeadMorphTargets::MorphTargets' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, __WorldContext) == 0x000058, "Member 'Utils_C_ApplyHeadMorphTargets::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, Temp_int_Array_Index_Variable) == 0x000060, "Member 'Utils_C_ApplyHeadMorphTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'Utils_C_ApplyHeadMorphTargets::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'Utils_C_ApplyHeadMorphTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, CallFunc_Array_Get_Item) == 0x00007C, "Member 'Utils_C_ApplyHeadMorphTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, CallFunc_Map_Find_Value) == 0x000088, "Member 'Utils_C_ApplyHeadMorphTargets::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'Utils_C_ApplyHeadMorphTargets::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'Utils_C_ApplyHeadMorphTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'Utils_C_ApplyHeadMorphTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'Utils_C_ApplyHeadMorphTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ApplyHeadMorphTargets, CallFunc_SetMorphTarget_Value_ImplicitCast) == 0x0000A0, "Member 'Utils_C_ApplyHeadMorphTargets::CallFunc_SetMorphTarget_Value_ImplicitCast' has a wrong offset!");

// Function Utils.Utils_C.GetCapturedActorDisplayName
// 0x0140 (0x0140 - 0x0000)
struct Utils_C_GetCapturedActorDisplayName final
{
public:
	struct FS_CameroidActorScore                  ActorScore;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 DisplayName;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         _NameParts;                                        // 0x0030(0x0010)(Edit, BlueprintVisible)
	TSet<E_ScoringActorState>                     HiddenStates;                                      // 0x0040(0x0050)(Edit, BlueprintVisible)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSet<E_ScoringActorState>                     K2Node_MakeVariable_MakeVariableOutput;            // 0x00E0(0x0050)()
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetCapturedActorDisplayName) == 0x000008, "Wrong alignment on Utils_C_GetCapturedActorDisplayName");
static_assert(sizeof(Utils_C_GetCapturedActorDisplayName) == 0x000140, "Wrong size on Utils_C_GetCapturedActorDisplayName");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, ActorScore) == 0x000000, "Member 'Utils_C_GetCapturedActorDisplayName::ActorScore' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, __WorldContext) == 0x000018, "Member 'Utils_C_GetCapturedActorDisplayName::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, DisplayName) == 0x000020, "Member 'Utils_C_GetCapturedActorDisplayName::DisplayName' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, _NameParts) == 0x000030, "Member 'Utils_C_GetCapturedActorDisplayName::_NameParts' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, HiddenStates) == 0x000040, "Member 'Utils_C_GetCapturedActorDisplayName::HiddenStates' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000090, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_JoinStringArray_ReturnValue) == 0x0000A0, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0000B8, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x0000D0, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, K2Node_MakeVariable_MakeVariableOutput) == 0x0000E0, "Member 'Utils_C_GetCapturedActorDisplayName::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_Set_Contains_ReturnValue) == 0x000130, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_Array_Add_ReturnValue_1) == 0x000134, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_GetCapturedActorDisplayName, CallFunc_Array_Add_ReturnValue_2) == 0x000138, "Member 'Utils_C_GetCapturedActorDisplayName::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function Utils.Utils_C.IsNoBloodModeEnabled
// 0x0030 (0x0030 - 0x0000)
struct Utils_C_IsNoBloodModeEnabled final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NoBloodModeEnabled;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_IsNoBloodModeEnabled) == 0x000008, "Wrong alignment on Utils_C_IsNoBloodModeEnabled");
static_assert(sizeof(Utils_C_IsNoBloodModeEnabled) == 0x000030, "Wrong size on Utils_C_IsNoBloodModeEnabled");
static_assert(offsetof(Utils_C_IsNoBloodModeEnabled, __WorldContext) == 0x000000, "Member 'Utils_C_IsNoBloodModeEnabled::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNoBloodModeEnabled, NoBloodModeEnabled) == 0x000008, "Member 'Utils_C_IsNoBloodModeEnabled::NoBloodModeEnabled' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNoBloodModeEnabled, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'Utils_C_IsNoBloodModeEnabled::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNoBloodModeEnabled, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Utils_C_IsNoBloodModeEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNoBloodModeEnabled, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000020, "Member 'Utils_C_IsNoBloodModeEnabled::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNoBloodModeEnabled, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Utils_C_IsNoBloodModeEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Utils.Utils_C.LoadAvatarMesh
// 0x0178 (0x0178 - 0x0000)
struct Utils_C_LoadAvatarMesh final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HeadMesh;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerAvatar                        Avatar;                                            // 0x0010(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             ClearMaterials;                                    // 0x00B8(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00C8(0x0010)(ReferenceParm)
	TArray<class USkeletalMesh*>                  K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkeletalMeshMergeParams               K2Node_MakeStruct_SkeletalMeshMergeParams;         // 0x00F0(0x0040)()
	class USkeletalMesh*                          CallFunc_MergeMeshes_ReturnValue;                  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaterialSlotNameValid_ReturnValue;      // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaterialSlotNameValid_ReturnValue_1;    // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Map_Find_Value;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_LoadAvatarMesh) == 0x000008, "Wrong alignment on Utils_C_LoadAvatarMesh");
static_assert(sizeof(Utils_C_LoadAvatarMesh) == 0x000178, "Wrong size on Utils_C_LoadAvatarMesh");
static_assert(offsetof(Utils_C_LoadAvatarMesh, Mesh) == 0x000000, "Member 'Utils_C_LoadAvatarMesh::Mesh' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, HeadMesh) == 0x000008, "Member 'Utils_C_LoadAvatarMesh::HeadMesh' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, Avatar) == 0x000010, "Member 'Utils_C_LoadAvatarMesh::Avatar' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, __WorldContext) == 0x0000B0, "Member 'Utils_C_LoadAvatarMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, ClearMaterials) == 0x0000B8, "Member 'Utils_C_LoadAvatarMesh::ClearMaterials' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_Map_Keys_Keys) == 0x0000C8, "Member 'Utils_C_LoadAvatarMesh::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, K2Node_MakeArray_Array) == 0x0000D8, "Member 'Utils_C_LoadAvatarMesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'Utils_C_LoadAvatarMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, K2Node_MakeStruct_SkeletalMeshMergeParams) == 0x0000F0, "Member 'Utils_C_LoadAvatarMesh::K2Node_MakeStruct_SkeletalMeshMergeParams' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_MergeMeshes_ReturnValue) == 0x000130, "Member 'Utils_C_LoadAvatarMesh::CallFunc_MergeMeshes_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, K2Node_MakeArray_Array_1) == 0x000138, "Member 'Utils_C_LoadAvatarMesh::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, Temp_int_Array_Index_Variable) == 0x000148, "Member 'Utils_C_LoadAvatarMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_Array_Get_Item) == 0x00014C, "Member 'Utils_C_LoadAvatarMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_IsMaterialSlotNameValid_ReturnValue) == 0x000154, "Member 'Utils_C_LoadAvatarMesh::CallFunc_IsMaterialSlotNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_IsMaterialSlotNameValid_ReturnValue_1) == 0x000155, "Member 'Utils_C_LoadAvatarMesh::CallFunc_IsMaterialSlotNameValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_Map_Find_Value) == 0x000158, "Member 'Utils_C_LoadAvatarMesh::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'Utils_C_LoadAvatarMesh::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, Temp_int_Loop_Counter_Variable) == 0x000164, "Member 'Utils_C_LoadAvatarMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'Utils_C_LoadAvatarMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'Utils_C_LoadAvatarMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_LoadAvatarMesh, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'Utils_C_LoadAvatarMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.GetInteriorVolume
// 0x0060 (0x0060 - 0x0000)
struct Utils_C_GetInteriorVolume final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_InteriorVolume_C*                   InteriorVolume;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_InteriorVolume_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InteriorVolume_C*                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVolume_Result;                        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetInteriorVolume) == 0x000008, "Wrong alignment on Utils_C_GetInteriorVolume");
static_assert(sizeof(Utils_C_GetInteriorVolume) == 0x000060, "Wrong size on Utils_C_GetInteriorVolume");
static_assert(offsetof(Utils_C_GetInteriorVolume, Location) == 0x000000, "Member 'Utils_C_GetInteriorVolume::Location' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, __WorldContext) == 0x000018, "Member 'Utils_C_GetInteriorVolume::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, InteriorVolume) == 0x000020, "Member 'Utils_C_GetInteriorVolume::InteriorVolume' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Utils_C_GetInteriorVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Utils_C_GetInteriorVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Utils_C_GetInteriorVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'Utils_C_GetInteriorVolume::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Utils_C_GetInteriorVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, CallFunc_Array_Get_Item) == 0x000050, "Member 'Utils_C_GetInteriorVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'Utils_C_GetInteriorVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInteriorVolume, CallFunc_IsInVolume_Result) == 0x000059, "Member 'Utils_C_GetInteriorVolume::CallFunc_IsInVolume_Result' has a wrong offset!");

// Function Utils.Utils_C.InstantFear
// 0x00A8 (0x00A8 - 0x0000)
struct Utils_C_InstantFear final
{
public:
	class AActor*                                 Initiatior;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinFear;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_InstantFear) == 0x000008, "Wrong alignment on Utils_C_InstantFear");
static_assert(sizeof(Utils_C_InstantFear) == 0x0000A8, "Wrong size on Utils_C_InstantFear");
static_assert(offsetof(Utils_C_InstantFear, Initiatior) == 0x000000, "Member 'Utils_C_InstantFear::Initiatior' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, Radius) == 0x000008, "Member 'Utils_C_InstantFear::Radius' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, MinFear) == 0x000010, "Member 'Utils_C_InstantFear::MinFear' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, __WorldContext) == 0x000018, "Member 'Utils_C_InstantFear::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Utils_C_InstantFear::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'Utils_C_InstantFear::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member 'Utils_C_InstantFear::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'Utils_C_InstantFear::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'Utils_C_InstantFear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, Temp_object_Variable) == 0x000050, "Member 'Utils_C_InstantFear::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, K2Node_MakeArray_Array) == 0x000060, "Member 'Utils_C_InstantFear::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_SphereOverlapActors_OutActors) == 0x000070, "Member 'Utils_C_InstantFear::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_SphereOverlapActors_ReturnValue) == 0x000080, "Member 'Utils_C_InstantFear::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'Utils_C_InstantFear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_Array_Get_Item) == 0x000088, "Member 'Utils_C_InstantFear::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'Utils_C_InstantFear::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000098, "Member 'Utils_C_InstantFear::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Utils_C_InstantFear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Utils_C_InstantFear, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x0000A4, "Member 'Utils_C_InstantFear::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function Utils.Utils_C.IsInFrustrum
// 0x0188 (0x0188 - 0x0000)
struct Utils_C_IsInFrustrum final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        HorizontalHalfFov;                                 // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VerticalHalfFov;                                   // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _CameraToPoint;                                    // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_1;     // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue_1;                    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_IsInFrustrum) == 0x000008, "Wrong alignment on Utils_C_IsInFrustrum");
static_assert(sizeof(Utils_C_IsInFrustrum) == 0x000188, "Wrong size on Utils_C_IsInFrustrum");
static_assert(offsetof(Utils_C_IsInFrustrum, Point) == 0x000000, "Member 'Utils_C_IsInFrustrum::Point' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CameraLocation) == 0x000018, "Member 'Utils_C_IsInFrustrum::CameraLocation' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CameraRotation) == 0x000030, "Member 'Utils_C_IsInFrustrum::CameraRotation' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, HorizontalHalfFov) == 0x000048, "Member 'Utils_C_IsInFrustrum::HorizontalHalfFov' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, VerticalHalfFov) == 0x000050, "Member 'Utils_C_IsInFrustrum::VerticalHalfFov' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, __WorldContext) == 0x000058, "Member 'Utils_C_IsInFrustrum::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, Result) == 0x000060, "Member 'Utils_C_IsInFrustrum::Result' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, _CameraToPoint) == 0x000068, "Member 'Utils_C_IsInFrustrum::_CameraToPoint' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_GetForwardVector_ReturnValue) == 0x000080, "Member 'Utils_C_IsInFrustrum::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_GetRightVector_ReturnValue) == 0x000098, "Member 'Utils_C_IsInFrustrum::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_GetUpVector_ReturnValue) == 0x0000B0, "Member 'Utils_C_IsInFrustrum::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'Utils_C_IsInFrustrum::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_Normal_ReturnValue) == 0x0000E0, "Member 'Utils_C_IsInFrustrum::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x0000F8, "Member 'Utils_C_IsInFrustrum::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_Normal_ReturnValue_1) == 0x000110, "Member 'Utils_C_IsInFrustrum::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_Dot_VectorVector_ReturnValue) == 0x000128, "Member 'Utils_C_IsInFrustrum::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_ProjectVectorOnToPlane_ReturnValue_1) == 0x000130, "Member 'Utils_C_IsInFrustrum::CallFunc_ProjectVectorOnToPlane_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_DegAcos_ReturnValue) == 0x000148, "Member 'Utils_C_IsInFrustrum::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_Normal_ReturnValue_2) == 0x000150, "Member 'Utils_C_IsInFrustrum::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000168, "Member 'Utils_C_IsInFrustrum::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000170, "Member 'Utils_C_IsInFrustrum::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_DegAcos_ReturnValue_1) == 0x000178, "Member 'Utils_C_IsInFrustrum::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Utils_C_IsInFrustrum, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'Utils_C_IsInFrustrum::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Utils.Utils_C.OneShotRadialImpulse
// 0x0010 (0x0010 - 0x0000)
struct Utils_C_OneShotRadialImpulse final
{
public:
	class URadialForceComponent*                  RadialForce;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_OneShotRadialImpulse) == 0x000008, "Wrong alignment on Utils_C_OneShotRadialImpulse");
static_assert(sizeof(Utils_C_OneShotRadialImpulse) == 0x000010, "Wrong size on Utils_C_OneShotRadialImpulse");
static_assert(offsetof(Utils_C_OneShotRadialImpulse, RadialForce) == 0x000000, "Member 'Utils_C_OneShotRadialImpulse::RadialForce' has a wrong offset!");
static_assert(offsetof(Utils_C_OneShotRadialImpulse, __WorldContext) == 0x000008, "Member 'Utils_C_OneShotRadialImpulse::__WorldContext' has a wrong offset!");

// Function Utils.Utils_C.IsSessionHost
// 0x0030 (0x0030 - 0x0000)
struct Utils_C_IsSessionHost final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHost;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_IsSessionHost) == 0x000008, "Wrong alignment on Utils_C_IsSessionHost");
static_assert(sizeof(Utils_C_IsSessionHost) == 0x000030, "Wrong size on Utils_C_IsSessionHost");
static_assert(offsetof(Utils_C_IsSessionHost, WorldContextObject) == 0x000000, "Member 'Utils_C_IsSessionHost::WorldContextObject' has a wrong offset!");
static_assert(offsetof(Utils_C_IsSessionHost, __WorldContext) == 0x000008, "Member 'Utils_C_IsSessionHost::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_IsSessionHost, IsHost) == 0x000010, "Member 'Utils_C_IsSessionHost::IsHost' has a wrong offset!");
static_assert(offsetof(Utils_C_IsSessionHost, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'Utils_C_IsSessionHost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsSessionHost, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000020, "Member 'Utils_C_IsSessionHost::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(Utils_C_IsSessionHost, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Utils_C_IsSessionHost::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Utils.Utils_C.GetInventoryItemSaveSlot
// 0x00B0 (0x00B0 - 0x0000)
struct Utils_C_GetInventoryItemSaveSlot final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Slot;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetInventoryItemSaveSlot) == 0x000008, "Wrong alignment on Utils_C_GetInventoryItemSaveSlot");
static_assert(sizeof(Utils_C_GetInventoryItemSaveSlot) == 0x0000B0, "Wrong size on Utils_C_GetInventoryItemSaveSlot");
static_assert(offsetof(Utils_C_GetInventoryItemSaveSlot, ItemId) == 0x000000, "Member 'Utils_C_GetInventoryItemSaveSlot::ItemId' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemSaveSlot, __WorldContext) == 0x000008, "Member 'Utils_C_GetInventoryItemSaveSlot::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemSaveSlot, Slot) == 0x000010, "Member 'Utils_C_GetInventoryItemSaveSlot::Slot' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemSaveSlot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'Utils_C_GetInventoryItemSaveSlot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemSaveSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'Utils_C_GetInventoryItemSaveSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemSaveSlot, K2Node_MakeArray_Array) == 0x000078, "Member 'Utils_C_GetInventoryItemSaveSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemSaveSlot, CallFunc_Format_ReturnValue) == 0x000088, "Member 'Utils_C_GetInventoryItemSaveSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemSaveSlot, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A0, "Member 'Utils_C_GetInventoryItemSaveSlot::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.GetInventoryItemInfo
// 0x0108 (0x0108 - 0x0000)
struct Utils_C_GetInventoryItemInfo final
{
public:
	const class UObject*                          Context;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	E_InventoryItem                               Item;                                              // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InventoryItem                       ItemInfo;                                          // 0x0018(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InventoryItem                       CallFunc_Map_Find_Value;                           // 0x0098(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetInventoryItemInfo) == 0x000008, "Wrong alignment on Utils_C_GetInventoryItemInfo");
static_assert(sizeof(Utils_C_GetInventoryItemInfo) == 0x000108, "Wrong size on Utils_C_GetInventoryItemInfo");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, Context) == 0x000000, "Member 'Utils_C_GetInventoryItemInfo::Context' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, Item) == 0x000008, "Member 'Utils_C_GetInventoryItemInfo::Item' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, __WorldContext) == 0x000010, "Member 'Utils_C_GetInventoryItemInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, ItemInfo) == 0x000018, "Member 'Utils_C_GetInventoryItemInfo::ItemInfo' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, CallFunc_GetGameInstance_ReturnValue) == 0x000080, "Member 'Utils_C_GetInventoryItemInfo::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000088, "Member 'Utils_C_GetInventoryItemInfo::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'Utils_C_GetInventoryItemInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, CallFunc_Map_Find_Value) == 0x000098, "Member 'Utils_C_GetInventoryItemInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Utils_C_GetInventoryItemInfo, CallFunc_Map_Find_ReturnValue) == 0x000100, "Member 'Utils_C_GetInventoryItemInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.PrettifyBPClassName
// 0x0060 (0x0060 - 0x0000)
struct Utils_C_PrettifyBPClassName final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndsWith_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_PrettifyBPClassName) == 0x000008, "Wrong alignment on Utils_C_PrettifyBPClassName");
static_assert(sizeof(Utils_C_PrettifyBPClassName) == 0x000060, "Wrong size on Utils_C_PrettifyBPClassName");
static_assert(offsetof(Utils_C_PrettifyBPClassName, Class_0) == 0x000000, "Member 'Utils_C_PrettifyBPClassName::Class_0' has a wrong offset!");
static_assert(offsetof(Utils_C_PrettifyBPClassName, __WorldContext) == 0x000008, "Member 'Utils_C_PrettifyBPClassName::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_PrettifyBPClassName, Name_0) == 0x000010, "Member 'Utils_C_PrettifyBPClassName::Name_0' has a wrong offset!");
static_assert(offsetof(Utils_C_PrettifyBPClassName, CallFunc_GetClassDisplayName_ReturnValue) == 0x000020, "Member 'Utils_C_PrettifyBPClassName::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PrettifyBPClassName, CallFunc_Replace_ReturnValue) == 0x000030, "Member 'Utils_C_PrettifyBPClassName::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PrettifyBPClassName, CallFunc_EndsWith_ReturnValue) == 0x000040, "Member 'Utils_C_PrettifyBPClassName::CallFunc_EndsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PrettifyBPClassName, CallFunc_Len_ReturnValue) == 0x000044, "Member 'Utils_C_PrettifyBPClassName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PrettifyBPClassName, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'Utils_C_PrettifyBPClassName::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PrettifyBPClassName, CallFunc_GetSubstring_ReturnValue) == 0x000050, "Member 'Utils_C_PrettifyBPClassName::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.CanShowInputWidget
// 0x0028 (0x0028 - 0x0000)
struct Utils_C_CanShowInputWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanOpen;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_CanShowInputWidget) == 0x000008, "Wrong alignment on Utils_C_CanShowInputWidget");
static_assert(sizeof(Utils_C_CanShowInputWidget) == 0x000028, "Wrong size on Utils_C_CanShowInputWidget");
static_assert(offsetof(Utils_C_CanShowInputWidget, Widget) == 0x000000, "Member 'Utils_C_CanShowInputWidget::Widget' has a wrong offset!");
static_assert(offsetof(Utils_C_CanShowInputWidget, __WorldContext) == 0x000008, "Member 'Utils_C_CanShowInputWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_CanShowInputWidget, CanOpen) == 0x000010, "Member 'Utils_C_CanShowInputWidget::CanOpen' has a wrong offset!");
static_assert(offsetof(Utils_C_CanShowInputWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'Utils_C_CanShowInputWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_CanShowInputWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Utils_C_CanShowInputWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.HideInputWidget
// 0x0028 (0x0028 - 0x0000)
struct Utils_C_HideInputWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_HideInputWidget) == 0x000008, "Wrong alignment on Utils_C_HideInputWidget");
static_assert(sizeof(Utils_C_HideInputWidget) == 0x000028, "Wrong size on Utils_C_HideInputWidget");
static_assert(offsetof(Utils_C_HideInputWidget, Widget) == 0x000000, "Member 'Utils_C_HideInputWidget::Widget' has a wrong offset!");
static_assert(offsetof(Utils_C_HideInputWidget, __WorldContext) == 0x000008, "Member 'Utils_C_HideInputWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_HideInputWidget, CallFunc_IsVisible_ReturnValue) == 0x000010, "Member 'Utils_C_HideInputWidget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_HideInputWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'Utils_C_HideInputWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_HideInputWidget, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'Utils_C_HideInputWidget::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.ShowImmersiveWidget
// 0x0028 (0x0028 - 0x0000)
struct Utils_C_ShowImmersiveWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShowInputWidget_CanOpen;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_ShowImmersiveWidget) == 0x000008, "Wrong alignment on Utils_C_ShowImmersiveWidget");
static_assert(sizeof(Utils_C_ShowImmersiveWidget) == 0x000028, "Wrong size on Utils_C_ShowImmersiveWidget");
static_assert(offsetof(Utils_C_ShowImmersiveWidget, Widget) == 0x000000, "Member 'Utils_C_ShowImmersiveWidget::Widget' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowImmersiveWidget, __WorldContext) == 0x000008, "Member 'Utils_C_ShowImmersiveWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowImmersiveWidget, CallFunc_IsVisible_ReturnValue) == 0x000010, "Member 'Utils_C_ShowImmersiveWidget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowImmersiveWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'Utils_C_ShowImmersiveWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowImmersiveWidget, CallFunc_CanShowInputWidget_CanOpen) == 0x000020, "Member 'Utils_C_ShowImmersiveWidget::CallFunc_CanShowInputWidget_CanOpen' has a wrong offset!");

// Function Utils.Utils_C.ShowInputWidget
// 0x0038 (0x0038 - 0x0000)
struct Utils_C_ShowInputWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyUI;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShowInputWidget_CanOpen;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_ShowInputWidget) == 0x000008, "Wrong alignment on Utils_C_ShowInputWidget");
static_assert(sizeof(Utils_C_ShowInputWidget) == 0x000038, "Wrong size on Utils_C_ShowInputWidget");
static_assert(offsetof(Utils_C_ShowInputWidget, Widget) == 0x000000, "Member 'Utils_C_ShowInputWidget::Widget' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowInputWidget, OnlyUI) == 0x000008, "Member 'Utils_C_ShowInputWidget::OnlyUI' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowInputWidget, __WorldContext) == 0x000010, "Member 'Utils_C_ShowInputWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowInputWidget, CallFunc_IsVisible_ReturnValue) == 0x000018, "Member 'Utils_C_ShowInputWidget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowInputWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Utils_C_ShowInputWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowInputWidget, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'Utils_C_ShowInputWidget::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_ShowInputWidget, CallFunc_CanShowInputWidget_CanOpen) == 0x000030, "Member 'Utils_C_ShowInputWidget::CallFunc_CanShowInputWidget_CanOpen' has a wrong offset!");

// Function Utils.Utils_C.IsNotEmpty
// 0x0020 (0x0020 - 0x0000)
struct Utils_C_IsNotEmpty final
{
public:
	TArray<class UObject*>                        Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNotEmpty_0;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_IsNotEmpty) == 0x000008, "Wrong alignment on Utils_C_IsNotEmpty");
static_assert(sizeof(Utils_C_IsNotEmpty) == 0x000020, "Wrong size on Utils_C_IsNotEmpty");
static_assert(offsetof(Utils_C_IsNotEmpty, Array) == 0x000000, "Member 'Utils_C_IsNotEmpty::Array' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNotEmpty, __WorldContext) == 0x000010, "Member 'Utils_C_IsNotEmpty::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNotEmpty, IsNotEmpty_0) == 0x000018, "Member 'Utils_C_IsNotEmpty::IsNotEmpty_0' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNotEmpty, CallFunc_Array_IsEmpty_ReturnValue) == 0x000019, "Member 'Utils_C_IsNotEmpty::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_IsNotEmpty, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'Utils_C_IsNotEmpty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.GetAffinity
// 0x0098 (0x0098 - 0x0000)
struct Utils_C_GetAffinity final
{
public:
	TMap<class UClass*, bool>                     Affinities;                                        // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 Actor;                                             // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Affinity;                                          // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue;                    // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetAffinity) == 0x000008, "Wrong alignment on Utils_C_GetAffinity");
static_assert(sizeof(Utils_C_GetAffinity) == 0x000098, "Wrong size on Utils_C_GetAffinity");
static_assert(offsetof(Utils_C_GetAffinity, Affinities) == 0x000000, "Member 'Utils_C_GetAffinity::Affinities' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, Actor) == 0x000050, "Member 'Utils_C_GetAffinity::Actor' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, __WorldContext) == 0x000058, "Member 'Utils_C_GetAffinity::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, Affinity) == 0x000060, "Member 'Utils_C_GetAffinity::Affinity' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, Temp_int_Array_Index_Variable) == 0x000064, "Member 'Utils_C_GetAffinity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'Utils_C_GetAffinity::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_Array_Get_Item) == 0x000078, "Member 'Utils_C_GetAffinity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'Utils_C_GetAffinity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_Map_Find_Value) == 0x000084, "Member 'Utils_C_GetAffinity::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_Map_Find_ReturnValue) == 0x000085, "Member 'Utils_C_GetAffinity::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_ObjectIsA_ReturnValue) == 0x000086, "Member 'Utils_C_GetAffinity::CallFunc_ObjectIsA_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_BooleanAND_ReturnValue) == 0x000087, "Member 'Utils_C_GetAffinity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'Utils_C_GetAffinity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'Utils_C_GetAffinity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetAffinity, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'Utils_C_GetAffinity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.GetMaxScore
// 0x0058 (0x0058 - 0x0000)
struct Utils_C_GetMaxScore final
{
public:
	TArray<struct FS_CameroidActorScore>          ActorsScores;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxScore;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Index;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _MaxScore;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CameroidActorScore                  CallFunc_Array_Get_Item;                           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetMaxScore) == 0x000008, "Wrong alignment on Utils_C_GetMaxScore");
static_assert(sizeof(Utils_C_GetMaxScore) == 0x000058, "Wrong size on Utils_C_GetMaxScore");
static_assert(offsetof(Utils_C_GetMaxScore, ActorsScores) == 0x000000, "Member 'Utils_C_GetMaxScore::ActorsScores' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, __WorldContext) == 0x000010, "Member 'Utils_C_GetMaxScore::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, MaxScore) == 0x000018, "Member 'Utils_C_GetMaxScore::MaxScore' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, Index_0) == 0x00001C, "Member 'Utils_C_GetMaxScore::Index_0' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, _Index) == 0x000020, "Member 'Utils_C_GetMaxScore::_Index' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, _MaxScore) == 0x000024, "Member 'Utils_C_GetMaxScore::_MaxScore' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Utils_C_GetMaxScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'Utils_C_GetMaxScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, CallFunc_Array_Get_Item) == 0x000030, "Member 'Utils_C_GetMaxScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'Utils_C_GetMaxScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Utils_C_GetMaxScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'Utils_C_GetMaxScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetMaxScore, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'Utils_C_GetMaxScore::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.GetSortedActorsScores
// 0x00A8 (0x00A8 - 0x0000)
struct Utils_C_GetSortedActorsScores final
{
public:
	struct FS_CameroidCapture                     Capture;                                           // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_CameroidActorScore>          ActorsScores;                                      // 0x0048(0x0010)(Parm, OutParm)
	int32                                         _LastIndex;                                        // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_CameroidActorScore>          _TempCopy;                                         // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_CameroidActorScore>          _SortedScores;                                     // 0x0070(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxScore_MaxScore;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxScore_Index;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetSortedActorsScores) == 0x000008, "Wrong alignment on Utils_C_GetSortedActorsScores");
static_assert(sizeof(Utils_C_GetSortedActorsScores) == 0x0000A8, "Wrong size on Utils_C_GetSortedActorsScores");
static_assert(offsetof(Utils_C_GetSortedActorsScores, Capture) == 0x000000, "Member 'Utils_C_GetSortedActorsScores::Capture' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, __WorldContext) == 0x000040, "Member 'Utils_C_GetSortedActorsScores::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, ActorsScores) == 0x000048, "Member 'Utils_C_GetSortedActorsScores::ActorsScores' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, _LastIndex) == 0x000058, "Member 'Utils_C_GetSortedActorsScores::_LastIndex' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, _TempCopy) == 0x000060, "Member 'Utils_C_GetSortedActorsScores::_TempCopy' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, _SortedScores) == 0x000070, "Member 'Utils_C_GetSortedActorsScores::_SortedScores' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, Temp_bool_Variable) == 0x000080, "Member 'Utils_C_GetSortedActorsScores::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_Array_LastIndex_ReturnValue) == 0x000084, "Member 'Utils_C_GetSortedActorsScores::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'Utils_C_GetSortedActorsScores::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, Temp_int_Variable) == 0x00008C, "Member 'Utils_C_GetSortedActorsScores::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'Utils_C_GetSortedActorsScores::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000094, "Member 'Utils_C_GetSortedActorsScores::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_BooleanAND_ReturnValue) == 0x000095, "Member 'Utils_C_GetSortedActorsScores::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_GetMaxScore_MaxScore) == 0x000098, "Member 'Utils_C_GetSortedActorsScores::CallFunc_GetMaxScore_MaxScore' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_GetMaxScore_Index) == 0x00009C, "Member 'Utils_C_GetSortedActorsScores::CallFunc_GetMaxScore_Index' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'Utils_C_GetSortedActorsScores::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetSortedActorsScores, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'Utils_C_GetSortedActorsScores::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.GetTeleportSkinnedMeshLocation
// 0x0140 (0x0140 - 0x0000)
struct Utils_C_GetTeleportSkinnedMeshLocation final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TeleportLocation;                                  // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetBoneTransform_ReturnValue;             // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_GetTeleportSkinnedMeshLocation) == 0x000010, "Wrong alignment on Utils_C_GetTeleportSkinnedMeshLocation");
static_assert(sizeof(Utils_C_GetTeleportSkinnedMeshLocation) == 0x000140, "Wrong size on Utils_C_GetTeleportSkinnedMeshLocation");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, Mesh) == 0x000000, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::Mesh' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, BoneName) == 0x000008, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::BoneName' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, Location) == 0x000010, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::Location' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, __WorldContext) == 0x000028, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, TeleportLocation) == 0x000030, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::TeleportLocation' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, CallFunc_GetBoneTransform_ReturnValue) == 0x000060, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::CallFunc_GetBoneTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, CallFunc_BreakTransform_Scale) == 0x0000F0, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000108, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_GetTeleportSkinnedMeshLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'Utils_C_GetTeleportSkinnedMeshLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function Utils.Utils_C.TeleportSkinnedMesh
// 0x0130 (0x0130 - 0x0000)
struct Utils_C_TeleportSkinnedMesh final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTeleportSkinnedMeshLocation_TeleportLocation; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Utils_C_TeleportSkinnedMesh) == 0x000008, "Wrong alignment on Utils_C_TeleportSkinnedMesh");
static_assert(sizeof(Utils_C_TeleportSkinnedMesh) == 0x000130, "Wrong size on Utils_C_TeleportSkinnedMesh");
static_assert(offsetof(Utils_C_TeleportSkinnedMesh, Mesh) == 0x000000, "Member 'Utils_C_TeleportSkinnedMesh::Mesh' has a wrong offset!");
static_assert(offsetof(Utils_C_TeleportSkinnedMesh, BoneName) == 0x000008, "Member 'Utils_C_TeleportSkinnedMesh::BoneName' has a wrong offset!");
static_assert(offsetof(Utils_C_TeleportSkinnedMesh, Location) == 0x000010, "Member 'Utils_C_TeleportSkinnedMesh::Location' has a wrong offset!");
static_assert(offsetof(Utils_C_TeleportSkinnedMesh, __WorldContext) == 0x000028, "Member 'Utils_C_TeleportSkinnedMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_TeleportSkinnedMesh, CallFunc_GetTeleportSkinnedMeshLocation_TeleportLocation) == 0x000030, "Member 'Utils_C_TeleportSkinnedMesh::CallFunc_GetTeleportSkinnedMeshLocation_TeleportLocation' has a wrong offset!");
static_assert(offsetof(Utils_C_TeleportSkinnedMesh, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000048, "Member 'Utils_C_TeleportSkinnedMesh::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function Utils.Utils_C.PredictActorLocation
// 0x00A8 (0x00A8 - 0x0000)
struct Utils_C_PredictActorLocation final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_C_PredictActorLocation) == 0x000008, "Wrong alignment on Utils_C_PredictActorLocation");
static_assert(sizeof(Utils_C_PredictActorLocation) == 0x0000A8, "Wrong size on Utils_C_PredictActorLocation");
static_assert(offsetof(Utils_C_PredictActorLocation, Actor) == 0x000000, "Member 'Utils_C_PredictActorLocation::Actor' has a wrong offset!");
static_assert(offsetof(Utils_C_PredictActorLocation, Time) == 0x000008, "Member 'Utils_C_PredictActorLocation::Time' has a wrong offset!");
static_assert(offsetof(Utils_C_PredictActorLocation, __WorldContext) == 0x000010, "Member 'Utils_C_PredictActorLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(Utils_C_PredictActorLocation, Location) == 0x000018, "Member 'Utils_C_PredictActorLocation::Location' has a wrong offset!");
static_assert(offsetof(Utils_C_PredictActorLocation, CallFunc_GetVelocity_ReturnValue) == 0x000030, "Member 'Utils_C_PredictActorLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PredictActorLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000048, "Member 'Utils_C_PredictActorLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PredictActorLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'Utils_C_PredictActorLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PredictActorLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000078, "Member 'Utils_C_PredictActorLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Utils_C_PredictActorLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'Utils_C_PredictActorLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

