#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResultTopPictures

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ResultTopPictures.BP_ResultTopPictures_C
// 0x0048 (0x02E0 - 0x0298)
class ABP_ResultTopPictures_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ResultTopPicture_C*>         SmallLayout;                                       // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_ResultTopPicture_C*>         FullLayout;                                        // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        SecondLayoutScale;                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameState_C*                      GameState;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         TopCapturesCount;                                  // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckTopCaptures();
	void ExecuteUbergraph_BP_ResultTopPictures(int32 EntryPoint);
	void HideAllTopPictures();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetFullLayout();
	void SetSmallLayout();
	void UpdateLayout();
	void UpdateTopPictures(const TArray<class ABP_ResultTopPicture_C*>& TopPictures);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ResultTopPictures_C">();
	}
	static class ABP_ResultTopPictures_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ResultTopPictures_C>();
	}
};
static_assert(alignof(ABP_ResultTopPictures_C) == 0x000008, "Wrong alignment on ABP_ResultTopPictures_C");
static_assert(sizeof(ABP_ResultTopPictures_C) == 0x0002E0, "Wrong size on ABP_ResultTopPictures_C");
static_assert(offsetof(ABP_ResultTopPictures_C, UberGraphFrame) == 0x000298, "Member 'ABP_ResultTopPictures_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPictures_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_ResultTopPictures_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPictures_C, SmallLayout) == 0x0002A8, "Member 'ABP_ResultTopPictures_C::SmallLayout' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPictures_C, FullLayout) == 0x0002B8, "Member 'ABP_ResultTopPictures_C::FullLayout' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPictures_C, SecondLayoutScale) == 0x0002C8, "Member 'ABP_ResultTopPictures_C::SecondLayoutScale' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPictures_C, GameState) == 0x0002D0, "Member 'ABP_ResultTopPictures_C::GameState' has a wrong offset!");
static_assert(offsetof(ABP_ResultTopPictures_C, TopCapturesCount) == 0x0002D8, "Member 'ABP_ResultTopPictures_C::TopCapturesCount' has a wrong offset!");

}

