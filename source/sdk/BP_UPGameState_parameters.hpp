#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPGameState

#include "Basic.hpp"

#include "S_CameroidCapture_structs.hpp"
#include "UE5Coro_structs.hpp"
#include "S_CameroidCaptureGroup_structs.hpp"
#include "S_CameroidActorScore_structs.hpp"
#include "Engine_structs.hpp"
#include "S_BinaryTexture_structs.hpp"
#include "S_InventoryItemSave_structs.hpp"


namespace SDK::Params
{

// Function BP_UPGameState.BP_UPGameState_C.AddCaptureToGroup
// 0x00E8 (0x00E8 - 0x0000)
struct BP_UPGameState_C_AddCaptureToGroup final
{
public:
	struct FS_CameroidCaptureGroup                InCaptureGroup;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FS_CameroidCapture                     Capture;                                           // 0x0010(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FS_CameroidCaptureGroup                OutCaptureGroup;                                   // 0x0050(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         _Index;                                            // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_CameroidCapture>             _Captures;                                         // 0x0068(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CameroidCaptureGroup                K2Node_MakeStruct_S_CameroidCaptureGroup;          // 0x0088(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CameroidCapture                     CallFunc_Array_Get_Item;                           // 0x00A0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_AddCaptureToGroup) == 0x000008, "Wrong alignment on BP_UPGameState_C_AddCaptureToGroup");
static_assert(sizeof(BP_UPGameState_C_AddCaptureToGroup) == 0x0000E8, "Wrong size on BP_UPGameState_C_AddCaptureToGroup");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, InCaptureGroup) == 0x000000, "Member 'BP_UPGameState_C_AddCaptureToGroup::InCaptureGroup' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, Capture) == 0x000010, "Member 'BP_UPGameState_C_AddCaptureToGroup::Capture' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, OutCaptureGroup) == 0x000050, "Member 'BP_UPGameState_C_AddCaptureToGroup::OutCaptureGroup' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, _Index) == 0x000060, "Member 'BP_UPGameState_C_AddCaptureToGroup::_Index' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, _Captures) == 0x000068, "Member 'BP_UPGameState_C_AddCaptureToGroup::_Captures' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_UPGameState_C_AddCaptureToGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_UPGameState_C_AddCaptureToGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_UPGameState_C_AddCaptureToGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, Temp_bool_True_if_break_was_hit_Variable) == 0x000084, "Member 'BP_UPGameState_C_AddCaptureToGroup::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, K2Node_MakeStruct_S_CameroidCaptureGroup) == 0x000088, "Member 'BP_UPGameState_C_AddCaptureToGroup::K2Node_MakeStruct_S_CameroidCaptureGroup' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BP_UPGameState_C_AddCaptureToGroup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BP_UPGameState_C_AddCaptureToGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_UPGameState_C_AddCaptureToGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'BP_UPGameState_C_AddCaptureToGroup::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_UPGameState_C_AddCaptureToGroup::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, CallFunc_Less_IntInt_ReturnValue) == 0x0000E5, "Member 'BP_UPGameState_C_AddCaptureToGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddCaptureToGroup, CallFunc_BooleanAND_ReturnValue) == 0x0000E6, "Member 'BP_UPGameState_C_AddCaptureToGroup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.AddMoney
// 0x0004 (0x0004 - 0x0000)
struct BP_UPGameState_C_AddMoney final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_AddMoney) == 0x000004, "Wrong alignment on BP_UPGameState_C_AddMoney");
static_assert(sizeof(BP_UPGameState_C_AddMoney) == 0x000004, "Wrong size on BP_UPGameState_C_AddMoney");
static_assert(offsetof(BP_UPGameState_C_AddMoney, Amount) == 0x000000, "Member 'BP_UPGameState_C_AddMoney::Amount' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.AddTopCaptureToSave
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameState_C_AddTopCaptureToSave final
{
public:
	class UBP_TopCapturesSave_C*                  Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   GameInstance;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotName;                                          // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_AddTopCaptureToSave) == 0x000008, "Wrong alignment on BP_UPGameState_C_AddTopCaptureToSave");
static_assert(sizeof(BP_UPGameState_C_AddTopCaptureToSave) == 0x000028, "Wrong size on BP_UPGameState_C_AddTopCaptureToSave");
static_assert(offsetof(BP_UPGameState_C_AddTopCaptureToSave, Save) == 0x000000, "Member 'BP_UPGameState_C_AddTopCaptureToSave::Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddTopCaptureToSave, GameInstance) == 0x000008, "Member 'BP_UPGameState_C_AddTopCaptureToSave::GameInstance' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddTopCaptureToSave, Index_0) == 0x000010, "Member 'BP_UPGameState_C_AddTopCaptureToSave::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AddTopCaptureToSave, SlotName) == 0x000018, "Member 'BP_UPGameState_C_AddTopCaptureToSave::SlotName' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.AllPlayersDiedLastSession
// 0x0030 (0x0030 - 0x0000)
struct BP_UPGameState_C_AllPlayersDiedLastSession final
{
public:
	bool                                          AllPlayersDied;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerState_C*                    CallFunc_GetPlayerStateById_PlayerState;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_AllPlayersDiedLastSession) == 0x000008, "Wrong alignment on BP_UPGameState_C_AllPlayersDiedLastSession");
static_assert(sizeof(BP_UPGameState_C_AllPlayersDiedLastSession) == 0x000030, "Wrong size on BP_UPGameState_C_AllPlayersDiedLastSession");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, AllPlayersDied) == 0x000000, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::AllPlayersDied' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, CallFunc_GetPlayerStateById_PlayerState) == 0x000020, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::CallFunc_GetPlayerStateById_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AllPlayersDiedLastSession, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_UPGameState_C_AllPlayersDiedLastSession::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.AreCapturesInSameGroup
// 0x00D0 (0x00D0 - 0x0000)
struct BP_UPGameState_C_AreCapturesInSameGroup final
{
public:
	struct FS_CameroidCapture                     Capture1;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FS_CameroidCapture                     Capture2;                                          // 0x0040(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActors_ScoringActors;                  // 0x0088(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetActors_NonScoringActors;               // 0x0098(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetActors_ScoringActors_1;                // 0x00A8(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetActors_NonScoringActors_1;             // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreSameActors_Result;                     // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreSameActors_Result_1;                   // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_AreCapturesInSameGroup) == 0x000008, "Wrong alignment on BP_UPGameState_C_AreCapturesInSameGroup");
static_assert(sizeof(BP_UPGameState_C_AreCapturesInSameGroup) == 0x0000D0, "Wrong size on BP_UPGameState_C_AreCapturesInSameGroup");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, Capture1) == 0x000000, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::Capture1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, Capture2) == 0x000040, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::Capture2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, Result) == 0x000080, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_GetActors_ScoringActors) == 0x000088, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_GetActors_ScoringActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_GetActors_NonScoringActors) == 0x000098, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_GetActors_NonScoringActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_GetActors_ScoringActors_1) == 0x0000A8, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_GetActors_ScoringActors_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_GetActors_NonScoringActors_1) == 0x0000B8, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_GetActors_NonScoringActors_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000C8, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_AreSameActors_Result) == 0x0000C9, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_AreSameActors_Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_AreSameActors_Result_1) == 0x0000CA, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_AreSameActors_Result_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x0000CB, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreCapturesInSameGroup, CallFunc_BooleanOR_ReturnValue) == 0x0000CC, "Member 'BP_UPGameState_C_AreCapturesInSameGroup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.AreSameActors
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameState_C_AreSameActors final
{
public:
	TArray<int32>                                 Actors1;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Actors2;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Identical_ReturnValue;              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_AreSameActors) == 0x000008, "Wrong alignment on BP_UPGameState_C_AreSameActors");
static_assert(sizeof(BP_UPGameState_C_AreSameActors) == 0x000028, "Wrong size on BP_UPGameState_C_AreSameActors");
static_assert(offsetof(BP_UPGameState_C_AreSameActors, Actors1) == 0x000000, "Member 'BP_UPGameState_C_AreSameActors::Actors1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreSameActors, Actors2) == 0x000010, "Member 'BP_UPGameState_C_AreSameActors::Actors2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreSameActors, Result) == 0x000020, "Member 'BP_UPGameState_C_AreSameActors::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreSameActors, CallFunc_Array_IsEmpty_ReturnValue) == 0x000021, "Member 'BP_UPGameState_C_AreSameActors::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreSameActors, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000022, "Member 'BP_UPGameState_C_AreSameActors::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_AreSameActors, CallFunc_Array_Identical_ReturnValue) == 0x000023, "Member 'BP_UPGameState_C_AreSameActors::CallFunc_Array_Identical_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.CreateSave
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameState_C_CreateSave final
{
public:
	class UBP_UPGameStateSave_C*                  Save;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameStateSave_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_CreateSave) == 0x000008, "Wrong alignment on BP_UPGameState_C_CreateSave");
static_assert(sizeof(BP_UPGameState_C_CreateSave) == 0x000010, "Wrong size on BP_UPGameState_C_CreateSave");
static_assert(offsetof(BP_UPGameState_C_CreateSave, Save) == 0x000000, "Member 'BP_UPGameState_C_CreateSave::Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_CreateSave, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000008, "Member 'BP_UPGameState_C_CreateSave::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.EndSavingTopCapturesToDisk
// 0x0018 (0x0018 - 0x0000)
struct BP_UPGameState_C_EndSavingTopCapturesToDisk final
{
public:
	class UBP_TopCapturesSave_C*                  Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 SlotName;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_EndSavingTopCapturesToDisk) == 0x000008, "Wrong alignment on BP_UPGameState_C_EndSavingTopCapturesToDisk");
static_assert(sizeof(BP_UPGameState_C_EndSavingTopCapturesToDisk) == 0x000018, "Wrong size on BP_UPGameState_C_EndSavingTopCapturesToDisk");
static_assert(offsetof(BP_UPGameState_C_EndSavingTopCapturesToDisk, Save) == 0x000000, "Member 'BP_UPGameState_C_EndSavingTopCapturesToDisk::Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_EndSavingTopCapturesToDisk, SlotName) == 0x000008, "Member 'BP_UPGameState_C_EndSavingTopCapturesToDisk::SlotName' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.ExecuteUbergraph_BP_UPGameState
// 0x0390 (0x0390 - 0x0000)
struct BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_SteamId;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount_1;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetPlayerState_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerState_C*                    K2Node_DynamicCast_AsBP_UPPlayer_State;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CameroidCapture                     K2Node_CustomEvent_Capture;                        // 0x0068(0x0040)(HasGetValueTypeHash)
	struct FS_CameroidCaptureGroup                CallFunc_GetCaptureGroup_CaptureGroup;             // 0x00A8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_GetCaptureGroup_GroupIndex;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CameroidCaptureGroup                CallFunc_AddCaptureToGroup_OutCaptureGroup;        // 0x00C0(0x0010)(HasGetValueTypeHash)
	TArray<class ABP_Cameroid_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PickupCameroid_C*>           CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotName_3;                     // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_TopCapturesSave_C*                  CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance_1;         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TopCapturesSave_C*                  K2Node_CustomEvent_Save_2;                         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_CustomEvent_GameInstance_1;                 // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index_1;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotName_2;                     // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 CallFunc_CompressTextureToJpgAsync_CompressedData; // 0x0188(0x0010)(ReferenceParm)
	struct FAsyncCoroutine                        CallFunc_CompressTextureToJpgAsync_ReturnValue;    // 0x0198(0x0010)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BinaryTexture                       K2Node_MakeStruct_S_BinaryTexture;                 // 0x01B0(0x0010)(HasGetValueTypeHash)
	struct FS_InventoryItemSave                   CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_TopCapturesSave_C*                  K2Node_CustomEvent_Save_1;                         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SlotName_1;                     // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PickupCameroid_C*                   CallFunc_Array_Get_Item_1;                         // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CameroidCapture                     CallFunc_Array_Get_Item_2;                         // 0x0200(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 K2Node_MakeArray_Array;                            // 0x0250(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BinaryTexture                       K2Node_MakeStruct_S_BinaryTexture_1;               // 0x0268(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotName;                       // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_TopCapturesSave_C*                  K2Node_CustomEvent_Save;                           // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_CustomEvent_GameInstance;                   // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TopCapturesSave_C*                  K2Node_DynamicCast_AsBP_Top_Captures_Save;         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB[0x5];                                      // 0x02DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_CreateTextureFromJPEGAsync_OutTexture;    // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAsyncCoroutine                        CallFunc_CreateTextureFromJPEGAsync_ReturnValue;   // 0x02E8(0x0010)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance_2;         // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_313[0x1];                                      // 0x0313(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Cameroid_C*                         CallFunc_Array_Get_Item_3;                         // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_CameroidCapture                     CallFunc_Array_Get_Item_4;                         // 0x0330(0x0040)(HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance_3;         // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInResults_InResults;                    // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_InLobby;                        // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B[0x1];                                      // 0x037B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumPlayerStates_ReturnValue;           // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSessionHost_IsHost;                     // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState) == 0x000008, "Wrong alignment on BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState");
static_assert(sizeof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState) == 0x000390, "Wrong size on BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, EntryPoint) == 0x000000, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000010, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_SteamId) == 0x000020, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_SteamId' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Contains_ReturnValue) == 0x000028, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_AddUnique_ReturnValue) == 0x00002C, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_Amount_1) == 0x000030, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Variable) == 0x000034, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetPlayerState_ReturnValue) == 0x000040, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_AsBP_UPPlayer_State) == 0x000048, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_AsBP_UPPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_Amount) == 0x000058, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_Capture) == 0x000068, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_Capture' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetCaptureGroup_CaptureGroup) == 0x0000A8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetCaptureGroup_CaptureGroup' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetCaptureGroup_GroupIndex) == 0x0000B8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetCaptureGroup_GroupIndex' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_HasAuthority_ReturnValue) == 0x0000BC, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_AddCaptureToGroup_OutCaptureGroup) == 0x0000C0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_AddCaptureToGroup_OutCaptureGroup' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000D0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000E8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Length_ReturnValue_2) == 0x0000F8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Variable_1) == 0x0000FC, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000101, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue_2) == 0x000110, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_SlotName_3) == 0x000118, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_SlotName_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000128, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetGameInstance_ReturnValue_1) == 0x000130, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_AsBP_UPGame_Instance_1) == 0x000138, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_AsBP_UPGame_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_Save_2) == 0x000148, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_Save_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_GameInstance_1) == 0x000150, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_GameInstance_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_Index_1) == 0x000158, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_Index_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_SlotName_2) == 0x000160, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_SlotName_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue_3) == 0x000170, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000174, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Map_Find_Value) == 0x000178, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Map_Find_ReturnValue) == 0x000180, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_CompressTextureToJpgAsync_CompressedData) == 0x000188, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_CompressTextureToJpgAsync_CompressedData' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_CompressTextureToJpgAsync_ReturnValue) == 0x000198, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_CompressTextureToJpgAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Array_Index_Variable_1) == 0x0001A8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_MakeStruct_S_BinaryTexture) == 0x0001B0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_MakeStruct_S_BinaryTexture' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Add_ReturnValue_1) == 0x0001C8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Add_ReturnValue_2) == 0x0001CC, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_Save_1) == 0x0001D0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_Save_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_SlotName_1) == 0x0001D8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_SlotName_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Array_Index_Variable_2) == 0x0001E8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_SaveGameToSlot_ReturnValue) == 0x0001EC, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Get_Item_1) == 0x0001F0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Loop_Counter_Variable_1) == 0x0001F8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Get_Item_2) == 0x000200, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Less_IntInt_ReturnValue) == 0x000240, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue_4) == 0x000244, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Length_ReturnValue_3) == 0x000248, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_MakeArray_Array) == 0x000250, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000260, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_MakeStruct_S_BinaryTexture_1) == 0x000268, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_MakeStruct_S_BinaryTexture_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Add_ReturnValue_3) == 0x000278, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Loop_Counter_Variable_2) == 0x00027C, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Loop_Counter_Variable_3) == 0x000280, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Less_IntInt_ReturnValue_2) == 0x000284, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue_5) == 0x000288, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Less_IntInt_ReturnValue_3) == 0x00028C, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue_6) == 0x000290, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_SlotName) == 0x000298, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_SlotName' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_Save) == 0x0002A8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_GameInstance) == 0x0002B0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_GameInstance' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_CustomEvent_Index) == 0x0002B8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_LoadGameFromSlot_ReturnValue) == 0x0002C0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue_7) == 0x0002C8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_AsBP_Top_Captures_Save) == 0x0002D0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_AsBP_Top_Captures_Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_bSuccess_3) == 0x0002D8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0002D9, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_DoesSaveGameExist_ReturnValue) == 0x0002DA, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_CreateTextureFromJPEGAsync_OutTexture) == 0x0002E0, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_CreateTextureFromJPEGAsync_OutTexture' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_CreateTextureFromJPEGAsync_ReturnValue) == 0x0002E8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_CreateTextureFromJPEGAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetGameInstance_ReturnValue_2) == 0x0002F8, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Array_Index_Variable_3) == 0x000300, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_AsBP_UPGame_Instance_2) == 0x000308, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_AsBP_UPGame_Instance_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_bSuccess_4) == 0x000310, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000311, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_BooleanAND_ReturnValue) == 0x000312, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Loop_Counter_Variable_4) == 0x000314, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Add_IntInt_ReturnValue_8) == 0x000318, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, Temp_int_Array_Index_Variable_4) == 0x00031C, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Get_Item_3) == 0x000320, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetGameInstance_ReturnValue_3) == 0x000328, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Get_Item_4) == 0x000330, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_AsBP_UPGame_Instance_3) == 0x000370, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_AsBP_UPGame_Instance_3' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_DynamicCast_bSuccess_5) == 0x000378, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_IsInResults_InResults) == 0x000379, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_IsInResults_InResults' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_IsInLobby_InLobby) == 0x00037A, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_IsInLobby_InLobby' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Array_Length_ReturnValue_4) == 0x00037C, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, K2Node_Event_EndPlayReason) == 0x000380, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Less_IntInt_ReturnValue_4) == 0x000381, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_GetNumPlayerStates_ReturnValue) == 0x000384, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_GetNumPlayerStates_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000388, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState, CallFunc_IsSessionHost_IsHost) == 0x00038C, "Member 'BP_UPGameState_C_ExecuteUbergraph_BP_UPGameState::CallFunc_IsSessionHost_IsHost' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.GetActors
// 0x00F8 (0x00F8 - 0x0000)
struct BP_UPGameState_C_GetActors final
{
public:
	struct FS_CameroidCapture                     Capture;                                           // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<int32>                                 ScoringActors;                                     // 0x0040(0x0010)(Parm, OutParm)
	TArray<int32>                                 NonScoringActors;                                  // 0x0050(0x0010)(Parm, OutParm)
	TArray<int32>                                 _NonScoringActors;                                 // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 _ScoringActors;                                    // 0x0070(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CameroidActorScore                  CallFunc_Array_Get_Item;                           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_SortIntegerArray_OutIntegerArray;         // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_SortIntegerArray_OutIntegerArray_1;       // 0x00E8(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_UPGameState_C_GetActors) == 0x000008, "Wrong alignment on BP_UPGameState_C_GetActors");
static_assert(sizeof(BP_UPGameState_C_GetActors) == 0x0000F8, "Wrong size on BP_UPGameState_C_GetActors");
static_assert(offsetof(BP_UPGameState_C_GetActors, Capture) == 0x000000, "Member 'BP_UPGameState_C_GetActors::Capture' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, ScoringActors) == 0x000040, "Member 'BP_UPGameState_C_GetActors::ScoringActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, NonScoringActors) == 0x000050, "Member 'BP_UPGameState_C_GetActors::NonScoringActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, _NonScoringActors) == 0x000060, "Member 'BP_UPGameState_C_GetActors::_NonScoringActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, _ScoringActors) == 0x000070, "Member 'BP_UPGameState_C_GetActors::_ScoringActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_UPGameState_C_GetActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_UPGameState_C_GetActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_UPGameState_C_GetActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_UPGameState_C_GetActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_UPGameState_C_GetActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_UPGameState_C_GetActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_UPGameState_C_GetActors::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000B4, "Member 'BP_UPGameState_C_GetActors::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'BP_UPGameState_C_GetActors::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000BC, "Member 'BP_UPGameState_C_GetActors::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'BP_UPGameState_C_GetActors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_UPGameState_C_GetActors::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BP_UPGameState_C_GetActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_SortIntegerArray_OutIntegerArray) == 0x0000D0, "Member 'BP_UPGameState_C_GetActors::CallFunc_SortIntegerArray_OutIntegerArray' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E0, "Member 'BP_UPGameState_C_GetActors::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000E4, "Member 'BP_UPGameState_C_GetActors::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetActors, CallFunc_SortIntegerArray_OutIntegerArray_1) == 0x0000E8, "Member 'BP_UPGameState_C_GetActors::CallFunc_SortIntegerArray_OutIntegerArray_1' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.GetCameroidIds
// 0x0058 (0x0058 - 0x0000)
struct BP_UPGameState_C_GetCameroidIds final
{
public:
	TArray<int32>                                 ItemIds;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 _ItemIds;                                          // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Cameroid_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	class ABP_Cameroid_C*                         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_GetCameroidIds) == 0x000008, "Wrong alignment on BP_UPGameState_C_GetCameroidIds");
static_assert(sizeof(BP_UPGameState_C_GetCameroidIds) == 0x000058, "Wrong size on BP_UPGameState_C_GetCameroidIds");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, ItemIds) == 0x000000, "Member 'BP_UPGameState_C_GetCameroidIds::ItemIds' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, _ItemIds) == 0x000010, "Member 'BP_UPGameState_C_GetCameroidIds::_ItemIds' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_UPGameState_C_GetCameroidIds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_UPGameState_C_GetCameroidIds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_UPGameState_C_GetCameroidIds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_UPGameState_C_GetCameroidIds::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_UPGameState_C_GetCameroidIds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_UPGameState_C_GetCameroidIds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_UPGameState_C_GetCameroidIds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCameroidIds, CallFunc_Array_AddUnique_ReturnValue) == 0x000050, "Member 'BP_UPGameState_C_GetCameroidIds::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.GetCaptureGroup
// 0x0090 (0x0090 - 0x0000)
struct BP_UPGameState_C_GetCaptureGroup final
{
public:
	struct FS_CameroidCapture                     Capture;                                           // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FS_CameroidCaptureGroup                CaptureGroup;                                      // 0x0040(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         GroupIndex;                                        // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CameroidCaptureGroup                K2Node_MakeStruct_S_CameroidCaptureGroup;          // 0x0060(0x0010)(HasGetValueTypeHash)
	struct FS_CameroidCaptureGroup                CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCaptureInGroup_Result;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_GetCaptureGroup) == 0x000008, "Wrong alignment on BP_UPGameState_C_GetCaptureGroup");
static_assert(sizeof(BP_UPGameState_C_GetCaptureGroup) == 0x000090, "Wrong size on BP_UPGameState_C_GetCaptureGroup");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, Capture) == 0x000000, "Member 'BP_UPGameState_C_GetCaptureGroup::Capture' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, CaptureGroup) == 0x000040, "Member 'BP_UPGameState_C_GetCaptureGroup::CaptureGroup' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, GroupIndex) == 0x000050, "Member 'BP_UPGameState_C_GetCaptureGroup::GroupIndex' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_UPGameState_C_GetCaptureGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_UPGameState_C_GetCaptureGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_UPGameState_C_GetCaptureGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, K2Node_MakeStruct_S_CameroidCaptureGroup) == 0x000060, "Member 'BP_UPGameState_C_GetCaptureGroup::K2Node_MakeStruct_S_CameroidCaptureGroup' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_UPGameState_C_GetCaptureGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_UPGameState_C_GetCaptureGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_UPGameState_C_GetCaptureGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, CallFunc_IsCaptureInGroup_Result) == 0x000085, "Member 'BP_UPGameState_C_GetCaptureGroup::CallFunc_IsCaptureInGroup_Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetCaptureGroup, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_UPGameState_C_GetCaptureGroup::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.GetItemCaptures
// 0x0048 (0x0048 - 0x0000)
struct BP_UPGameState_C_GetItemCaptures final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_CameroidCapture>             Captures_0;                                        // 0x0008(0x0010)(Parm, OutParm)
	class FString                                 CallFunc_GetInventoryItemSaveSlot_Slot;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CameroidFilmSave_C*                 K2Node_DynamicCast_AsBP_Cameroid_Film_Save;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_GetItemCaptures) == 0x000008, "Wrong alignment on BP_UPGameState_C_GetItemCaptures");
static_assert(sizeof(BP_UPGameState_C_GetItemCaptures) == 0x000048, "Wrong size on BP_UPGameState_C_GetItemCaptures");
static_assert(offsetof(BP_UPGameState_C_GetItemCaptures, ItemId) == 0x000000, "Member 'BP_UPGameState_C_GetItemCaptures::ItemId' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetItemCaptures, Captures_0) == 0x000008, "Member 'BP_UPGameState_C_GetItemCaptures::Captures_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetItemCaptures, CallFunc_GetInventoryItemSaveSlot_Slot) == 0x000018, "Member 'BP_UPGameState_C_GetItemCaptures::CallFunc_GetInventoryItemSaveSlot_Slot' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetItemCaptures, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000028, "Member 'BP_UPGameState_C_GetItemCaptures::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetItemCaptures, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000030, "Member 'BP_UPGameState_C_GetItemCaptures::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetItemCaptures, K2Node_DynamicCast_AsBP_Cameroid_Film_Save) == 0x000038, "Member 'BP_UPGameState_C_GetItemCaptures::K2Node_DynamicCast_AsBP_Cameroid_Film_Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetItemCaptures, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_UPGameState_C_GetItemCaptures::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.GetMaxScoringGroup
// 0x0050 (0x0050 - 0x0000)
struct BP_UPGameState_C_GetMaxScoringGroup final
{
public:
	struct FS_CameroidCaptureGroup                Group;                                             // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         GroupIndex;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _GroupIndex;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CameroidCaptureGroup                _Group;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         MaxScore;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CameroidCaptureGroup                CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_GetMaxScoringGroup) == 0x000008, "Wrong alignment on BP_UPGameState_C_GetMaxScoringGroup");
static_assert(sizeof(BP_UPGameState_C_GetMaxScoringGroup) == 0x000050, "Wrong size on BP_UPGameState_C_GetMaxScoringGroup");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, Group) == 0x000000, "Member 'BP_UPGameState_C_GetMaxScoringGroup::Group' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, GroupIndex) == 0x000010, "Member 'BP_UPGameState_C_GetMaxScoringGroup::GroupIndex' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, _GroupIndex) == 0x000014, "Member 'BP_UPGameState_C_GetMaxScoringGroup::_GroupIndex' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, _Group) == 0x000018, "Member 'BP_UPGameState_C_GetMaxScoringGroup::_Group' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, MaxScore) == 0x000028, "Member 'BP_UPGameState_C_GetMaxScoringGroup::MaxScore' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_UPGameState_C_GetMaxScoringGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_UPGameState_C_GetMaxScoringGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_UPGameState_C_GetMaxScoringGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_UPGameState_C_GetMaxScoringGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_UPGameState_C_GetMaxScoringGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_UPGameState_C_GetMaxScoringGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetMaxScoringGroup, CallFunc_Greater_IntInt_ReturnValue) == 0x00004D, "Member 'BP_UPGameState_C_GetMaxScoringGroup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.GetPlayerIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameState_C_GetPlayerIndex final
{
public:
	int64                                         SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Player_Index;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_GetPlayerIndex) == 0x000008, "Wrong alignment on BP_UPGameState_C_GetPlayerIndex");
static_assert(sizeof(BP_UPGameState_C_GetPlayerIndex) == 0x000010, "Wrong size on BP_UPGameState_C_GetPlayerIndex");
static_assert(offsetof(BP_UPGameState_C_GetPlayerIndex, SteamID) == 0x000000, "Member 'BP_UPGameState_C_GetPlayerIndex::SteamID' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerIndex, Player_Index) == 0x000008, "Member 'BP_UPGameState_C_GetPlayerIndex::Player_Index' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerIndex, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_UPGameState_C_GetPlayerIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.GetPlayerState
// 0x0028 (0x0028 - 0x0000)
struct BP_UPGameState_C_GetPlayerState final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerState_C*                    PlayerState;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerState_C*                    CallFunc_GetPlayerStateById_PlayerState;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_GetPlayerState) == 0x000008, "Wrong alignment on BP_UPGameState_C_GetPlayerState");
static_assert(sizeof(BP_UPGameState_C_GetPlayerState) == 0x000028, "Wrong size on BP_UPGameState_C_GetPlayerState");
static_assert(offsetof(BP_UPGameState_C_GetPlayerState, PlayerIndex) == 0x000000, "Member 'BP_UPGameState_C_GetPlayerState::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerState, PlayerState) == 0x000008, "Member 'BP_UPGameState_C_GetPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerState, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_UPGameState_C_GetPlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerState, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_UPGameState_C_GetPlayerState::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerState, CallFunc_GetPlayerStateById_PlayerState) == 0x000020, "Member 'BP_UPGameState_C_GetPlayerState::CallFunc_GetPlayerStateById_PlayerState' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.GetPlayerStateById
// 0x0040 (0x0040 - 0x0000)
struct BP_UPGameState_C_GetPlayerStateById final
{
public:
	int64                                         SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerState_C*                    PlayerState;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayerStates_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetPlayerState_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerState_C*                    K2Node_DynamicCast_AsBP_UPPlayer_State;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_GetPlayerStateById) == 0x000008, "Wrong alignment on BP_UPGameState_C_GetPlayerStateById");
static_assert(sizeof(BP_UPGameState_C_GetPlayerStateById) == 0x000040, "Wrong size on BP_UPGameState_C_GetPlayerStateById");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, SteamID) == 0x000000, "Member 'BP_UPGameState_C_GetPlayerStateById::SteamID' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, PlayerState) == 0x000008, "Member 'BP_UPGameState_C_GetPlayerStateById::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, Temp_int_Variable) == 0x000010, "Member 'BP_UPGameState_C_GetPlayerStateById::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, Temp_int_Variable_1) == 0x000014, "Member 'BP_UPGameState_C_GetPlayerStateById::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, CallFunc_GetNumPlayerStates_ReturnValue) == 0x000018, "Member 'BP_UPGameState_C_GetPlayerStateById::CallFunc_GetNumPlayerStates_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, CallFunc_GetPlayerState_ReturnValue) == 0x000020, "Member 'BP_UPGameState_C_GetPlayerStateById::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, K2Node_DynamicCast_AsBP_UPPlayer_State) == 0x000028, "Member 'BP_UPGameState_C_GetPlayerStateById::K2Node_DynamicCast_AsBP_UPPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_UPGameState_C_GetPlayerStateById::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_UPGameState_C_GetPlayerStateById::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000038, "Member 'BP_UPGameState_C_GetPlayerStateById::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000039, "Member 'BP_UPGameState_C_GetPlayerStateById::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_GetPlayerStateById, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_UPGameState_C_GetPlayerStateById::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.IsCaptureInGroup
// 0x0058 (0x0058 - 0x0000)
struct BP_UPGameState_C_IsCaptureInGroup final
{
public:
	struct FS_CameroidCaptureGroup                CaptureGroup;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FS_CameroidCapture                     Capture;                                           // 0x0010(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreCapturesInSameGroup_Result;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_IsCaptureInGroup) == 0x000008, "Wrong alignment on BP_UPGameState_C_IsCaptureInGroup");
static_assert(sizeof(BP_UPGameState_C_IsCaptureInGroup) == 0x000058, "Wrong size on BP_UPGameState_C_IsCaptureInGroup");
static_assert(offsetof(BP_UPGameState_C_IsCaptureInGroup, CaptureGroup) == 0x000000, "Member 'BP_UPGameState_C_IsCaptureInGroup::CaptureGroup' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_IsCaptureInGroup, Capture) == 0x000010, "Member 'BP_UPGameState_C_IsCaptureInGroup::Capture' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_IsCaptureInGroup, Result) == 0x000050, "Member 'BP_UPGameState_C_IsCaptureInGroup::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_IsCaptureInGroup, CallFunc_AreCapturesInSameGroup_Result) == 0x000051, "Member 'BP_UPGameState_C_IsCaptureInGroup::CallFunc_AreCapturesInSameGroup_Result' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.IsPlayerAlive
// 0x0020 (0x0020 - 0x0000)
struct BP_UPGameState_C_IsPlayerAlive final
{
public:
	int64                                         SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlive;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_Int64Int64_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerState_C*                    CallFunc_GetPlayerStateById_PlayerState;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_IsPlayerAlive) == 0x000008, "Wrong alignment on BP_UPGameState_C_IsPlayerAlive");
static_assert(sizeof(BP_UPGameState_C_IsPlayerAlive) == 0x000020, "Wrong size on BP_UPGameState_C_IsPlayerAlive");
static_assert(offsetof(BP_UPGameState_C_IsPlayerAlive, SteamID) == 0x000000, "Member 'BP_UPGameState_C_IsPlayerAlive::SteamID' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_IsPlayerAlive, IsAlive) == 0x000008, "Member 'BP_UPGameState_C_IsPlayerAlive::IsAlive' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_IsPlayerAlive, CallFunc_Less_Int64Int64_ReturnValue) == 0x000009, "Member 'BP_UPGameState_C_IsPlayerAlive::CallFunc_Less_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_IsPlayerAlive, CallFunc_GetPlayerStateById_PlayerState) == 0x000010, "Member 'BP_UPGameState_C_IsPlayerAlive::CallFunc_GetPlayerStateById_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_IsPlayerAlive, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_UPGameState_C_IsPlayerAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_IsPlayerAlive, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_UPGameState_C_IsPlayerAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.KickPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameState_C_KickPlayer final
{
public:
	int64                                         SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_KickPlayer) == 0x000008, "Wrong alignment on BP_UPGameState_C_KickPlayer");
static_assert(sizeof(BP_UPGameState_C_KickPlayer) == 0x000008, "Wrong size on BP_UPGameState_C_KickPlayer");
static_assert(offsetof(BP_UPGameState_C_KickPlayer, SteamID) == 0x000000, "Member 'BP_UPGameState_C_KickPlayer::SteamID' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.LoadSave
// 0x0018 (0x0018 - 0x0000)
struct BP_UPGameState_C_LoadSave final
{
public:
	class UObject*                                Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameStateSave_C*                  K2Node_DynamicCast_AsBP_UPGame_State_Save;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_LoadSave) == 0x000008, "Wrong alignment on BP_UPGameState_C_LoadSave");
static_assert(sizeof(BP_UPGameState_C_LoadSave) == 0x000018, "Wrong size on BP_UPGameState_C_LoadSave");
static_assert(offsetof(BP_UPGameState_C_LoadSave, Save) == 0x000000, "Member 'BP_UPGameState_C_LoadSave::Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_LoadSave, K2Node_DynamicCast_AsBP_UPGame_State_Save) == 0x000008, "Member 'BP_UPGameState_C_LoadSave::K2Node_DynamicCast_AsBP_UPGame_State_Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_LoadSave, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_UPGameState_C_LoadSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.LoadState
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameState_C_LoadState final
{
public:
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_LoadState) == 0x000008, "Wrong alignment on BP_UPGameState_C_LoadState");
static_assert(sizeof(BP_UPGameState_C_LoadState) == 0x000008, "Wrong size on BP_UPGameState_C_LoadState");
static_assert(offsetof(BP_UPGameState_C_LoadState, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000000, "Member 'BP_UPGameState_C_LoadState::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.LoadTopCaptureFromSave
// 0x0018 (0x0018 - 0x0000)
struct BP_UPGameState_C_LoadTopCaptureFromSave final
{
public:
	class UBP_TopCapturesSave_C*                  Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   GameInstance;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_LoadTopCaptureFromSave) == 0x000008, "Wrong alignment on BP_UPGameState_C_LoadTopCaptureFromSave");
static_assert(sizeof(BP_UPGameState_C_LoadTopCaptureFromSave) == 0x000018, "Wrong size on BP_UPGameState_C_LoadTopCaptureFromSave");
static_assert(offsetof(BP_UPGameState_C_LoadTopCaptureFromSave, Save) == 0x000000, "Member 'BP_UPGameState_C_LoadTopCaptureFromSave::Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_LoadTopCaptureFromSave, GameInstance) == 0x000008, "Member 'BP_UPGameState_C_LoadTopCaptureFromSave::GameInstance' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_LoadTopCaptureFromSave, Index_0) == 0x000010, "Member 'BP_UPGameState_C_LoadTopCaptureFromSave::Index_0' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.LoadTopCapturesFromDisk
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameState_C_LoadTopCapturesFromDisk final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_LoadTopCapturesFromDisk) == 0x000008, "Wrong alignment on BP_UPGameState_C_LoadTopCapturesFromDisk");
static_assert(sizeof(BP_UPGameState_C_LoadTopCapturesFromDisk) == 0x000010, "Wrong size on BP_UPGameState_C_LoadTopCapturesFromDisk");
static_assert(offsetof(BP_UPGameState_C_LoadTopCapturesFromDisk, SlotName) == 0x000000, "Member 'BP_UPGameState_C_LoadTopCapturesFromDisk::SlotName' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.ProcessCapture
// 0x0040 (0x0040 - 0x0000)
struct BP_UPGameState_C_ProcessCapture final
{
public:
	struct FS_CameroidCapture                     Capture;                                           // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_ProcessCapture) == 0x000008, "Wrong alignment on BP_UPGameState_C_ProcessCapture");
static_assert(sizeof(BP_UPGameState_C_ProcessCapture) == 0x000040, "Wrong size on BP_UPGameState_C_ProcessCapture");
static_assert(offsetof(BP_UPGameState_C_ProcessCapture, Capture) == 0x000000, "Member 'BP_UPGameState_C_ProcessCapture::Capture' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_UPGameState_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_UPGameState_C_ReceiveEndPlay");
static_assert(sizeof(BP_UPGameState_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_UPGameState_C_ReceiveEndPlay");
static_assert(offsetof(BP_UPGameState_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_UPGameState_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.RemoveMoney
// 0x0004 (0x0004 - 0x0000)
struct BP_UPGameState_C_RemoveMoney final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_RemoveMoney) == 0x000004, "Wrong alignment on BP_UPGameState_C_RemoveMoney");
static_assert(sizeof(BP_UPGameState_C_RemoveMoney) == 0x000004, "Wrong size on BP_UPGameState_C_RemoveMoney");
static_assert(offsetof(BP_UPGameState_C_RemoveMoney, Amount) == 0x000000, "Member 'BP_UPGameState_C_RemoveMoney::Amount' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.SaveState
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameState_C_SaveState final
{
public:
	class UBP_UPGameStateSave_C*                  CallFunc_CreateSave_Save;                          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_SaveState) == 0x000008, "Wrong alignment on BP_UPGameState_C_SaveState");
static_assert(sizeof(BP_UPGameState_C_SaveState) == 0x000010, "Wrong size on BP_UPGameState_C_SaveState");
static_assert(offsetof(BP_UPGameState_C_SaveState, CallFunc_CreateSave_Save) == 0x000000, "Member 'BP_UPGameState_C_SaveState::CallFunc_CreateSave_Save' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_SaveState, CallFunc_SaveGameToSlot_ReturnValue) == 0x000008, "Member 'BP_UPGameState_C_SaveState::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.SaveTopCapturesToDisk
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameState_C_SaveTopCapturesToDisk final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_SaveTopCapturesToDisk) == 0x000008, "Wrong alignment on BP_UPGameState_C_SaveTopCapturesToDisk");
static_assert(sizeof(BP_UPGameState_C_SaveTopCapturesToDisk) == 0x000010, "Wrong size on BP_UPGameState_C_SaveTopCapturesToDisk");
static_assert(offsetof(BP_UPGameState_C_SaveTopCapturesToDisk, SlotName) == 0x000000, "Member 'BP_UPGameState_C_SaveTopCapturesToDisk::SlotName' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.SortGroups
// 0x0030 (0x0030 - 0x0000)
struct BP_UPGameState_C_SortGroups final
{
public:
	TArray<struct FS_CameroidCaptureGroup>        _Groups;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FS_CameroidCaptureGroup                CallFunc_GetMaxScoringGroup_Group;                 // 0x0010(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxScoringGroup_GroupIndex;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_SortGroups) == 0x000008, "Wrong alignment on BP_UPGameState_C_SortGroups");
static_assert(sizeof(BP_UPGameState_C_SortGroups) == 0x000030, "Wrong size on BP_UPGameState_C_SortGroups");
static_assert(offsetof(BP_UPGameState_C_SortGroups, _Groups) == 0x000000, "Member 'BP_UPGameState_C_SortGroups::_Groups' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_SortGroups, CallFunc_GetMaxScoringGroup_Group) == 0x000010, "Member 'BP_UPGameState_C_SortGroups::CallFunc_GetMaxScoringGroup_Group' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_SortGroups, CallFunc_GetMaxScoringGroup_GroupIndex) == 0x000020, "Member 'BP_UPGameState_C_SortGroups::CallFunc_GetMaxScoringGroup_GroupIndex' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_SortGroups, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000024, "Member 'BP_UPGameState_C_SortGroups::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_SortGroups, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_UPGameState_C_SortGroups::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_UPGameState.BP_UPGameState_C.WasInSession
// 0x0002 (0x0002 - 0x0000)
struct BP_UPGameState_C_WasInSession final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameState_C_WasInSession) == 0x000001, "Wrong alignment on BP_UPGameState_C_WasInSession");
static_assert(sizeof(BP_UPGameState_C_WasInSession) == 0x000002, "Wrong size on BP_UPGameState_C_WasInSession");
static_assert(offsetof(BP_UPGameState_C_WasInSession, Result) == 0x000000, "Member 'BP_UPGameState_C_WasInSession::Result' has a wrong offset!");
static_assert(offsetof(BP_UPGameState_C_WasInSession, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000001, "Member 'BP_UPGameState_C_WasInSession::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

}

