#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Squeeble

#include "Basic.hpp"

#include "BP_Squeeble_classes.hpp"
#include "BP_Squeeble_parameters.hpp"


namespace SDK
{

// Function BP_Squeeble.BP_Squeeble_C.DebugHide
// (BlueprintCallable, BlueprintEvent)

void ABP_Squeeble_C::DebugHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "DebugHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Squeeble.BP_Squeeble_C.ExecuteUbergraph_BP_Squeeble
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Squeeble_C::ExecuteUbergraph_BP_Squeeble(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "ExecuteUbergraph_BP_Squeeble");

	Params::BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Squeeble.BP_Squeeble_C.GetHidePointAroundNavPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_NavigationPoint_C*            NavPoint                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Squeeble_C::GetHidePointAroundNavPoint(class ABP_NavigationPoint_C* NavPoint, struct FVector* Location, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "GetHidePointAroundNavPoint");

	Params::BP_Squeeble_C_GetHidePointAroundNavPoint Parms{};

	Parms.NavPoint = NavPoint;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_Squeeble.BP_Squeeble_C.GetHidePoints
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NavPointIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Squeeble_C::GetHidePoints(int32 NavPointIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "GetHidePoints");

	Params::BP_Squeeble_C_GetHidePoints Parms{};

	Parms.NavPointIndex = NavPointIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Squeeble.BP_Squeeble_C.GetNavigationPoints
// (BlueprintCallable, BlueprintEvent)

void ABP_Squeeble_C::GetNavigationPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "GetNavigationPoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Squeeble.BP_Squeeble_C.GetObstaclesCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ObstaclesCount                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Squeeble_C::GetObstaclesCount(const struct FVector& Point, int32* ObstaclesCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "GetObstaclesCount");

	Params::BP_Squeeble_C_GetObstaclesCount Parms{};

	Parms.Point = std::move(Point);

	UObject::ProcessEvent(Func, &Parms);

	if (ObstaclesCount != nullptr)
		*ObstaclesCount = Parms.ObstaclesCount;
}


// Function BP_Squeeble.BP_Squeeble_C.HasObstacle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Origin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Squeeble_C::HasObstacle(const struct FVector& Origin, const struct FVector& Direction, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "HasObstacle");

	Params::BP_Squeeble_C_HasObstacle Parms{};

	Parms.Origin = std::move(Origin);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Squeeble.BP_Squeeble_C.OnRep_IsGrawling
// (BlueprintCallable, BlueprintEvent)

void ABP_Squeeble_C::OnRep_IsGrawling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "OnRep_IsGrawling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Squeeble.BP_Squeeble_C.Timeline_Notice__FinishedFunc
// (BlueprintEvent)

void ABP_Squeeble_C::Timeline_Notice__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "Timeline_Notice__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Squeeble.BP_Squeeble_C.Timeline_Notice__StartJumping__EventFunc
// (BlueprintEvent)

void ABP_Squeeble_C::Timeline_Notice__StartJumping__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "Timeline_Notice__StartJumping__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Squeeble.BP_Squeeble_C.Timeline_Notice__UpdateFunc
// (BlueprintEvent)

void ABP_Squeeble_C::Timeline_Notice__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Squeeble_C", "Timeline_Notice__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

