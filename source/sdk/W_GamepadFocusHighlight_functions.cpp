#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GamepadFocusHighlight

#include "Basic.hpp"

#include "W_GamepadFocusHighlight_classes.hpp"
#include "W_GamepadFocusHighlight_parameters.hpp"


namespace SDK
{

// Function W_GamepadFocusHighlight.W_GamepadFocusHighlight_C.ExecuteUbergraph_W_GamepadFocusHighlight
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_GamepadFocusHighlight_C::ExecuteUbergraph_W_GamepadFocusHighlight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GamepadFocusHighlight_C", "ExecuteUbergraph_W_GamepadFocusHighlight");

	Params::W_GamepadFocusHighlight_C_ExecuteUbergraph_W_GamepadFocusHighlight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_GamepadFocusHighlight.W_GamepadFocusHighlight_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_GamepadFocusHighlight_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GamepadFocusHighlight_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_GamepadFocusHighlight.W_GamepadFocusHighlight_C.OnPaint
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FPaintContext&                   Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UW_GamepadFocusHighlight_C::OnPaint(struct FPaintContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_GamepadFocusHighlight_C", "OnPaint");

	Params::W_GamepadFocusHighlight_C_OnPaint Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	Context = std::move(Parms.Context);
}

}

