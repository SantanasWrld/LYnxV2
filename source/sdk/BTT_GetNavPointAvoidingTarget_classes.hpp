#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_GetNavPointAvoidingTarget

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "BTT_GetNavigationPoint_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_GetNavPointAvoidingTarget.BTT_GetNavPointAvoidingTarget_C
// 0x0028 (0x0118 - 0x00F0)
class UBTT_GetNavPointAvoidingTarget_C final : public UBTT_GetNavigationPoint_C
{
public:
	struct FBlackboardKeySelector                 TargetKey;                                         // 0x00F0(0x0028)(Edit, BlueprintVisible)

public:
	void IsNavPointAvailable(class AAIController* Controller, class ABP_Parent_Enemy_C* Pawn, class ABP_NavigationPoint_C* NavPoint, bool* Available, struct FVector* Location);
	void IsValidPath(class UNavigationPath* Path, const struct FVector& AILocation, const struct FVector& TargetLocation, bool* IsValid);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_GetNavPointAvoidingTarget_C">();
	}
	static class UBTT_GetNavPointAvoidingTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_GetNavPointAvoidingTarget_C>();
	}
};
static_assert(alignof(UBTT_GetNavPointAvoidingTarget_C) == 0x000008, "Wrong alignment on UBTT_GetNavPointAvoidingTarget_C");
static_assert(sizeof(UBTT_GetNavPointAvoidingTarget_C) == 0x000118, "Wrong size on UBTT_GetNavPointAvoidingTarget_C");
static_assert(offsetof(UBTT_GetNavPointAvoidingTarget_C, TargetKey) == 0x0000F0, "Member 'UBTT_GetNavPointAvoidingTarget_C::TargetKey' has a wrong offset!");

}

