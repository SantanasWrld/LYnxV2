#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BuildingExplosion

#include "Basic.hpp"

#include "BP_BuildingExplosion_classes.hpp"
#include "BP_BuildingExplosion_parameters.hpp"


namespace SDK
{

// Function BP_BuildingExplosion.BP_BuildingExplosion_C.Explode (Server)
// (BlueprintCallable, BlueprintEvent)

void ABP_BuildingExplosion_C::Explode__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildingExplosion_C", "Explode (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildingExplosion.BP_BuildingExplosion_C.SpawnFragments
// (BlueprintCallable, BlueprintEvent)

void ABP_BuildingExplosion_C::SpawnFragments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildingExplosion_C", "SpawnFragments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildingExplosion.BP_BuildingExplosion_C.OnRep_Exploded
// (BlueprintCallable, BlueprintEvent)

void ABP_BuildingExplosion_C::OnRep_Exploded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildingExplosion_C", "OnRep_Exploded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildingExplosion.BP_BuildingExplosion_C.ExecuteUbergraph_BP_BuildingExplosion
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BuildingExplosion_C::ExecuteUbergraph_BP_BuildingExplosion(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildingExplosion_C", "ExecuteUbergraph_BP_BuildingExplosion");

	Params::BP_BuildingExplosion_C_ExecuteUbergraph_BP_BuildingExplosion Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

