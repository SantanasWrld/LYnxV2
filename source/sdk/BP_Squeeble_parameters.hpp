#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Squeeble

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Squeeble.BP_Squeeble_C.ExecuteUbergraph_BP_Squeeble
// 0x0178 (0x0178 - 0x0000)
struct BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPC_Squeeble_C*                        K2Node_DynamicCast_AsBPC_Squeeble;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_NavPointIndex;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NavigationPoint_C*                  CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHidePointAroundNavPoint_Location;      // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHidePointAroundNavPoint_Success;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0080(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble) == 0x000008, "Wrong alignment on BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble");
static_assert(sizeof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble) == 0x000178, "Wrong size on BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, EntryPoint) == 0x000000, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_MakeLiteralName_ReturnValue) == 0x000010, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, K2Node_DynamicCast_AsBPC_Squeeble) == 0x000018, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::K2Node_DynamicCast_AsBPC_Squeeble' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, K2Node_CustomEvent_NavPointIndex) == 0x000024, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::K2Node_CustomEvent_NavPointIndex' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, Temp_int_Variable) == 0x000034, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_GetHidePointAroundNavPoint_Location) == 0x000040, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_GetHidePointAroundNavPoint_Location' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_GetHidePointAroundNavPoint_Success) == 0x000058, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_GetHidePointAroundNavPoint_Success' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000060, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000080, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000168, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble, CallFunc_MakeVector_Z_ImplicitCast) == 0x000170, "Member 'BP_Squeeble_C_ExecuteUbergraph_BP_Squeeble::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");

// Function BP_Squeeble.BP_Squeeble_C.GetHidePointAroundNavPoint
// 0x0098 (0x0098 - 0x0000)
struct BP_Squeeble_C_GetHidePointAroundNavPoint final
{
public:
	class ABP_NavigationPoint_C*                  NavPoint;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _Point;                                            // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetObstaclesCount_ObstaclesCount;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetRandomReachablePointInRadius_Radius_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Squeeble_C_GetHidePointAroundNavPoint) == 0x000008, "Wrong alignment on BP_Squeeble_C_GetHidePointAroundNavPoint");
static_assert(sizeof(BP_Squeeble_C_GetHidePointAroundNavPoint) == 0x000098, "Wrong size on BP_Squeeble_C_GetHidePointAroundNavPoint");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, NavPoint) == 0x000000, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::NavPoint' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, Location) == 0x000008, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::Location' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, Success) == 0x000020, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::Success' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, _Point) == 0x000028, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::_Point' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x000060, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x000078, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, CallFunc_GetObstaclesCount_ObstaclesCount) == 0x00007C, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::CallFunc_GetObstaclesCount_ObstaclesCount' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetHidePointAroundNavPoint, CallFunc_K2_GetRandomReachablePointInRadius_Radius_ImplicitCast) == 0x000090, "Member 'BP_Squeeble_C_GetHidePointAroundNavPoint::CallFunc_K2_GetRandomReachablePointInRadius_Radius_ImplicitCast' has a wrong offset!");

// Function BP_Squeeble.BP_Squeeble_C.GetHidePoints
// 0x0004 (0x0004 - 0x0000)
struct BP_Squeeble_C_GetHidePoints final
{
public:
	int32                                         NavPointIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Squeeble_C_GetHidePoints) == 0x000004, "Wrong alignment on BP_Squeeble_C_GetHidePoints");
static_assert(sizeof(BP_Squeeble_C_GetHidePoints) == 0x000004, "Wrong size on BP_Squeeble_C_GetHidePoints");
static_assert(offsetof(BP_Squeeble_C_GetHidePoints, NavPointIndex) == 0x000000, "Member 'BP_Squeeble_C_GetHidePoints::NavPointIndex' has a wrong offset!");

// Function BP_Squeeble.BP_Squeeble_C.GetObstaclesCount
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Squeeble_C_GetObstaclesCount final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ObstaclesCount;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _ObstaclesCount;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        _Directions;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FVector                                _ObstacleCheckOrigin;                              // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasObstacle_Result;                       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Squeeble_C_GetObstaclesCount) == 0x000008, "Wrong alignment on BP_Squeeble_C_GetObstaclesCount");
static_assert(sizeof(BP_Squeeble_C_GetObstaclesCount) == 0x0000A8, "Wrong size on BP_Squeeble_C_GetObstaclesCount");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, Point) == 0x000000, "Member 'BP_Squeeble_C_GetObstaclesCount::Point' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, ObstaclesCount) == 0x000018, "Member 'BP_Squeeble_C_GetObstaclesCount::ObstaclesCount' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, _ObstaclesCount) == 0x00001C, "Member 'BP_Squeeble_C_GetObstaclesCount::_ObstaclesCount' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, _Directions) == 0x000020, "Member 'BP_Squeeble_C_GetObstaclesCount::_Directions' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, _ObstacleCheckOrigin) == 0x000030, "Member 'BP_Squeeble_C_GetObstaclesCount::_ObstacleCheckOrigin' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_Squeeble_C_GetObstaclesCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'BP_Squeeble_C_GetObstaclesCount::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_Squeeble_C_GetObstaclesCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_Squeeble_C_GetObstaclesCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_Squeeble_C_GetObstaclesCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_Squeeble_C_GetObstaclesCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_Squeeble_C_GetObstaclesCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_Squeeble_C_GetObstaclesCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_Squeeble_C_GetObstaclesCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_GetObstaclesCount, CallFunc_HasObstacle_Result) == 0x0000A1, "Member 'BP_Squeeble_C_GetObstaclesCount::CallFunc_HasObstacle_Result' has a wrong offset!");

// Function BP_Squeeble.BP_Squeeble_C.HasObstacle
// 0x0290 (0x0290 - 0x0000)
struct BP_Squeeble_C_HasObstacle final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Squeeble_C_HasObstacle) == 0x000008, "Wrong alignment on BP_Squeeble_C_HasObstacle");
static_assert(sizeof(BP_Squeeble_C_HasObstacle) == 0x000290, "Wrong size on BP_Squeeble_C_HasObstacle");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, Origin) == 0x000000, "Member 'BP_Squeeble_C_HasObstacle::Origin' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, Direction) == 0x000018, "Member 'BP_Squeeble_C_HasObstacle::Direction' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, Result) == 0x000030, "Member 'BP_Squeeble_C_HasObstacle::Result' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_Squeeble_C_HasObstacle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_Squeeble_C_HasObstacle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, Temp_object_Variable) == 0x000040, "Member 'BP_Squeeble_C_HasObstacle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000068, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_LineTraceSingle_OutHit) == 0x0000B8, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A0, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A1, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001A2, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_Time) == 0x0001A4, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_Distance) == 0x0001A8, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_Location) == 0x0001B0, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C8, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_Normal) == 0x0001E0, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F8, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_BoneName) == 0x000230, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_ElementIndex) == 0x00023C, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_FaceIndex) == 0x000240, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_TraceStart) == 0x000248, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_BreakHitResult_TraceEnd) == 0x000260, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_GetDisplayName_ReturnValue) == 0x000278, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Squeeble_C_HasObstacle, CallFunc_Contains_ReturnValue) == 0x000288, "Member 'BP_Squeeble_C_HasObstacle::CallFunc_Contains_ReturnValue' has a wrong offset!");

}

