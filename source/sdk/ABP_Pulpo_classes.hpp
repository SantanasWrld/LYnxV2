#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Pulpo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "IKRig_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Pulpo.ABP_Pulpo_C
// 0x0530 (0x0880 - 0x0350)
class UABP_Pulpo_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_BlendSpaceGraph;            // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0390(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_2;            // 0x03D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x03F8(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_1;            // 0x0440(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0460(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult;              // 0x04A8(0x0020)()
	struct FAnimNode_BlendSpaceGraph              AnimGraphNode_BlendSpaceGraph;                     // 0x04C8(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0530(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0550(0x00C8)()
	struct FAnimNode_IKRig                        AnimGraphNode_IKRig;                               // 0x0618(0x01E0)()
	double                                        __CustomProperty_RotationAlpha_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28; // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               __CustomProperty_Rotation_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28; // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        __CustomProperty_PositionAlpha_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28; // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_Position_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28; // 0x0820(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Pulpo_C*                            Pulpo;                                             // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x0848(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideTentacleTransform;                         // 0x0849(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84A[0x6];                                      // 0x084A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TentacleLocation;                                  // 0x0850(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TentacleRotation;                                  // 0x0868(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_FootstepSound();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_Pulpo(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Pulpo_C">();
	}
	static class UABP_Pulpo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Pulpo_C>();
	}
};
static_assert(alignof(UABP_Pulpo_C) == 0x000010, "Wrong alignment on UABP_Pulpo_C");
static_assert(sizeof(UABP_Pulpo_C) == 0x000880, "Wrong size on UABP_Pulpo_C");
static_assert(offsetof(UABP_Pulpo_C, UberGraphFrame) == 0x000350, "Member 'UABP_Pulpo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UABP_Pulpo_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimBlueprintExtension_BlendSpaceGraph) == 0x000360, "Member 'UABP_Pulpo_C::AnimBlueprintExtension_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UABP_Pulpo_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_Root) == 0x000370, "Member 'UABP_Pulpo_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_SequencePlayer_2) == 0x000390, "Member 'UABP_Pulpo_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_BlendSpaceSampleResult_2) == 0x0003D8, "Member 'UABP_Pulpo_C::AnimGraphNode_BlendSpaceSampleResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_SequencePlayer_1) == 0x0003F8, "Member 'UABP_Pulpo_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_BlendSpaceSampleResult_1) == 0x000440, "Member 'UABP_Pulpo_C::AnimGraphNode_BlendSpaceSampleResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_SequencePlayer) == 0x000460, "Member 'UABP_Pulpo_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_BlendSpaceSampleResult) == 0x0004A8, "Member 'UABP_Pulpo_C::AnimGraphNode_BlendSpaceSampleResult' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_BlendSpaceGraph) == 0x0004C8, "Member 'UABP_Pulpo_C::AnimGraphNode_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_StateResult) == 0x000530, "Member 'UABP_Pulpo_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_StateMachine) == 0x000550, "Member 'UABP_Pulpo_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, AnimGraphNode_IKRig) == 0x000618, "Member 'UABP_Pulpo_C::AnimGraphNode_IKRig' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, __CustomProperty_RotationAlpha_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28) == 0x0007F8, "Member 'UABP_Pulpo_C::__CustomProperty_RotationAlpha_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, __CustomProperty_Rotation_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28) == 0x000800, "Member 'UABP_Pulpo_C::__CustomProperty_Rotation_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, __CustomProperty_PositionAlpha_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28) == 0x000818, "Member 'UABP_Pulpo_C::__CustomProperty_PositionAlpha_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, __CustomProperty_Position_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28) == 0x000820, "Member 'UABP_Pulpo_C::__CustomProperty_Position_IKG_Tentacle_EAD14D00491F257505636EB6F8C08E28' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, Pulpo) == 0x000838, "Member 'UABP_Pulpo_C::Pulpo' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, Speed) == 0x000840, "Member 'UABP_Pulpo_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, IsAttacking) == 0x000848, "Member 'UABP_Pulpo_C::IsAttacking' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, OverrideTentacleTransform) == 0x000849, "Member 'UABP_Pulpo_C::OverrideTentacleTransform' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, TentacleLocation) == 0x000850, "Member 'UABP_Pulpo_C::TentacleLocation' has a wrong offset!");
static_assert(offsetof(UABP_Pulpo_C, TentacleRotation) == 0x000868, "Member 'UABP_Pulpo_C::TentacleRotation' has a wrong offset!");

}

