#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Odin

#include "Basic.hpp"

#include "Odin_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Odin.OdinAudioCapture.AsyncChangeCaptureDeviceById
// 0x0020 (0x0020 - 0x0000)
struct OdinAudioCapture_AsyncChangeCaptureDeviceById final
{
public:
	class FString                                 NewDeviceId;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                OnChangeCompleted;                                 // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_AsyncChangeCaptureDeviceById) == 0x000008, "Wrong alignment on OdinAudioCapture_AsyncChangeCaptureDeviceById");
static_assert(sizeof(OdinAudioCapture_AsyncChangeCaptureDeviceById) == 0x000020, "Wrong size on OdinAudioCapture_AsyncChangeCaptureDeviceById");
static_assert(offsetof(OdinAudioCapture_AsyncChangeCaptureDeviceById, NewDeviceId) == 0x000000, "Member 'OdinAudioCapture_AsyncChangeCaptureDeviceById::NewDeviceId' has a wrong offset!");
static_assert(offsetof(OdinAudioCapture_AsyncChangeCaptureDeviceById, OnChangeCompleted) == 0x000010, "Member 'OdinAudioCapture_AsyncChangeCaptureDeviceById::OnChangeCompleted' has a wrong offset!");

// Function Odin.OdinAudioCapture.AsyncChangeCaptureDeviceByName
// 0x0018 (0x0018 - 0x0000)
struct OdinAudioCapture_AsyncChangeCaptureDeviceByName final
{
public:
	class FName                                   DeviceName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess)>                OnChangeCompleted;                                 // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_AsyncChangeCaptureDeviceByName) == 0x000004, "Wrong alignment on OdinAudioCapture_AsyncChangeCaptureDeviceByName");
static_assert(sizeof(OdinAudioCapture_AsyncChangeCaptureDeviceByName) == 0x000018, "Wrong size on OdinAudioCapture_AsyncChangeCaptureDeviceByName");
static_assert(offsetof(OdinAudioCapture_AsyncChangeCaptureDeviceByName, DeviceName) == 0x000000, "Member 'OdinAudioCapture_AsyncChangeCaptureDeviceByName::DeviceName' has a wrong offset!");
static_assert(offsetof(OdinAudioCapture_AsyncChangeCaptureDeviceByName, OnChangeCompleted) == 0x000008, "Member 'OdinAudioCapture_AsyncChangeCaptureDeviceByName::OnChangeCompleted' has a wrong offset!");

// Function Odin.OdinAudioCapture.AsyncGetCaptureDevicesAvailable
// 0x0010 (0x0010 - 0x0000)
struct OdinAudioCapture_AsyncGetCaptureDevicesAvailable final
{
public:
	TDelegate<void(const TArray<struct FOdinCaptureDeviceInfo>& OutDevices, const struct FOdinCaptureDeviceInfo& CurrentDevice)> OnResult; // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_AsyncGetCaptureDevicesAvailable) == 0x000004, "Wrong alignment on OdinAudioCapture_AsyncGetCaptureDevicesAvailable");
static_assert(sizeof(OdinAudioCapture_AsyncGetCaptureDevicesAvailable) == 0x000010, "Wrong size on OdinAudioCapture_AsyncGetCaptureDevicesAvailable");
static_assert(offsetof(OdinAudioCapture_AsyncGetCaptureDevicesAvailable, OnResult) == 0x000000, "Member 'OdinAudioCapture_AsyncGetCaptureDevicesAvailable::OnResult' has a wrong offset!");

// Function Odin.OdinAudioCapture.ChangeCaptureDeviceById
// 0x0018 (0x0018 - 0x0000)
struct OdinAudioCapture_ChangeCaptureDeviceById final
{
public:
	class FString                                 NewDeviceId;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinAudioCapture_ChangeCaptureDeviceById) == 0x000008, "Wrong alignment on OdinAudioCapture_ChangeCaptureDeviceById");
static_assert(sizeof(OdinAudioCapture_ChangeCaptureDeviceById) == 0x000018, "Wrong size on OdinAudioCapture_ChangeCaptureDeviceById");
static_assert(offsetof(OdinAudioCapture_ChangeCaptureDeviceById, NewDeviceId) == 0x000000, "Member 'OdinAudioCapture_ChangeCaptureDeviceById::NewDeviceId' has a wrong offset!");
static_assert(offsetof(OdinAudioCapture_ChangeCaptureDeviceById, bSuccess) == 0x000010, "Member 'OdinAudioCapture_ChangeCaptureDeviceById::bSuccess' has a wrong offset!");

// Function Odin.OdinAudioCapture.ChangeCaptureDeviceByName
// 0x000C (0x000C - 0x0000)
struct OdinAudioCapture_ChangeCaptureDeviceByName final
{
public:
	class FName                                   DeviceName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinAudioCapture_ChangeCaptureDeviceByName) == 0x000004, "Wrong alignment on OdinAudioCapture_ChangeCaptureDeviceByName");
static_assert(sizeof(OdinAudioCapture_ChangeCaptureDeviceByName) == 0x00000C, "Wrong size on OdinAudioCapture_ChangeCaptureDeviceByName");
static_assert(offsetof(OdinAudioCapture_ChangeCaptureDeviceByName, DeviceName) == 0x000000, "Member 'OdinAudioCapture_ChangeCaptureDeviceByName::DeviceName' has a wrong offset!");
static_assert(offsetof(OdinAudioCapture_ChangeCaptureDeviceByName, bSuccess) == 0x000008, "Member 'OdinAudioCapture_ChangeCaptureDeviceByName::bSuccess' has a wrong offset!");

// Function Odin.OdinAudioCapture.GetCaptureDevicesAvailable
// 0x0010 (0x0010 - 0x0000)
struct OdinAudioCapture_GetCaptureDevicesAvailable final
{
public:
	TArray<struct FOdinCaptureDeviceInfo>         OutDevices;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_GetCaptureDevicesAvailable) == 0x000008, "Wrong alignment on OdinAudioCapture_GetCaptureDevicesAvailable");
static_assert(sizeof(OdinAudioCapture_GetCaptureDevicesAvailable) == 0x000010, "Wrong size on OdinAudioCapture_GetCaptureDevicesAvailable");
static_assert(offsetof(OdinAudioCapture_GetCaptureDevicesAvailable, OutDevices) == 0x000000, "Member 'OdinAudioCapture_GetCaptureDevicesAvailable::OutDevices' has a wrong offset!");

// Function Odin.OdinAudioCapture.GetCurrentAudioCaptureDevice
// 0x0020 (0x0020 - 0x0000)
struct OdinAudioCapture_GetCurrentAudioCaptureDevice final
{
public:
	struct FOdinCaptureDeviceInfo                 CurrentDevice;                                     // 0x0000(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_GetCurrentAudioCaptureDevice) == 0x000008, "Wrong alignment on OdinAudioCapture_GetCurrentAudioCaptureDevice");
static_assert(sizeof(OdinAudioCapture_GetCurrentAudioCaptureDevice) == 0x000020, "Wrong size on OdinAudioCapture_GetCurrentAudioCaptureDevice");
static_assert(offsetof(OdinAudioCapture_GetCurrentAudioCaptureDevice, CurrentDevice) == 0x000000, "Member 'OdinAudioCapture_GetCurrentAudioCaptureDevice::CurrentDevice' has a wrong offset!");

// Function Odin.OdinAudioCapture.RestartCapturing
// 0x0002 (0x0002 - 0x0000)
struct OdinAudioCapture_RestartCapturing final
{
public:
	bool                                          bAutomaticallyStartCapture;                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_RestartCapturing) == 0x000001, "Wrong alignment on OdinAudioCapture_RestartCapturing");
static_assert(sizeof(OdinAudioCapture_RestartCapturing) == 0x000002, "Wrong size on OdinAudioCapture_RestartCapturing");
static_assert(offsetof(OdinAudioCapture_RestartCapturing, bAutomaticallyStartCapture) == 0x000000, "Member 'OdinAudioCapture_RestartCapturing::bAutomaticallyStartCapture' has a wrong offset!");
static_assert(offsetof(OdinAudioCapture_RestartCapturing, ReturnValue) == 0x000001, "Member 'OdinAudioCapture_RestartCapturing::ReturnValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.SetIsMuted
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioCapture_SetIsMuted final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_SetIsMuted) == 0x000001, "Wrong alignment on OdinAudioCapture_SetIsMuted");
static_assert(sizeof(OdinAudioCapture_SetIsMuted) == 0x000001, "Wrong size on OdinAudioCapture_SetIsMuted");
static_assert(offsetof(OdinAudioCapture_SetIsMuted, bNewValue) == 0x000000, "Member 'OdinAudioCapture_SetIsMuted::bNewValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.SetIsPaused
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioCapture_SetIsPaused final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_SetIsPaused) == 0x000001, "Wrong alignment on OdinAudioCapture_SetIsPaused");
static_assert(sizeof(OdinAudioCapture_SetIsPaused) == 0x000001, "Wrong size on OdinAudioCapture_SetIsPaused");
static_assert(offsetof(OdinAudioCapture_SetIsPaused, bNewValue) == 0x000000, "Member 'OdinAudioCapture_SetIsPaused::bNewValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.SetTryRecognizingDeviceDisconnected
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioCapture_SetTryRecognizingDeviceDisconnected final
{
public:
	bool                                          bTryRecognizing;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_SetTryRecognizingDeviceDisconnected) == 0x000001, "Wrong alignment on OdinAudioCapture_SetTryRecognizingDeviceDisconnected");
static_assert(sizeof(OdinAudioCapture_SetTryRecognizingDeviceDisconnected) == 0x000001, "Wrong size on OdinAudioCapture_SetTryRecognizingDeviceDisconnected");
static_assert(offsetof(OdinAudioCapture_SetTryRecognizingDeviceDisconnected, bTryRecognizing) == 0x000000, "Member 'OdinAudioCapture_SetTryRecognizingDeviceDisconnected::bTryRecognizing' has a wrong offset!");

// Function Odin.OdinAudioCapture.SetVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct OdinAudioCapture_SetVolumeMultiplier final
{
public:
	float                                         NewMultiplierValue;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_SetVolumeMultiplier) == 0x000004, "Wrong alignment on OdinAudioCapture_SetVolumeMultiplier");
static_assert(sizeof(OdinAudioCapture_SetVolumeMultiplier) == 0x000004, "Wrong size on OdinAudioCapture_SetVolumeMultiplier");
static_assert(offsetof(OdinAudioCapture_SetVolumeMultiplier, NewMultiplierValue) == 0x000000, "Member 'OdinAudioCapture_SetVolumeMultiplier::NewMultiplierValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.GetIsMuted
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioCapture_GetIsMuted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_GetIsMuted) == 0x000001, "Wrong alignment on OdinAudioCapture_GetIsMuted");
static_assert(sizeof(OdinAudioCapture_GetIsMuted) == 0x000001, "Wrong size on OdinAudioCapture_GetIsMuted");
static_assert(offsetof(OdinAudioCapture_GetIsMuted, ReturnValue) == 0x000000, "Member 'OdinAudioCapture_GetIsMuted::ReturnValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.GetIsPaused
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioCapture_GetIsPaused final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_GetIsPaused) == 0x000001, "Wrong alignment on OdinAudioCapture_GetIsPaused");
static_assert(sizeof(OdinAudioCapture_GetIsPaused) == 0x000001, "Wrong size on OdinAudioCapture_GetIsPaused");
static_assert(offsetof(OdinAudioCapture_GetIsPaused, ReturnValue) == 0x000000, "Member 'OdinAudioCapture_GetIsPaused::ReturnValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.GetStreamTime
// 0x0004 (0x0004 - 0x0000)
struct OdinAudioCapture_GetStreamTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_GetStreamTime) == 0x000004, "Wrong alignment on OdinAudioCapture_GetStreamTime");
static_assert(sizeof(OdinAudioCapture_GetStreamTime) == 0x000004, "Wrong size on OdinAudioCapture_GetStreamTime");
static_assert(offsetof(OdinAudioCapture_GetStreamTime, ReturnValue) == 0x000000, "Member 'OdinAudioCapture_GetStreamTime::ReturnValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.GetTryRecognizingDeviceDisconnected
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioCapture_GetTryRecognizingDeviceDisconnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_GetTryRecognizingDeviceDisconnected) == 0x000001, "Wrong alignment on OdinAudioCapture_GetTryRecognizingDeviceDisconnected");
static_assert(sizeof(OdinAudioCapture_GetTryRecognizingDeviceDisconnected) == 0x000001, "Wrong size on OdinAudioCapture_GetTryRecognizingDeviceDisconnected");
static_assert(offsetof(OdinAudioCapture_GetTryRecognizingDeviceDisconnected, ReturnValue) == 0x000000, "Member 'OdinAudioCapture_GetTryRecognizingDeviceDisconnected::ReturnValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.GetVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct OdinAudioCapture_GetVolumeMultiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_GetVolumeMultiplier) == 0x000004, "Wrong alignment on OdinAudioCapture_GetVolumeMultiplier");
static_assert(sizeof(OdinAudioCapture_GetVolumeMultiplier) == 0x000004, "Wrong size on OdinAudioCapture_GetVolumeMultiplier");
static_assert(offsetof(OdinAudioCapture_GetVolumeMultiplier, ReturnValue) == 0x000000, "Member 'OdinAudioCapture_GetVolumeMultiplier::ReturnValue' has a wrong offset!");

// Function Odin.OdinAudioCapture.IsStreamOpen
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioCapture_IsStreamOpen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioCapture_IsStreamOpen) == 0x000001, "Wrong alignment on OdinAudioCapture_IsStreamOpen");
static_assert(sizeof(OdinAudioCapture_IsStreamOpen) == 0x000001, "Wrong size on OdinAudioCapture_IsStreamOpen");
static_assert(offsetof(OdinAudioCapture_IsStreamOpen, ReturnValue) == 0x000000, "Member 'OdinAudioCapture_IsStreamOpen::ReturnValue' has a wrong offset!");

// Function Odin.OdinAudioControl.SetIsMuted
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioControl_SetIsMuted final
{
public:
	bool                                          bNewIsMuted;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioControl_SetIsMuted) == 0x000001, "Wrong alignment on OdinAudioControl_SetIsMuted");
static_assert(sizeof(OdinAudioControl_SetIsMuted) == 0x000001, "Wrong size on OdinAudioControl_SetIsMuted");
static_assert(offsetof(OdinAudioControl_SetIsMuted, bNewIsMuted) == 0x000000, "Member 'OdinAudioControl_SetIsMuted::bNewIsMuted' has a wrong offset!");

// Function Odin.OdinAudioControl.SetVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct OdinAudioControl_SetVolumeMultiplier final
{
public:
	float                                         NewMultiplierValue;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioControl_SetVolumeMultiplier) == 0x000004, "Wrong alignment on OdinAudioControl_SetVolumeMultiplier");
static_assert(sizeof(OdinAudioControl_SetVolumeMultiplier) == 0x000004, "Wrong size on OdinAudioControl_SetVolumeMultiplier");
static_assert(offsetof(OdinAudioControl_SetVolumeMultiplier, NewMultiplierValue) == 0x000000, "Member 'OdinAudioControl_SetVolumeMultiplier::NewMultiplierValue' has a wrong offset!");

// Function Odin.OdinAudioControl.GetIsMuted
// 0x0001 (0x0001 - 0x0000)
struct OdinAudioControl_GetIsMuted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioControl_GetIsMuted) == 0x000001, "Wrong alignment on OdinAudioControl_GetIsMuted");
static_assert(sizeof(OdinAudioControl_GetIsMuted) == 0x000001, "Wrong size on OdinAudioControl_GetIsMuted");
static_assert(offsetof(OdinAudioControl_GetIsMuted, ReturnValue) == 0x000000, "Member 'OdinAudioControl_GetIsMuted::ReturnValue' has a wrong offset!");

// Function Odin.OdinAudioControl.GetVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct OdinAudioControl_GetVolumeMultiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinAudioControl_GetVolumeMultiplier) == 0x000004, "Wrong alignment on OdinAudioControl_GetVolumeMultiplier");
static_assert(sizeof(OdinAudioControl_GetVolumeMultiplier) == 0x000004, "Wrong size on OdinAudioControl_GetVolumeMultiplier");
static_assert(offsetof(OdinAudioControl_GetVolumeMultiplier, ReturnValue) == 0x000000, "Member 'OdinAudioControl_GetVolumeMultiplier::ReturnValue' has a wrong offset!");

// Function Odin.OdinCaptureMedia.SetEnableMonoMixing
// 0x0001 (0x0001 - 0x0000)
struct OdinCaptureMedia_SetEnableMonoMixing final
{
public:
	bool                                          bShouldEnableMonoMixing;                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinCaptureMedia_SetEnableMonoMixing) == 0x000001, "Wrong alignment on OdinCaptureMedia_SetEnableMonoMixing");
static_assert(sizeof(OdinCaptureMedia_SetEnableMonoMixing) == 0x000001, "Wrong size on OdinCaptureMedia_SetEnableMonoMixing");
static_assert(offsetof(OdinCaptureMedia_SetEnableMonoMixing, bShouldEnableMonoMixing) == 0x000000, "Member 'OdinCaptureMedia_SetEnableMonoMixing::bShouldEnableMonoMixing' has a wrong offset!");

// Function Odin.OdinCaptureMedia.SetMaxVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct OdinCaptureMedia_SetMaxVolumeMultiplier final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinCaptureMedia_SetMaxVolumeMultiplier) == 0x000004, "Wrong alignment on OdinCaptureMedia_SetMaxVolumeMultiplier");
static_assert(sizeof(OdinCaptureMedia_SetMaxVolumeMultiplier) == 0x000004, "Wrong size on OdinCaptureMedia_SetMaxVolumeMultiplier");
static_assert(offsetof(OdinCaptureMedia_SetMaxVolumeMultiplier, NewValue) == 0x000000, "Member 'OdinCaptureMedia_SetMaxVolumeMultiplier::NewValue' has a wrong offset!");

// Function Odin.OdinCaptureMedia.SetVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct OdinCaptureMedia_SetVolumeMultiplier final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinCaptureMedia_SetVolumeMultiplier) == 0x000004, "Wrong alignment on OdinCaptureMedia_SetVolumeMultiplier");
static_assert(sizeof(OdinCaptureMedia_SetVolumeMultiplier) == 0x000004, "Wrong size on OdinCaptureMedia_SetVolumeMultiplier");
static_assert(offsetof(OdinCaptureMedia_SetVolumeMultiplier, NewValue) == 0x000000, "Member 'OdinCaptureMedia_SetVolumeMultiplier::NewValue' has a wrong offset!");

// Function Odin.OdinCaptureMedia.GetEnableMonoMixing
// 0x0001 (0x0001 - 0x0000)
struct OdinCaptureMedia_GetEnableMonoMixing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinCaptureMedia_GetEnableMonoMixing) == 0x000001, "Wrong alignment on OdinCaptureMedia_GetEnableMonoMixing");
static_assert(sizeof(OdinCaptureMedia_GetEnableMonoMixing) == 0x000001, "Wrong size on OdinCaptureMedia_GetEnableMonoMixing");
static_assert(offsetof(OdinCaptureMedia_GetEnableMonoMixing, ReturnValue) == 0x000000, "Member 'OdinCaptureMedia_GetEnableMonoMixing::ReturnValue' has a wrong offset!");

// Function Odin.OdinCaptureMedia.GetMaxVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct OdinCaptureMedia_GetMaxVolumeMultiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinCaptureMedia_GetMaxVolumeMultiplier) == 0x000004, "Wrong alignment on OdinCaptureMedia_GetMaxVolumeMultiplier");
static_assert(sizeof(OdinCaptureMedia_GetMaxVolumeMultiplier) == 0x000004, "Wrong size on OdinCaptureMedia_GetMaxVolumeMultiplier");
static_assert(offsetof(OdinCaptureMedia_GetMaxVolumeMultiplier, ReturnValue) == 0x000000, "Member 'OdinCaptureMedia_GetMaxVolumeMultiplier::ReturnValue' has a wrong offset!");

// Function Odin.OdinCaptureMedia.GetVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct OdinCaptureMedia_GetVolumeMultiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinCaptureMedia_GetVolumeMultiplier) == 0x000004, "Wrong alignment on OdinCaptureMedia_GetVolumeMultiplier");
static_assert(sizeof(OdinCaptureMedia_GetVolumeMultiplier) == 0x000004, "Wrong size on OdinCaptureMedia_GetVolumeMultiplier");
static_assert(offsetof(OdinCaptureMedia_GetVolumeMultiplier, ReturnValue) == 0x000000, "Member 'OdinCaptureMedia_GetVolumeMultiplier::ReturnValue' has a wrong offset!");

// Function Odin.OdinFunctionLibrary.BytesToString
// 0x0020 (0x0020 - 0x0000)
struct OdinFunctionLibrary_BytesToString final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinFunctionLibrary_BytesToString) == 0x000008, "Wrong alignment on OdinFunctionLibrary_BytesToString");
static_assert(sizeof(OdinFunctionLibrary_BytesToString) == 0x000020, "Wrong size on OdinFunctionLibrary_BytesToString");
static_assert(offsetof(OdinFunctionLibrary_BytesToString, Data) == 0x000000, "Member 'OdinFunctionLibrary_BytesToString::Data' has a wrong offset!");
static_assert(offsetof(OdinFunctionLibrary_BytesToString, ReturnValue) == 0x000010, "Member 'OdinFunctionLibrary_BytesToString::ReturnValue' has a wrong offset!");

// Function Odin.OdinFunctionLibrary.CreateOdinAudioCapture
// 0x0010 (0x0010 - 0x0000)
struct OdinFunctionLibrary_CreateOdinAudioCapture final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinAudioCapture*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinFunctionLibrary_CreateOdinAudioCapture) == 0x000008, "Wrong alignment on OdinFunctionLibrary_CreateOdinAudioCapture");
static_assert(sizeof(OdinFunctionLibrary_CreateOdinAudioCapture) == 0x000010, "Wrong size on OdinFunctionLibrary_CreateOdinAudioCapture");
static_assert(offsetof(OdinFunctionLibrary_CreateOdinAudioCapture, WorldContextObject) == 0x000000, "Member 'OdinFunctionLibrary_CreateOdinAudioCapture::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinFunctionLibrary_CreateOdinAudioCapture, ReturnValue) == 0x000008, "Member 'OdinFunctionLibrary_CreateOdinAudioCapture::ReturnValue' has a wrong offset!");

// Function Odin.OdinFunctionLibrary.FormatError
// 0x0018 (0x0018 - 0x0000)
struct OdinFunctionLibrary_FormatError final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ueTrace;                                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinFunctionLibrary_FormatError) == 0x000008, "Wrong alignment on OdinFunctionLibrary_FormatError");
static_assert(sizeof(OdinFunctionLibrary_FormatError) == 0x000018, "Wrong size on OdinFunctionLibrary_FormatError");
static_assert(offsetof(OdinFunctionLibrary_FormatError, Code) == 0x000000, "Member 'OdinFunctionLibrary_FormatError::Code' has a wrong offset!");
static_assert(offsetof(OdinFunctionLibrary_FormatError, ueTrace) == 0x000004, "Member 'OdinFunctionLibrary_FormatError::ueTrace' has a wrong offset!");
static_assert(offsetof(OdinFunctionLibrary_FormatError, ReturnValue) == 0x000008, "Member 'OdinFunctionLibrary_FormatError::ReturnValue' has a wrong offset!");

// Function Odin.OdinFunctionLibrary.FormatOdinError
// 0x0020 (0x0020 - 0x0000)
struct OdinFunctionLibrary_FormatOdinError final
{
public:
	int64                                         Code;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ueTrace;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinFunctionLibrary_FormatOdinError) == 0x000008, "Wrong alignment on OdinFunctionLibrary_FormatOdinError");
static_assert(sizeof(OdinFunctionLibrary_FormatOdinError) == 0x000020, "Wrong size on OdinFunctionLibrary_FormatOdinError");
static_assert(offsetof(OdinFunctionLibrary_FormatOdinError, Code) == 0x000000, "Member 'OdinFunctionLibrary_FormatOdinError::Code' has a wrong offset!");
static_assert(offsetof(OdinFunctionLibrary_FormatOdinError, ueTrace) == 0x000008, "Member 'OdinFunctionLibrary_FormatOdinError::ueTrace' has a wrong offset!");
static_assert(offsetof(OdinFunctionLibrary_FormatOdinError, ReturnValue) == 0x000010, "Member 'OdinFunctionLibrary_FormatOdinError::ReturnValue' has a wrong offset!");

// Function Odin.OdinFunctionLibrary.GenerateAccessKey
// 0x0010 (0x0010 - 0x0000)
struct OdinFunctionLibrary_GenerateAccessKey final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinFunctionLibrary_GenerateAccessKey) == 0x000008, "Wrong alignment on OdinFunctionLibrary_GenerateAccessKey");
static_assert(sizeof(OdinFunctionLibrary_GenerateAccessKey) == 0x000010, "Wrong size on OdinFunctionLibrary_GenerateAccessKey");
static_assert(offsetof(OdinFunctionLibrary_GenerateAccessKey, ReturnValue) == 0x000000, "Member 'OdinFunctionLibrary_GenerateAccessKey::ReturnValue' has a wrong offset!");

// Function Odin.OdinFunctionLibrary.getOdinFunctionLibrary
// 0x0008 (0x0008 - 0x0000)
struct OdinFunctionLibrary_getOdinFunctionLibrary final
{
public:
	class UOdinFunctionLibrary*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinFunctionLibrary_getOdinFunctionLibrary) == 0x000008, "Wrong alignment on OdinFunctionLibrary_getOdinFunctionLibrary");
static_assert(sizeof(OdinFunctionLibrary_getOdinFunctionLibrary) == 0x000008, "Wrong size on OdinFunctionLibrary_getOdinFunctionLibrary");
static_assert(offsetof(OdinFunctionLibrary_getOdinFunctionLibrary, ReturnValue) == 0x000000, "Member 'OdinFunctionLibrary_getOdinFunctionLibrary::ReturnValue' has a wrong offset!");

// Function Odin.OdinFunctionLibrary.Odin_CreateMedia
// 0x0010 (0x0010 - 0x0000)
struct OdinFunctionLibrary_Odin_CreateMedia final
{
public:
	class UAudioGenerator*                        AudioCapture;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinCaptureMedia*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinFunctionLibrary_Odin_CreateMedia) == 0x000008, "Wrong alignment on OdinFunctionLibrary_Odin_CreateMedia");
static_assert(sizeof(OdinFunctionLibrary_Odin_CreateMedia) == 0x000010, "Wrong size on OdinFunctionLibrary_Odin_CreateMedia");
static_assert(offsetof(OdinFunctionLibrary_Odin_CreateMedia, AudioCapture) == 0x000000, "Member 'OdinFunctionLibrary_Odin_CreateMedia::AudioCapture' has a wrong offset!");
static_assert(offsetof(OdinFunctionLibrary_Odin_CreateMedia, ReturnValue) == 0x000008, "Member 'OdinFunctionLibrary_Odin_CreateMedia::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.ConstructJsonObject
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonObject_ConstructJsonObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonObject*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_ConstructJsonObject) == 0x000008, "Wrong alignment on OdinJsonObject_ConstructJsonObject");
static_assert(sizeof(OdinJsonObject_ConstructJsonObject) == 0x000010, "Wrong size on OdinJsonObject_ConstructJsonObject");
static_assert(offsetof(OdinJsonObject_ConstructJsonObject, WorldContextObject) == 0x000000, "Member 'OdinJsonObject_ConstructJsonObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_ConstructJsonObject, ReturnValue) == 0x000008, "Member 'OdinJsonObject_ConstructJsonObject::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.ConstructJsonObjectFromBytes
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_ConstructJsonObjectFromBytes final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Data;                                              // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UOdinJsonObject*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_ConstructJsonObjectFromBytes) == 0x000008, "Wrong alignment on OdinJsonObject_ConstructJsonObjectFromBytes");
static_assert(sizeof(OdinJsonObject_ConstructJsonObjectFromBytes) == 0x000020, "Wrong size on OdinJsonObject_ConstructJsonObjectFromBytes");
static_assert(offsetof(OdinJsonObject_ConstructJsonObjectFromBytes, WorldContextObject) == 0x000000, "Member 'OdinJsonObject_ConstructJsonObjectFromBytes::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_ConstructJsonObjectFromBytes, Data) == 0x000008, "Member 'OdinJsonObject_ConstructJsonObjectFromBytes::Data' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_ConstructJsonObjectFromBytes, ReturnValue) == 0x000018, "Member 'OdinJsonObject_ConstructJsonObjectFromBytes::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.ConstructJsonObjectFromString
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_ConstructJsonObjectFromString final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonObject*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_ConstructJsonObjectFromString) == 0x000008, "Wrong alignment on OdinJsonObject_ConstructJsonObjectFromString");
static_assert(sizeof(OdinJsonObject_ConstructJsonObjectFromString) == 0x000020, "Wrong size on OdinJsonObject_ConstructJsonObjectFromString");
static_assert(offsetof(OdinJsonObject_ConstructJsonObjectFromString, WorldContextObject) == 0x000000, "Member 'OdinJsonObject_ConstructJsonObjectFromString::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_ConstructJsonObjectFromString, Data) == 0x000008, "Member 'OdinJsonObject_ConstructJsonObjectFromString::Data' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_ConstructJsonObjectFromString, ReturnValue) == 0x000018, "Member 'OdinJsonObject_ConstructJsonObjectFromString::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.DecodeJson
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_DecodeJson final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinJsonObject_DecodeJson) == 0x000008, "Wrong alignment on OdinJsonObject_DecodeJson");
static_assert(sizeof(OdinJsonObject_DecodeJson) == 0x000018, "Wrong size on OdinJsonObject_DecodeJson");
static_assert(offsetof(OdinJsonObject_DecodeJson, JsonString) == 0x000000, "Member 'OdinJsonObject_DecodeJson::JsonString' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_DecodeJson, ReturnValue) == 0x000010, "Member 'OdinJsonObject_DecodeJson::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_GetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOdinJsonValue*>                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_GetArrayField");
static_assert(sizeof(OdinJsonObject_GetArrayField) == 0x000020, "Wrong size on OdinJsonObject_GetArrayField");
static_assert(offsetof(OdinJsonObject_GetArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetArrayField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetArrayField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_GetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetBoolArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_GetBoolArrayField");
static_assert(sizeof(OdinJsonObject_GetBoolArrayField) == 0x000020, "Wrong size on OdinJsonObject_GetBoolArrayField");
static_assert(offsetof(OdinJsonObject_GetBoolArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetBoolArrayField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetBoolArrayField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetFieldNames
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonObject_GetFieldNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetFieldNames) == 0x000008, "Wrong alignment on OdinJsonObject_GetFieldNames");
static_assert(sizeof(OdinJsonObject_GetFieldNames) == 0x000010, "Wrong size on OdinJsonObject_GetFieldNames");
static_assert(offsetof(OdinJsonObject_GetFieldNames, ReturnValue) == 0x000000, "Member 'OdinJsonObject_GetFieldNames::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_GetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetNumberArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_GetNumberArrayField");
static_assert(sizeof(OdinJsonObject_GetNumberArrayField) == 0x000020, "Wrong size on OdinJsonObject_GetNumberArrayField");
static_assert(offsetof(OdinJsonObject_GetNumberArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetNumberArrayField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetNumberArrayField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_GetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOdinJsonObject*>                ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetObjectArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_GetObjectArrayField");
static_assert(sizeof(OdinJsonObject_GetObjectArrayField) == 0x000020, "Wrong size on OdinJsonObject_GetObjectArrayField");
static_assert(offsetof(OdinJsonObject_GetObjectArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetObjectArrayField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetObjectArrayField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_GetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetStringArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_GetStringArrayField");
static_assert(sizeof(OdinJsonObject_GetStringArrayField) == 0x000020, "Wrong size on OdinJsonObject_GetStringArrayField");
static_assert(offsetof(OdinJsonObject_GetStringArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetStringArrayField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetStringArrayField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.MergeJsonObject
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonObject_MergeJsonObject final
{
public:
	class UOdinJsonObject*                        InJsonObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Overwrite;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinJsonObject_MergeJsonObject) == 0x000008, "Wrong alignment on OdinJsonObject_MergeJsonObject");
static_assert(sizeof(OdinJsonObject_MergeJsonObject) == 0x000010, "Wrong size on OdinJsonObject_MergeJsonObject");
static_assert(offsetof(OdinJsonObject_MergeJsonObject, InJsonObject) == 0x000000, "Member 'OdinJsonObject_MergeJsonObject::InJsonObject' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_MergeJsonObject, Overwrite) == 0x000008, "Member 'OdinJsonObject_MergeJsonObject::Overwrite' has a wrong offset!");

// Function Odin.OdinJsonObject.RemoveField
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonObject_RemoveField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_RemoveField) == 0x000008, "Wrong alignment on OdinJsonObject_RemoveField");
static_assert(sizeof(OdinJsonObject_RemoveField) == 0x000010, "Wrong size on OdinJsonObject_RemoveField");
static_assert(offsetof(OdinJsonObject_RemoveField, FieldName) == 0x000000, "Member 'OdinJsonObject_RemoveField::FieldName' has a wrong offset!");

// Function Odin.OdinJsonObject.SetArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_SetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOdinJsonValue*>                 inArray;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_SetArrayField");
static_assert(sizeof(OdinJsonObject_SetArrayField) == 0x000020, "Wrong size on OdinJsonObject_SetArrayField");
static_assert(offsetof(OdinJsonObject_SetArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetArrayField, inArray) == 0x000010, "Member 'OdinJsonObject_SetArrayField::inArray' has a wrong offset!");

// Function Odin.OdinJsonObject.SetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_SetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  BoolArray;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetBoolArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_SetBoolArrayField");
static_assert(sizeof(OdinJsonObject_SetBoolArrayField) == 0x000020, "Wrong size on OdinJsonObject_SetBoolArrayField");
static_assert(offsetof(OdinJsonObject_SetBoolArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetBoolArrayField, BoolArray) == 0x000010, "Member 'OdinJsonObject_SetBoolArrayField::BoolArray' has a wrong offset!");

// Function Odin.OdinJsonObject.SetBoolField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_SetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinJsonObject_SetBoolField) == 0x000008, "Wrong alignment on OdinJsonObject_SetBoolField");
static_assert(sizeof(OdinJsonObject_SetBoolField) == 0x000018, "Wrong size on OdinJsonObject_SetBoolField");
static_assert(offsetof(OdinJsonObject_SetBoolField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetBoolField, InValue) == 0x000010, "Member 'OdinJsonObject_SetBoolField::InValue' has a wrong offset!");

// Function Odin.OdinJsonObject.SetField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_SetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonValue*                         JsonValue;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetField) == 0x000008, "Wrong alignment on OdinJsonObject_SetField");
static_assert(sizeof(OdinJsonObject_SetField) == 0x000018, "Wrong size on OdinJsonObject_SetField");
static_assert(offsetof(OdinJsonObject_SetField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetField, JsonValue) == 0x000010, "Member 'OdinJsonObject_SetField::JsonValue' has a wrong offset!");

// Function Odin.OdinJsonObject.SetFieldNull
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonObject_SetFieldNull final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetFieldNull) == 0x000008, "Wrong alignment on OdinJsonObject_SetFieldNull");
static_assert(sizeof(OdinJsonObject_SetFieldNull) == 0x000010, "Wrong size on OdinJsonObject_SetFieldNull");
static_assert(offsetof(OdinJsonObject_SetFieldNull, FieldName) == 0x000000, "Member 'OdinJsonObject_SetFieldNull::FieldName' has a wrong offset!");

// Function Odin.OdinJsonObject.SetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_SetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 NumberArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetNumberArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_SetNumberArrayField");
static_assert(sizeof(OdinJsonObject_SetNumberArrayField) == 0x000020, "Wrong size on OdinJsonObject_SetNumberArrayField");
static_assert(offsetof(OdinJsonObject_SetNumberArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetNumberArrayField, NumberArray) == 0x000010, "Member 'OdinJsonObject_SetNumberArrayField::NumberArray' has a wrong offset!");

// Function Odin.OdinJsonObject.SetNumberField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_SetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinJsonObject_SetNumberField) == 0x000008, "Wrong alignment on OdinJsonObject_SetNumberField");
static_assert(sizeof(OdinJsonObject_SetNumberField) == 0x000018, "Wrong size on OdinJsonObject_SetNumberField");
static_assert(offsetof(OdinJsonObject_SetNumberField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetNumberField, Number) == 0x000010, "Member 'OdinJsonObject_SetNumberField::Number' has a wrong offset!");

// Function Odin.OdinJsonObject.SetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_SetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOdinJsonObject*>                ObjectArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetObjectArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_SetObjectArrayField");
static_assert(sizeof(OdinJsonObject_SetObjectArrayField) == 0x000020, "Wrong size on OdinJsonObject_SetObjectArrayField");
static_assert(offsetof(OdinJsonObject_SetObjectArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetObjectArrayField, ObjectArray) == 0x000010, "Member 'OdinJsonObject_SetObjectArrayField::ObjectArray' has a wrong offset!");

// Function Odin.OdinJsonObject.SetObjectField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_SetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonObject*                        JsonObject;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetObjectField) == 0x000008, "Wrong alignment on OdinJsonObject_SetObjectField");
static_assert(sizeof(OdinJsonObject_SetObjectField) == 0x000018, "Wrong size on OdinJsonObject_SetObjectField");
static_assert(offsetof(OdinJsonObject_SetObjectField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetObjectField, JsonObject) == 0x000010, "Member 'OdinJsonObject_SetObjectField::JsonObject' has a wrong offset!");

// Function Odin.OdinJsonObject.SetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_SetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StringArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetStringArrayField) == 0x000008, "Wrong alignment on OdinJsonObject_SetStringArrayField");
static_assert(sizeof(OdinJsonObject_SetStringArrayField) == 0x000020, "Wrong size on OdinJsonObject_SetStringArrayField");
static_assert(offsetof(OdinJsonObject_SetStringArrayField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetStringArrayField, StringArray) == 0x000010, "Member 'OdinJsonObject_SetStringArrayField::StringArray' has a wrong offset!");

// Function Odin.OdinJsonObject.SetStringField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_SetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_SetStringField) == 0x000008, "Wrong alignment on OdinJsonObject_SetStringField");
static_assert(sizeof(OdinJsonObject_SetStringField) == 0x000020, "Wrong size on OdinJsonObject_SetStringField");
static_assert(offsetof(OdinJsonObject_SetStringField, FieldName) == 0x000000, "Member 'OdinJsonObject_SetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_SetStringField, StringValue) == 0x000010, "Member 'OdinJsonObject_SetStringField::StringValue' has a wrong offset!");

// Function Odin.OdinJsonObject.EncodeJson
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonObject_EncodeJson final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_EncodeJson) == 0x000008, "Wrong alignment on OdinJsonObject_EncodeJson");
static_assert(sizeof(OdinJsonObject_EncodeJson) == 0x000010, "Wrong size on OdinJsonObject_EncodeJson");
static_assert(offsetof(OdinJsonObject_EncodeJson, ReturnValue) == 0x000000, "Member 'OdinJsonObject_EncodeJson::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.EncodeJsonBytes
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonObject_EncodeJsonBytes final
{
public:
	TArray<uint8>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_EncodeJsonBytes) == 0x000008, "Wrong alignment on OdinJsonObject_EncodeJsonBytes");
static_assert(sizeof(OdinJsonObject_EncodeJsonBytes) == 0x000010, "Wrong size on OdinJsonObject_EncodeJsonBytes");
static_assert(offsetof(OdinJsonObject_EncodeJsonBytes, ReturnValue) == 0x000000, "Member 'OdinJsonObject_EncodeJsonBytes::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetBoolField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_GetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinJsonObject_GetBoolField) == 0x000008, "Wrong alignment on OdinJsonObject_GetBoolField");
static_assert(sizeof(OdinJsonObject_GetBoolField) == 0x000018, "Wrong size on OdinJsonObject_GetBoolField");
static_assert(offsetof(OdinJsonObject_GetBoolField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetBoolField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetBoolField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_GetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonValue*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetField) == 0x000008, "Wrong alignment on OdinJsonObject_GetField");
static_assert(sizeof(OdinJsonObject_GetField) == 0x000018, "Wrong size on OdinJsonObject_GetField");
static_assert(offsetof(OdinJsonObject_GetField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetNumberField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_GetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinJsonObject_GetNumberField) == 0x000008, "Wrong alignment on OdinJsonObject_GetNumberField");
static_assert(sizeof(OdinJsonObject_GetNumberField) == 0x000018, "Wrong size on OdinJsonObject_GetNumberField");
static_assert(offsetof(OdinJsonObject_GetNumberField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetNumberField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetNumberField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetObjectField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_GetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonObject*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetObjectField) == 0x000008, "Wrong alignment on OdinJsonObject_GetObjectField");
static_assert(sizeof(OdinJsonObject_GetObjectField) == 0x000018, "Wrong size on OdinJsonObject_GetObjectField");
static_assert(offsetof(OdinJsonObject_GetObjectField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetObjectField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetObjectField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.GetStringField
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonObject_GetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonObject_GetStringField) == 0x000008, "Wrong alignment on OdinJsonObject_GetStringField");
static_assert(sizeof(OdinJsonObject_GetStringField) == 0x000020, "Wrong size on OdinJsonObject_GetStringField");
static_assert(offsetof(OdinJsonObject_GetStringField, FieldName) == 0x000000, "Member 'OdinJsonObject_GetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_GetStringField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_GetStringField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonObject.HasField
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonObject_HasField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OdinJsonObject_HasField) == 0x000008, "Wrong alignment on OdinJsonObject_HasField");
static_assert(sizeof(OdinJsonObject_HasField) == 0x000018, "Wrong size on OdinJsonObject_HasField");
static_assert(offsetof(OdinJsonObject_HasField, FieldName) == 0x000000, "Member 'OdinJsonObject_HasField::FieldName' has a wrong offset!");
static_assert(offsetof(OdinJsonObject_HasField, ReturnValue) == 0x000010, "Member 'OdinJsonObject_HasField::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.ConstructJsonValueArray
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonValue_ConstructJsonValueArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOdinJsonValue*>                 inArray;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UOdinJsonValue*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_ConstructJsonValueArray) == 0x000008, "Wrong alignment on OdinJsonValue_ConstructJsonValueArray");
static_assert(sizeof(OdinJsonValue_ConstructJsonValueArray) == 0x000020, "Wrong size on OdinJsonValue_ConstructJsonValueArray");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueArray, WorldContextObject) == 0x000000, "Member 'OdinJsonValue_ConstructJsonValueArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueArray, inArray) == 0x000008, "Member 'OdinJsonValue_ConstructJsonValueArray::inArray' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueArray, ReturnValue) == 0x000018, "Member 'OdinJsonValue_ConstructJsonValueArray::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.ConstructJsonValueBool
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonValue_ConstructJsonValueBool final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdinJsonValue*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_ConstructJsonValueBool) == 0x000008, "Wrong alignment on OdinJsonValue_ConstructJsonValueBool");
static_assert(sizeof(OdinJsonValue_ConstructJsonValueBool) == 0x000018, "Wrong size on OdinJsonValue_ConstructJsonValueBool");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueBool, WorldContextObject) == 0x000000, "Member 'OdinJsonValue_ConstructJsonValueBool::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueBool, InValue) == 0x000008, "Member 'OdinJsonValue_ConstructJsonValueBool::InValue' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueBool, ReturnValue) == 0x000010, "Member 'OdinJsonValue_ConstructJsonValueBool::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.ConstructJsonValueNumber
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonValue_ConstructJsonValueNumber final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOdinJsonValue*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_ConstructJsonValueNumber) == 0x000008, "Wrong alignment on OdinJsonValue_ConstructJsonValueNumber");
static_assert(sizeof(OdinJsonValue_ConstructJsonValueNumber) == 0x000018, "Wrong size on OdinJsonValue_ConstructJsonValueNumber");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueNumber, WorldContextObject) == 0x000000, "Member 'OdinJsonValue_ConstructJsonValueNumber::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueNumber, Number) == 0x000008, "Member 'OdinJsonValue_ConstructJsonValueNumber::Number' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueNumber, ReturnValue) == 0x000010, "Member 'OdinJsonValue_ConstructJsonValueNumber::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.ConstructJsonValueObject
// 0x0018 (0x0018 - 0x0000)
struct OdinJsonValue_ConstructJsonValueObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonObject*                        JsonObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonValue*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_ConstructJsonValueObject) == 0x000008, "Wrong alignment on OdinJsonValue_ConstructJsonValueObject");
static_assert(sizeof(OdinJsonValue_ConstructJsonValueObject) == 0x000018, "Wrong size on OdinJsonValue_ConstructJsonValueObject");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueObject, WorldContextObject) == 0x000000, "Member 'OdinJsonValue_ConstructJsonValueObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueObject, JsonObject) == 0x000008, "Member 'OdinJsonValue_ConstructJsonValueObject::JsonObject' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueObject, ReturnValue) == 0x000010, "Member 'OdinJsonValue_ConstructJsonValueObject::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.ConstructJsonValueString
// 0x0020 (0x0020 - 0x0000)
struct OdinJsonValue_ConstructJsonValueString final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinJsonValue*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_ConstructJsonValueString) == 0x000008, "Wrong alignment on OdinJsonValue_ConstructJsonValueString");
static_assert(sizeof(OdinJsonValue_ConstructJsonValueString) == 0x000020, "Wrong size on OdinJsonValue_ConstructJsonValueString");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueString, WorldContextObject) == 0x000000, "Member 'OdinJsonValue_ConstructJsonValueString::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueString, StringValue) == 0x000008, "Member 'OdinJsonValue_ConstructJsonValueString::StringValue' has a wrong offset!");
static_assert(offsetof(OdinJsonValue_ConstructJsonValueString, ReturnValue) == 0x000018, "Member 'OdinJsonValue_ConstructJsonValueString::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.AsObject
// 0x0008 (0x0008 - 0x0000)
struct OdinJsonValue_AsObject final
{
public:
	class UOdinJsonObject*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_AsObject) == 0x000008, "Wrong alignment on OdinJsonValue_AsObject");
static_assert(sizeof(OdinJsonValue_AsObject) == 0x000008, "Wrong size on OdinJsonValue_AsObject");
static_assert(offsetof(OdinJsonValue_AsObject, ReturnValue) == 0x000000, "Member 'OdinJsonValue_AsObject::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.AsArray
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonValue_AsArray final
{
public:
	TArray<class UOdinJsonValue*>                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_AsArray) == 0x000008, "Wrong alignment on OdinJsonValue_AsArray");
static_assert(sizeof(OdinJsonValue_AsArray) == 0x000010, "Wrong size on OdinJsonValue_AsArray");
static_assert(offsetof(OdinJsonValue_AsArray, ReturnValue) == 0x000000, "Member 'OdinJsonValue_AsArray::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.AsBool
// 0x0001 (0x0001 - 0x0000)
struct OdinJsonValue_AsBool final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_AsBool) == 0x000001, "Wrong alignment on OdinJsonValue_AsBool");
static_assert(sizeof(OdinJsonValue_AsBool) == 0x000001, "Wrong size on OdinJsonValue_AsBool");
static_assert(offsetof(OdinJsonValue_AsBool, ReturnValue) == 0x000000, "Member 'OdinJsonValue_AsBool::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.AsNumber
// 0x0004 (0x0004 - 0x0000)
struct OdinJsonValue_AsNumber final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_AsNumber) == 0x000004, "Wrong alignment on OdinJsonValue_AsNumber");
static_assert(sizeof(OdinJsonValue_AsNumber) == 0x000004, "Wrong size on OdinJsonValue_AsNumber");
static_assert(offsetof(OdinJsonValue_AsNumber, ReturnValue) == 0x000000, "Member 'OdinJsonValue_AsNumber::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.AsString
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonValue_AsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_AsString) == 0x000008, "Wrong alignment on OdinJsonValue_AsString");
static_assert(sizeof(OdinJsonValue_AsString) == 0x000010, "Wrong size on OdinJsonValue_AsString");
static_assert(offsetof(OdinJsonValue_AsString, ReturnValue) == 0x000000, "Member 'OdinJsonValue_AsString::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.GetType
// 0x0001 (0x0001 - 0x0000)
struct OdinJsonValue_GetType final
{
public:
	EOJson                                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_GetType) == 0x000001, "Wrong alignment on OdinJsonValue_GetType");
static_assert(sizeof(OdinJsonValue_GetType) == 0x000001, "Wrong size on OdinJsonValue_GetType");
static_assert(offsetof(OdinJsonValue_GetType, ReturnValue) == 0x000000, "Member 'OdinJsonValue_GetType::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.GetTypeString
// 0x0010 (0x0010 - 0x0000)
struct OdinJsonValue_GetTypeString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_GetTypeString) == 0x000008, "Wrong alignment on OdinJsonValue_GetTypeString");
static_assert(sizeof(OdinJsonValue_GetTypeString) == 0x000010, "Wrong size on OdinJsonValue_GetTypeString");
static_assert(offsetof(OdinJsonValue_GetTypeString, ReturnValue) == 0x000000, "Member 'OdinJsonValue_GetTypeString::ReturnValue' has a wrong offset!");

// Function Odin.OdinJsonValue.IsNull
// 0x0001 (0x0001 - 0x0000)
struct OdinJsonValue_IsNull final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinJsonValue_IsNull) == 0x000001, "Wrong alignment on OdinJsonValue_IsNull");
static_assert(sizeof(OdinJsonValue_IsNull) == 0x000001, "Wrong size on OdinJsonValue_IsNull");
static_assert(offsetof(OdinJsonValue_IsNull, ReturnValue) == 0x000000, "Member 'OdinJsonValue_IsNull::ReturnValue' has a wrong offset!");

// Function Odin.OdinPlaybackMedia.AudioStreamStats
// 0x0020 (0x0020 - 0x0000)
struct OdinPlaybackMedia_AudioStreamStats final
{
public:
	struct FOdinAudioStreamStats                  ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinPlaybackMedia_AudioStreamStats) == 0x000004, "Wrong alignment on OdinPlaybackMedia_AudioStreamStats");
static_assert(sizeof(OdinPlaybackMedia_AudioStreamStats) == 0x000020, "Wrong size on OdinPlaybackMedia_AudioStreamStats");
static_assert(offsetof(OdinPlaybackMedia_AudioStreamStats, ReturnValue) == 0x000000, "Member 'OdinPlaybackMedia_AudioStreamStats::ReturnValue' has a wrong offset!");

// Function Odin.OdinPlaybackMedia.GetMediaId
// 0x0004 (0x0004 - 0x0000)
struct OdinPlaybackMedia_GetMediaId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinPlaybackMedia_GetMediaId) == 0x000004, "Wrong alignment on OdinPlaybackMedia_GetMediaId");
static_assert(sizeof(OdinPlaybackMedia_GetMediaId) == 0x000004, "Wrong size on OdinPlaybackMedia_GetMediaId");
static_assert(offsetof(OdinPlaybackMedia_GetMediaId, ReturnValue) == 0x000000, "Member 'OdinPlaybackMedia_GetMediaId::ReturnValue' has a wrong offset!");

// Function Odin.OdinPlaybackMedia.GetPeerId
// 0x0008 (0x0008 - 0x0000)
struct OdinPlaybackMedia_GetPeerId final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinPlaybackMedia_GetPeerId) == 0x000008, "Wrong alignment on OdinPlaybackMedia_GetPeerId");
static_assert(sizeof(OdinPlaybackMedia_GetPeerId) == 0x000008, "Wrong size on OdinPlaybackMedia_GetPeerId");
static_assert(offsetof(OdinPlaybackMedia_GetPeerId, ReturnValue) == 0x000000, "Member 'OdinPlaybackMedia_GetPeerId::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoomJoin.JoinRoom
// 0x0080 (0x0080 - 0x0000)
struct OdinRoomJoin_JoinRoom final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoom*                              room_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 initialPeerUserData;                               // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FVector                                initialPosition;                                   // 0x0040(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int64 errorCode)>              onError;                                           // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& roomId, const TArray<uint8>& roomUserData, const class FString& customer, int64 ownPeerId, const class FString& ownUserId)> OnSuccess; // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoomJoin*                          ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoomJoin_JoinRoom) == 0x000008, "Wrong alignment on OdinRoomJoin_JoinRoom");
static_assert(sizeof(OdinRoomJoin_JoinRoom) == 0x000080, "Wrong size on OdinRoomJoin_JoinRoom");
static_assert(offsetof(OdinRoomJoin_JoinRoom, WorldContextObject) == 0x000000, "Member 'OdinRoomJoin_JoinRoom::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoomJoin_JoinRoom, room_0) == 0x000008, "Member 'OdinRoomJoin_JoinRoom::room_0' has a wrong offset!");
static_assert(offsetof(OdinRoomJoin_JoinRoom, URL) == 0x000010, "Member 'OdinRoomJoin_JoinRoom::URL' has a wrong offset!");
static_assert(offsetof(OdinRoomJoin_JoinRoom, Token) == 0x000020, "Member 'OdinRoomJoin_JoinRoom::Token' has a wrong offset!");
static_assert(offsetof(OdinRoomJoin_JoinRoom, initialPeerUserData) == 0x000030, "Member 'OdinRoomJoin_JoinRoom::initialPeerUserData' has a wrong offset!");
static_assert(offsetof(OdinRoomJoin_JoinRoom, initialPosition) == 0x000040, "Member 'OdinRoomJoin_JoinRoom::initialPosition' has a wrong offset!");
static_assert(offsetof(OdinRoomJoin_JoinRoom, onError) == 0x000058, "Member 'OdinRoomJoin_JoinRoom::onError' has a wrong offset!");
static_assert(offsetof(OdinRoomJoin_JoinRoom, OnSuccess) == 0x000068, "Member 'OdinRoomJoin_JoinRoom::OnSuccess' has a wrong offset!");
static_assert(offsetof(OdinRoomJoin_JoinRoom, ReturnValue) == 0x000078, "Member 'OdinRoomJoin_JoinRoom::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoomAddMedia.AddMedia
// 0x0040 (0x0040 - 0x0000)
struct OdinRoomAddMedia_AddMedia final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoom*                              room_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinCaptureMedia*                      Media;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int64 errorCode)>              onError;                                           // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 mediaId)>                OnSuccess;                                         // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoomAddMedia*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoomAddMedia_AddMedia) == 0x000008, "Wrong alignment on OdinRoomAddMedia_AddMedia");
static_assert(sizeof(OdinRoomAddMedia_AddMedia) == 0x000040, "Wrong size on OdinRoomAddMedia_AddMedia");
static_assert(offsetof(OdinRoomAddMedia_AddMedia, WorldContextObject) == 0x000000, "Member 'OdinRoomAddMedia_AddMedia::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoomAddMedia_AddMedia, room_0) == 0x000008, "Member 'OdinRoomAddMedia_AddMedia::room_0' has a wrong offset!");
static_assert(offsetof(OdinRoomAddMedia_AddMedia, Media) == 0x000010, "Member 'OdinRoomAddMedia_AddMedia::Media' has a wrong offset!");
static_assert(offsetof(OdinRoomAddMedia_AddMedia, onError) == 0x000018, "Member 'OdinRoomAddMedia_AddMedia::onError' has a wrong offset!");
static_assert(offsetof(OdinRoomAddMedia_AddMedia, OnSuccess) == 0x000028, "Member 'OdinRoomAddMedia_AddMedia::OnSuccess' has a wrong offset!");
static_assert(offsetof(OdinRoomAddMedia_AddMedia, ReturnValue) == 0x000038, "Member 'OdinRoomAddMedia_AddMedia::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoomPauseMedia.PauseMedia
// 0x0038 (0x0038 - 0x0000)
struct OdinRoomPauseMedia_PauseMedia final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinPlaybackMedia*                     Media;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int64 errorCode)>              onError;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoomPauseMedia*                    ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoomPauseMedia_PauseMedia) == 0x000008, "Wrong alignment on OdinRoomPauseMedia_PauseMedia");
static_assert(sizeof(OdinRoomPauseMedia_PauseMedia) == 0x000038, "Wrong size on OdinRoomPauseMedia_PauseMedia");
static_assert(offsetof(OdinRoomPauseMedia_PauseMedia, WorldContextObject) == 0x000000, "Member 'OdinRoomPauseMedia_PauseMedia::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoomPauseMedia_PauseMedia, Media) == 0x000008, "Member 'OdinRoomPauseMedia_PauseMedia::Media' has a wrong offset!");
static_assert(offsetof(OdinRoomPauseMedia_PauseMedia, onError) == 0x000010, "Member 'OdinRoomPauseMedia_PauseMedia::onError' has a wrong offset!");
static_assert(offsetof(OdinRoomPauseMedia_PauseMedia, OnSuccess) == 0x000020, "Member 'OdinRoomPauseMedia_PauseMedia::OnSuccess' has a wrong offset!");
static_assert(offsetof(OdinRoomPauseMedia_PauseMedia, ReturnValue) == 0x000030, "Member 'OdinRoomPauseMedia_PauseMedia::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoomResumeMedia.ResumeMedia
// 0x0038 (0x0038 - 0x0000)
struct OdinRoomResumeMedia_ResumeMedia final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinPlaybackMedia*                     Media;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int64 errorCode)>              onError;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoomResumeMedia*                   ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoomResumeMedia_ResumeMedia) == 0x000008, "Wrong alignment on OdinRoomResumeMedia_ResumeMedia");
static_assert(sizeof(OdinRoomResumeMedia_ResumeMedia) == 0x000038, "Wrong size on OdinRoomResumeMedia_ResumeMedia");
static_assert(offsetof(OdinRoomResumeMedia_ResumeMedia, WorldContextObject) == 0x000000, "Member 'OdinRoomResumeMedia_ResumeMedia::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoomResumeMedia_ResumeMedia, Media) == 0x000008, "Member 'OdinRoomResumeMedia_ResumeMedia::Media' has a wrong offset!");
static_assert(offsetof(OdinRoomResumeMedia_ResumeMedia, onError) == 0x000010, "Member 'OdinRoomResumeMedia_ResumeMedia::onError' has a wrong offset!");
static_assert(offsetof(OdinRoomResumeMedia_ResumeMedia, OnSuccess) == 0x000020, "Member 'OdinRoomResumeMedia_ResumeMedia::OnSuccess' has a wrong offset!");
static_assert(offsetof(OdinRoomResumeMedia_ResumeMedia, ReturnValue) == 0x000030, "Member 'OdinRoomResumeMedia_ResumeMedia::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoomRemoveMedia.RemoveMedia
// 0x0040 (0x0040 - 0x0000)
struct OdinRoomRemoveMedia_RemoveMedia final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoom*                              room_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinCaptureMedia*                      Media;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int64 errorCode)>              onError;                                           // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoomRemoveMedia*                   ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoomRemoveMedia_RemoveMedia) == 0x000008, "Wrong alignment on OdinRoomRemoveMedia_RemoveMedia");
static_assert(sizeof(OdinRoomRemoveMedia_RemoveMedia) == 0x000040, "Wrong size on OdinRoomRemoveMedia_RemoveMedia");
static_assert(offsetof(OdinRoomRemoveMedia_RemoveMedia, WorldContextObject) == 0x000000, "Member 'OdinRoomRemoveMedia_RemoveMedia::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoomRemoveMedia_RemoveMedia, room_0) == 0x000008, "Member 'OdinRoomRemoveMedia_RemoveMedia::room_0' has a wrong offset!");
static_assert(offsetof(OdinRoomRemoveMedia_RemoveMedia, Media) == 0x000010, "Member 'OdinRoomRemoveMedia_RemoveMedia::Media' has a wrong offset!");
static_assert(offsetof(OdinRoomRemoveMedia_RemoveMedia, onError) == 0x000018, "Member 'OdinRoomRemoveMedia_RemoveMedia::onError' has a wrong offset!");
static_assert(offsetof(OdinRoomRemoveMedia_RemoveMedia, OnSuccess) == 0x000028, "Member 'OdinRoomRemoveMedia_RemoveMedia::OnSuccess' has a wrong offset!");
static_assert(offsetof(OdinRoomRemoveMedia_RemoveMedia, ReturnValue) == 0x000038, "Member 'OdinRoomRemoveMedia_RemoveMedia::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoomUpdatePosition.UpdatePosition
// 0x0050 (0x0050 - 0x0000)
struct OdinRoomUpdatePosition_UpdatePosition final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoom*                              room_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Position;                                          // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int64 errorCode)>              onError;                                           // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoomUpdatePosition*                ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoomUpdatePosition_UpdatePosition) == 0x000008, "Wrong alignment on OdinRoomUpdatePosition_UpdatePosition");
static_assert(sizeof(OdinRoomUpdatePosition_UpdatePosition) == 0x000050, "Wrong size on OdinRoomUpdatePosition_UpdatePosition");
static_assert(offsetof(OdinRoomUpdatePosition_UpdatePosition, WorldContextObject) == 0x000000, "Member 'OdinRoomUpdatePosition_UpdatePosition::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePosition_UpdatePosition, room_0) == 0x000008, "Member 'OdinRoomUpdatePosition_UpdatePosition::room_0' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePosition_UpdatePosition, Position) == 0x000010, "Member 'OdinRoomUpdatePosition_UpdatePosition::Position' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePosition_UpdatePosition, onError) == 0x000028, "Member 'OdinRoomUpdatePosition_UpdatePosition::onError' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePosition_UpdatePosition, OnSuccess) == 0x000038, "Member 'OdinRoomUpdatePosition_UpdatePosition::OnSuccess' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePosition_UpdatePosition, ReturnValue) == 0x000048, "Member 'OdinRoomUpdatePosition_UpdatePosition::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoomUpdatePeerUserData.UpdatePeerUserData
// 0x0048 (0x0048 - 0x0000)
struct OdinRoomUpdatePeerUserData_UpdatePeerUserData final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoom*                              room_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Data;                                              // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int64 errorCode)>              onError;                                           // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoomUpdatePeerUserData*            ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoomUpdatePeerUserData_UpdatePeerUserData) == 0x000008, "Wrong alignment on OdinRoomUpdatePeerUserData_UpdatePeerUserData");
static_assert(sizeof(OdinRoomUpdatePeerUserData_UpdatePeerUserData) == 0x000048, "Wrong size on OdinRoomUpdatePeerUserData_UpdatePeerUserData");
static_assert(offsetof(OdinRoomUpdatePeerUserData_UpdatePeerUserData, WorldContextObject) == 0x000000, "Member 'OdinRoomUpdatePeerUserData_UpdatePeerUserData::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePeerUserData_UpdatePeerUserData, room_0) == 0x000008, "Member 'OdinRoomUpdatePeerUserData_UpdatePeerUserData::room_0' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePeerUserData_UpdatePeerUserData, Data) == 0x000010, "Member 'OdinRoomUpdatePeerUserData_UpdatePeerUserData::Data' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePeerUserData_UpdatePeerUserData, onError) == 0x000020, "Member 'OdinRoomUpdatePeerUserData_UpdatePeerUserData::onError' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePeerUserData_UpdatePeerUserData, OnSuccess) == 0x000030, "Member 'OdinRoomUpdatePeerUserData_UpdatePeerUserData::OnSuccess' has a wrong offset!");
static_assert(offsetof(OdinRoomUpdatePeerUserData_UpdatePeerUserData, ReturnValue) == 0x000040, "Member 'OdinRoomUpdatePeerUserData_UpdatePeerUserData::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoomSendMessage.SendMessage
// 0x0058 (0x0058 - 0x0000)
struct OdinRoomSendMessage_SendMessage final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoom*                              room_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int64>                                 Targets;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Data;                                              // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int64 errorCode)>              onError;                                           // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinRoomSendMessage*                   ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoomSendMessage_SendMessage) == 0x000008, "Wrong alignment on OdinRoomSendMessage_SendMessage");
static_assert(sizeof(OdinRoomSendMessage_SendMessage) == 0x000058, "Wrong size on OdinRoomSendMessage_SendMessage");
static_assert(offsetof(OdinRoomSendMessage_SendMessage, WorldContextObject) == 0x000000, "Member 'OdinRoomSendMessage_SendMessage::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoomSendMessage_SendMessage, room_0) == 0x000008, "Member 'OdinRoomSendMessage_SendMessage::room_0' has a wrong offset!");
static_assert(offsetof(OdinRoomSendMessage_SendMessage, Targets) == 0x000010, "Member 'OdinRoomSendMessage_SendMessage::Targets' has a wrong offset!");
static_assert(offsetof(OdinRoomSendMessage_SendMessage, Data) == 0x000020, "Member 'OdinRoomSendMessage_SendMessage::Data' has a wrong offset!");
static_assert(offsetof(OdinRoomSendMessage_SendMessage, onError) == 0x000030, "Member 'OdinRoomSendMessage_SendMessage::onError' has a wrong offset!");
static_assert(offsetof(OdinRoomSendMessage_SendMessage, OnSuccess) == 0x000040, "Member 'OdinRoomSendMessage_SendMessage::OnSuccess' has a wrong offset!");
static_assert(offsetof(OdinRoomSendMessage_SendMessage, ReturnValue) == 0x000050, "Member 'OdinRoomSendMessage_SendMessage::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoom.ConstructRoom
// 0x0030 (0x0030 - 0x0000)
struct OdinRoom_ConstructRoom final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOdinApmSettings                       InitialAPMSettings;                                // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UOdinRoom*                              ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoom_ConstructRoom) == 0x000008, "Wrong alignment on OdinRoom_ConstructRoom");
static_assert(sizeof(OdinRoom_ConstructRoom) == 0x000030, "Wrong size on OdinRoom_ConstructRoom");
static_assert(offsetof(OdinRoom_ConstructRoom, WorldContextObject) == 0x000000, "Member 'OdinRoom_ConstructRoom::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinRoom_ConstructRoom, InitialAPMSettings) == 0x000008, "Member 'OdinRoom_ConstructRoom::InitialAPMSettings' has a wrong offset!");
static_assert(offsetof(OdinRoom_ConstructRoom, ReturnValue) == 0x000028, "Member 'OdinRoom_ConstructRoom::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoom.ConnectionStats
// 0x0048 (0x0048 - 0x0000)
struct OdinRoom_ConnectionStats final
{
public:
	struct FOdinConnectionStats                   ReturnValue;                                       // 0x0000(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoom_ConnectionStats) == 0x000008, "Wrong alignment on OdinRoom_ConnectionStats");
static_assert(sizeof(OdinRoom_ConnectionStats) == 0x000048, "Wrong size on OdinRoom_ConnectionStats");
static_assert(offsetof(OdinRoom_ConnectionStats, ReturnValue) == 0x000000, "Member 'OdinRoom_ConnectionStats::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoom.SetPositionScale
// 0x0004 (0x0004 - 0x0000)
struct OdinRoom_SetPositionScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoom_SetPositionScale) == 0x000004, "Wrong alignment on OdinRoom_SetPositionScale");
static_assert(sizeof(OdinRoom_SetPositionScale) == 0x000004, "Wrong size on OdinRoom_SetPositionScale");
static_assert(offsetof(OdinRoom_SetPositionScale, Scale) == 0x000000, "Member 'OdinRoom_SetPositionScale::Scale' has a wrong offset!");

// Function Odin.OdinRoom.UpdateAPMConfig
// 0x0020 (0x0020 - 0x0000)
struct OdinRoom_UpdateAPMConfig final
{
public:
	struct FOdinApmSettings                       apm_config;                                        // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoom_UpdateAPMConfig) == 0x000004, "Wrong alignment on OdinRoom_UpdateAPMConfig");
static_assert(sizeof(OdinRoom_UpdateAPMConfig) == 0x000020, "Wrong size on OdinRoom_UpdateAPMConfig");
static_assert(offsetof(OdinRoom_UpdateAPMConfig, apm_config) == 0x000000, "Member 'OdinRoom_UpdateAPMConfig::apm_config' has a wrong offset!");

// Function Odin.OdinRoom.UpdateAPMStreamDelay
// 0x0008 (0x0008 - 0x0000)
struct OdinRoom_UpdateAPMStreamDelay final
{
public:
	int64                                         DelayInMs;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoom_UpdateAPMStreamDelay) == 0x000008, "Wrong alignment on OdinRoom_UpdateAPMStreamDelay");
static_assert(sizeof(OdinRoom_UpdateAPMStreamDelay) == 0x000008, "Wrong size on OdinRoom_UpdateAPMStreamDelay");
static_assert(offsetof(OdinRoom_UpdateAPMStreamDelay, DelayInMs) == 0x000000, "Member 'OdinRoom_UpdateAPMStreamDelay::DelayInMs' has a wrong offset!");

// Function Odin.OdinRoom.GetCurrentApmSettings
// 0x0020 (0x0020 - 0x0000)
struct OdinRoom_GetCurrentApmSettings final
{
public:
	struct FOdinApmSettings                       ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoom_GetCurrentApmSettings) == 0x000004, "Wrong alignment on OdinRoom_GetCurrentApmSettings");
static_assert(sizeof(OdinRoom_GetCurrentApmSettings) == 0x000020, "Wrong size on OdinRoom_GetCurrentApmSettings");
static_assert(offsetof(OdinRoom_GetCurrentApmSettings, ReturnValue) == 0x000000, "Member 'OdinRoom_GetCurrentApmSettings::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoom.GetSubmixListener
// 0x0008 (0x0008 - 0x0000)
struct OdinRoom_GetSubmixListener final
{
public:
	class UOdinSubmixListener*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoom_GetSubmixListener) == 0x000008, "Wrong alignment on OdinRoom_GetSubmixListener");
static_assert(sizeof(OdinRoom_GetSubmixListener) == 0x000008, "Wrong size on OdinRoom_GetSubmixListener");
static_assert(offsetof(OdinRoom_GetSubmixListener, ReturnValue) == 0x000000, "Member 'OdinRoom_GetSubmixListener::ReturnValue' has a wrong offset!");

// Function Odin.OdinRoom.IsConnected
// 0x0001 (0x0001 - 0x0000)
struct OdinRoom_IsConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinRoom_IsConnected) == 0x000001, "Wrong alignment on OdinRoom_IsConnected");
static_assert(sizeof(OdinRoom_IsConnected) == 0x000001, "Wrong size on OdinRoom_IsConnected");
static_assert(offsetof(OdinRoom_IsConnected, ReturnValue) == 0x000000, "Member 'OdinRoom_IsConnected::ReturnValue' has a wrong offset!");

// Function Odin.OdinSubmixListener.SetRecordSubmixOutput
// 0x0001 (0x0001 - 0x0000)
struct OdinSubmixListener_SetRecordSubmixOutput final
{
public:
	bool                                          bNewActive;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinSubmixListener_SetRecordSubmixOutput) == 0x000001, "Wrong alignment on OdinSubmixListener_SetRecordSubmixOutput");
static_assert(sizeof(OdinSubmixListener_SetRecordSubmixOutput) == 0x000001, "Wrong size on OdinSubmixListener_SetRecordSubmixOutput");
static_assert(offsetof(OdinSubmixListener_SetRecordSubmixOutput, bNewActive) == 0x000000, "Member 'OdinSubmixListener_SetRecordSubmixOutput::bNewActive' has a wrong offset!");

// Function Odin.OdinSynthComponent.AdjustAttenuation
// 0x03D0 (0x03D0 - 0x0000)
struct OdinSynthComponent_AdjustAttenuation final
{
public:
	struct FSoundAttenuationSettings              InAttenuationSettings;                             // 0x0000(0x03D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinSynthComponent_AdjustAttenuation) == 0x000008, "Wrong alignment on OdinSynthComponent_AdjustAttenuation");
static_assert(sizeof(OdinSynthComponent_AdjustAttenuation) == 0x0003D0, "Wrong size on OdinSynthComponent_AdjustAttenuation");
static_assert(offsetof(OdinSynthComponent_AdjustAttenuation, InAttenuationSettings) == 0x000000, "Member 'OdinSynthComponent_AdjustAttenuation::InAttenuationSettings' has a wrong offset!");

// Function Odin.OdinSynthComponent.Odin_AssignSynthToCaptureMedia
// 0x0008 (0x0008 - 0x0000)
struct OdinSynthComponent_Odin_AssignSynthToCaptureMedia final
{
public:
	class UOdinCaptureMedia*                      Media;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinSynthComponent_Odin_AssignSynthToCaptureMedia) == 0x000008, "Wrong alignment on OdinSynthComponent_Odin_AssignSynthToCaptureMedia");
static_assert(sizeof(OdinSynthComponent_Odin_AssignSynthToCaptureMedia) == 0x000008, "Wrong size on OdinSynthComponent_Odin_AssignSynthToCaptureMedia");
static_assert(offsetof(OdinSynthComponent_Odin_AssignSynthToCaptureMedia, Media) == 0x000000, "Member 'OdinSynthComponent_Odin_AssignSynthToCaptureMedia::Media' has a wrong offset!");

// Function Odin.OdinSynthComponent.Odin_AssignSynthToMedia
// 0x0008 (0x0008 - 0x0000)
struct OdinSynthComponent_Odin_AssignSynthToMedia final
{
public:
	class UOdinPlaybackMedia*                     Media;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinSynthComponent_Odin_AssignSynthToMedia) == 0x000008, "Wrong alignment on OdinSynthComponent_Odin_AssignSynthToMedia");
static_assert(sizeof(OdinSynthComponent_Odin_AssignSynthToMedia) == 0x000008, "Wrong size on OdinSynthComponent_Odin_AssignSynthToMedia");
static_assert(offsetof(OdinSynthComponent_Odin_AssignSynthToMedia, Media) == 0x000000, "Member 'OdinSynthComponent_Odin_AssignSynthToMedia::Media' has a wrong offset!");

// Function Odin.OdinSynthComponent.GetConnectedPlaybackMedia
// 0x0008 (0x0008 - 0x0000)
struct OdinSynthComponent_GetConnectedPlaybackMedia final
{
public:
	class UOdinPlaybackMedia*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinSynthComponent_GetConnectedPlaybackMedia) == 0x000008, "Wrong alignment on OdinSynthComponent_GetConnectedPlaybackMedia");
static_assert(sizeof(OdinSynthComponent_GetConnectedPlaybackMedia) == 0x000008, "Wrong size on OdinSynthComponent_GetConnectedPlaybackMedia");
static_assert(offsetof(OdinSynthComponent_GetConnectedPlaybackMedia, ReturnValue) == 0x000000, "Member 'OdinSynthComponent_GetConnectedPlaybackMedia::ReturnValue' has a wrong offset!");

// Function Odin.OdinTokenGenerator.ConstructTokenGenerator
// 0x0020 (0x0020 - 0x0000)
struct OdinTokenGenerator_ConstructTokenGenerator final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AccessKey;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOdinTokenGenerator*                    ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinTokenGenerator_ConstructTokenGenerator) == 0x000008, "Wrong alignment on OdinTokenGenerator_ConstructTokenGenerator");
static_assert(sizeof(OdinTokenGenerator_ConstructTokenGenerator) == 0x000020, "Wrong size on OdinTokenGenerator_ConstructTokenGenerator");
static_assert(offsetof(OdinTokenGenerator_ConstructTokenGenerator, WorldContextObject) == 0x000000, "Member 'OdinTokenGenerator_ConstructTokenGenerator::WorldContextObject' has a wrong offset!");
static_assert(offsetof(OdinTokenGenerator_ConstructTokenGenerator, AccessKey) == 0x000008, "Member 'OdinTokenGenerator_ConstructTokenGenerator::AccessKey' has a wrong offset!");
static_assert(offsetof(OdinTokenGenerator_ConstructTokenGenerator, ReturnValue) == 0x000018, "Member 'OdinTokenGenerator_ConstructTokenGenerator::ReturnValue' has a wrong offset!");

// Function Odin.OdinTokenGenerator.GenerateRoomToken
// 0x0038 (0x0038 - 0x0000)
struct OdinTokenGenerator_GenerateRoomToken final
{
public:
	class FString                                 roomId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOdinTokenAudience                            TokenAudience;                                     // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OdinTokenGenerator_GenerateRoomToken) == 0x000008, "Wrong alignment on OdinTokenGenerator_GenerateRoomToken");
static_assert(sizeof(OdinTokenGenerator_GenerateRoomToken) == 0x000038, "Wrong size on OdinTokenGenerator_GenerateRoomToken");
static_assert(offsetof(OdinTokenGenerator_GenerateRoomToken, roomId) == 0x000000, "Member 'OdinTokenGenerator_GenerateRoomToken::roomId' has a wrong offset!");
static_assert(offsetof(OdinTokenGenerator_GenerateRoomToken, UserId) == 0x000010, "Member 'OdinTokenGenerator_GenerateRoomToken::UserId' has a wrong offset!");
static_assert(offsetof(OdinTokenGenerator_GenerateRoomToken, TokenAudience) == 0x000020, "Member 'OdinTokenGenerator_GenerateRoomToken::TokenAudience' has a wrong offset!");
static_assert(offsetof(OdinTokenGenerator_GenerateRoomToken, ReturnValue) == 0x000028, "Member 'OdinTokenGenerator_GenerateRoomToken::ReturnValue' has a wrong offset!");

}

