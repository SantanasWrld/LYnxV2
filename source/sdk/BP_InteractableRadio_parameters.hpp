#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableRadio

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_InteractableRadio.BP_InteractableRadio_C.SetRadioLightEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractableRadio_C_SetRadioLightEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableRadio_C_SetRadioLightEnabled) == 0x000001, "Wrong alignment on BP_InteractableRadio_C_SetRadioLightEnabled");
static_assert(sizeof(BP_InteractableRadio_C_SetRadioLightEnabled) == 0x000001, "Wrong size on BP_InteractableRadio_C_SetRadioLightEnabled");
static_assert(offsetof(BP_InteractableRadio_C_SetRadioLightEnabled, Enabled) == 0x000000, "Member 'BP_InteractableRadio_C_SetRadioLightEnabled::Enabled' has a wrong offset!");

// Function BP_InteractableRadio.BP_InteractableRadio_C.SetRadioAudioEnabled
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableRadio_C_SetRadioAudioEnabled final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Delay;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableRadio_C_SetRadioAudioEnabled) == 0x000008, "Wrong alignment on BP_InteractableRadio_C_SetRadioAudioEnabled");
static_assert(sizeof(BP_InteractableRadio_C_SetRadioAudioEnabled) == 0x000010, "Wrong size on BP_InteractableRadio_C_SetRadioAudioEnabled");
static_assert(offsetof(BP_InteractableRadio_C_SetRadioAudioEnabled, Enable) == 0x000000, "Member 'BP_InteractableRadio_C_SetRadioAudioEnabled::Enable' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_SetRadioAudioEnabled, Delay) == 0x000008, "Member 'BP_InteractableRadio_C_SetRadioAudioEnabled::Delay' has a wrong offset!");

// Function BP_InteractableRadio.BP_InteractableRadio_C.Interact
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableRadio_C_Interact final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableRadio_C_Interact) == 0x000008, "Wrong alignment on BP_InteractableRadio_C_Interact");
static_assert(sizeof(BP_InteractableRadio_C_Interact) == 0x000008, "Wrong size on BP_InteractableRadio_C_Interact");
static_assert(offsetof(BP_InteractableRadio_C_Interact, Player) == 0x000000, "Member 'BP_InteractableRadio_C_Interact::Player' has a wrong offset!");

// Function BP_InteractableRadio.BP_InteractableRadio_C.GetInteractText
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableRadio_C_GetInteractText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_InteractableRadio_C_GetInteractText) == 0x000008, "Wrong alignment on BP_InteractableRadio_C_GetInteractText");
static_assert(sizeof(BP_InteractableRadio_C_GetInteractText) == 0x000018, "Wrong size on BP_InteractableRadio_C_GetInteractText");
static_assert(offsetof(BP_InteractableRadio_C_GetInteractText, Text) == 0x000000, "Member 'BP_InteractableRadio_C_GetInteractText::Text' has a wrong offset!");

// Function BP_InteractableRadio.BP_InteractableRadio_C.GetInteractNoise
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableRadio_C_GetInteractNoise final
{
public:
	bool                                          NoiseOnInteract;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NoiseRange;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableRadio_C_GetInteractNoise) == 0x000008, "Wrong alignment on BP_InteractableRadio_C_GetInteractNoise");
static_assert(sizeof(BP_InteractableRadio_C_GetInteractNoise) == 0x000010, "Wrong size on BP_InteractableRadio_C_GetInteractNoise");
static_assert(offsetof(BP_InteractableRadio_C_GetInteractNoise, NoiseOnInteract) == 0x000000, "Member 'BP_InteractableRadio_C_GetInteractNoise::NoiseOnInteract' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_GetInteractNoise, NoiseRange) == 0x000008, "Member 'BP_InteractableRadio_C_GetInteractNoise::NoiseRange' has a wrong offset!");

// Function BP_InteractableRadio.BP_InteractableRadio_C.GetInteractDuration
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableRadio_C_GetInteractDuration final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableRadio_C_GetInteractDuration) == 0x000008, "Wrong alignment on BP_InteractableRadio_C_GetInteractDuration");
static_assert(sizeof(BP_InteractableRadio_C_GetInteractDuration) == 0x000008, "Wrong size on BP_InteractableRadio_C_GetInteractDuration");
static_assert(offsetof(BP_InteractableRadio_C_GetInteractDuration, Duration) == 0x000000, "Member 'BP_InteractableRadio_C_GetInteractDuration::Duration' has a wrong offset!");

// Function BP_InteractableRadio.BP_InteractableRadio_C.GetInteractDistance
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableRadio_C_GetInteractDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableRadio_C_GetInteractDistance) == 0x000008, "Wrong alignment on BP_InteractableRadio_C_GetInteractDistance");
static_assert(sizeof(BP_InteractableRadio_C_GetInteractDistance) == 0x000008, "Wrong size on BP_InteractableRadio_C_GetInteractDistance");
static_assert(offsetof(BP_InteractableRadio_C_GetInteractDistance, Distance) == 0x000000, "Member 'BP_InteractableRadio_C_GetInteractDistance::Distance' has a wrong offset!");

// Function BP_InteractableRadio.BP_InteractableRadio_C.ExecuteUbergraph_BP_InteractableRadio
// 0x0068 (0x0068 - 0x0000)
struct BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Delay;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_Event_Player;                               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              CallFunc_Array_Random_OutItem;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio) == 0x000008, "Wrong alignment on BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio");
static_assert(sizeof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio) == 0x000068, "Wrong size on BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, EntryPoint) == 0x000000, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, K2Node_CustomEvent_Enable) == 0x000004, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, K2Node_CustomEvent_Delay) == 0x000008, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_IsActive_ReturnValue) == 0x000010, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_IsPlaying_ReturnValue) == 0x000011, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, K2Node_Event_Player) == 0x000018, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000020, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, K2Node_CustomEvent_Enabled) == 0x000021, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000022, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, Temp_bool_Variable) == 0x000023, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, K2Node_Select_Default) == 0x000040, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000051, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_Array_Random_OutItem) == 0x000058, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_Array_Random_OutIndex) == 0x000060, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio, CallFunc_Delay_Duration_ImplicitCast) == 0x000064, "Member 'BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

}

