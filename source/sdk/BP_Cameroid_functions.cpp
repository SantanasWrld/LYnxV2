#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Cameroid

#include "Basic.hpp"

#include "BP_Cameroid_classes.hpp"
#include "BP_Cameroid_parameters.hpp"


namespace SDK
{

// Function BP_Cameroid.BP_Cameroid_C.GetCurrentCameraView
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMinimalViewInfo*                View                                                   (Parm, OutParm)

void ABP_Cameroid_C::GetCurrentCameraView(struct FMinimalViewInfo* View)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "GetCurrentCameraView");

	Params::BP_Cameroid_C_GetCurrentCameraView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (View != nullptr)
		*View = std::move(Parms.View);
}


// Function BP_Cameroid.BP_Cameroid_C.GetCaptureRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Ratio                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::GetCaptureRatio(double* Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "GetCaptureRatio");

	Params::BP_Cameroid_C_GetCaptureRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ratio != nullptr)
		*Ratio = Parms.Ratio;
}


// Function BP_Cameroid.BP_Cameroid_C.SetPostProcessBloom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  BloomIntensity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::SetPostProcessBloom(double BloomIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "SetPostProcessBloom");

	Params::BP_Cameroid_C_SetPostProcessBloom Parms{};

	Parms.BloomIntensity = BloomIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.SetPostProcessBlur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  BlurRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::SetPostProcessBlur(double BlurRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "SetPostProcessBlur");

	Params::BP_Cameroid_C_SetPostProcessBlur Parms{};

	Parms.BlurRadius = BlurRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.SetPostProcessMaterials
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FWeightedBlendable>&      Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Cameroid_C::SetPostProcessMaterials(TArray<struct FWeightedBlendable>& Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "SetPostProcessMaterials");

	Params::BP_Cameroid_C_SetPostProcessMaterials Parms{};

	Parms.Materials = std::move(Materials);

	UObject::ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}


// Function BP_Cameroid.BP_Cameroid_C.InitPostProcessMaterials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::InitPostProcessMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "InitPostProcessMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.ComputeMotionValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TargetValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::ComputeMotionValue(double TargetValue, double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "ComputeMotionValue");

	Params::BP_Cameroid_C_ComputeMotionValue Parms{};

	Parms.TargetValue = TargetValue;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.GetCameraAngularSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 AngularSpeed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::GetCameraAngularSpeed(double DeltaSeconds, double* AngularSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "GetCameraAngularSpeed");

	Params::BP_Cameroid_C_GetCameraAngularSpeed Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (AngularSpeed != nullptr)
		*AngularSpeed = Parms.AngularSpeed;
}


// Function BP_Cameroid.BP_Cameroid_C.SetFocusDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DepthOfFieldFocalDistance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::SetFocusDistance(float DepthOfFieldFocalDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "SetFocusDistance");

	Params::BP_Cameroid_C_SetFocusDistance Parms{};

	Parms.DepthOfFieldFocalDistance = DepthOfFieldFocalDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.CreateSaveObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame**                       Save                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::CreateSaveObject(class USaveGame** Save)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CreateSaveObject");

	Params::BP_Cameroid_C_CreateSaveObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Save != nullptr)
		*Save = Parms.Save;
}


// Function BP_Cameroid.BP_Cameroid_C.GetDataIO
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DataIO_C**                    DataIO_0                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::GetDataIO(class ABP_DataIO_C** DataIO_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "GetDataIO");

	Params::BP_Cameroid_C_GetDataIO Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DataIO_0 != nullptr)
		*DataIO_0 = Parms.DataIO_0;
}


// Function BP_Cameroid.BP_Cameroid_C.GetScoring
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Scoring_C**                   Scoring_0                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::GetScoring(class ABP_Scoring_C** Scoring_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "GetScoring");

	Params::BP_Cameroid_C_GetScoring Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scoring_0 != nullptr)
		*Scoring_0 = Parms.Scoring_0;
}


// Function BP_Cameroid.BP_Cameroid_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_Cameroid_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_Cameroid_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.Timeline__FocusEnded__EventFunc
// (BlueprintEvent)

void ABP_Cameroid_C::Timeline__FocusEnded__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "Timeline__FocusEnded__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.Timeline__FocusStarted__EventFunc
// (BlueprintEvent)

void ABP_Cameroid_C::Timeline__FocusStarted__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "Timeline__FocusStarted__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_Cameroid_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_Cameroid_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.InpActEvt_IA_CameroidZoomIn_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::InpActEvt_IA_CameroidZoomIn_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "InpActEvt_IA_CameroidZoomIn_K2Node_EnhancedInputActionEvent_3");

	Params::BP_Cameroid_C_InpActEvt_IA_CameroidZoomIn_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.InpActEvt_IA_CameroidZoomOut_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::InpActEvt_IA_CameroidZoomOut_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "InpActEvt_IA_CameroidZoomOut_K2Node_EnhancedInputActionEvent_2");

	Params::BP_Cameroid_C_InpActEvt_IA_CameroidZoomOut_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.InpActEvt_IA_CameroidCapture_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::InpActEvt_IA_CameroidCapture_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "InpActEvt_IA_CameroidCapture_K2Node_EnhancedInputActionEvent_1");

	Params::BP_Cameroid_C_InpActEvt_IA_CameroidCapture_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.InpActEvt_IA_CameroidSelfie_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::InpActEvt_IA_CameroidSelfie_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "InpActEvt_IA_CameroidSelfie_K2Node_EnhancedInputActionEvent_0");

	Params::BP_Cameroid_C_InpActEvt_IA_CameroidSelfie_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.InitAchievements
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::InitAchievements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "InitAchievements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.CheckCaptureAchievements
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Cameroid_C::CheckCaptureAchievements(const struct FS_CameroidCapture& Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CheckCaptureAchievements");

	Params::BP_Cameroid_C_CheckCaptureAchievements Parms{};

	Parms.Capture = std::move(Capture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.CheckPointsAchievements
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Cameroid_C::CheckPointsAchievements(const struct FS_CameroidCapture& Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CheckPointsAchievements");

	Params::BP_Cameroid_C_CheckPointsAchievements Parms{};

	Parms.Capture = std::move(Capture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.CheckCloseEncountersAchievement
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Cameroid_C::CheckCloseEncountersAchievement(const struct FS_CameroidCapture& Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CheckCloseEncountersAchievement");

	Params::BP_Cameroid_C_CheckCloseEncountersAchievement Parms{};

	Parms.Capture = std::move(Capture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.CheckWorthyTragedyAchievement
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Cameroid_C::CheckWorthyTragedyAchievement(const struct FS_CameroidCapture& Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CheckWorthyTragedyAchievement");

	Params::BP_Cameroid_C_CheckWorthyTragedyAchievement Parms{};

	Parms.Capture = std::move(Capture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.CheckWarCorrespondentAchievement
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Cameroid_C::CheckWarCorrespondentAchievement(const struct FS_CameroidCapture& Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CheckWarCorrespondentAchievement");

	Params::BP_Cameroid_C_CheckWarCorrespondentAchievement Parms{};

	Parms.Capture = std::move(Capture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.CheckDavidVsGoliathAchievement
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Cameroid_C::CheckDavidVsGoliathAchievement(const struct FS_CameroidCapture& Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CheckDavidVsGoliathAchievement");

	Params::BP_Cameroid_C_CheckDavidVsGoliathAchievement Parms{};

	Parms.Capture = std::move(Capture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.CaptureTaken
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Cameroid_C::CaptureTaken(const struct FS_CameroidCapture& Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CaptureTaken");

	Params::BP_Cameroid_C_CaptureTaken Parms{};

	Parms.Capture = std::move(Capture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Cameroid_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.PlayFocusAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::PlayFocusAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "PlayFocusAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.UpdateLight
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::UpdateLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "UpdateLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "ReceiveTick");

	Params::BP_Cameroid_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.OnRep_IsInFocus
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::OnRep_IsInFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "OnRep_IsInFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.LoadSaveData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        Save                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::LoadSaveData(class USaveGame* Save)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "LoadSaveData");

	Params::BP_Cameroid_C_LoadSaveData Parms{};

	Parms.Save = Save;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.UpdateCamera
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::UpdateCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "UpdateCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.UpdatePostProcess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::UpdatePostProcess(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "UpdatePostProcess");

	Params::BP_Cameroid_C_UpdatePostProcess Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.InitPostProcess
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::InitPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "InitPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.UpdateInputMapping
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceDisable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::UpdateInputMapping(bool ForceDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "UpdateInputMapping");

	Params::BP_Cameroid_C_UpdateInputMapping Parms{};

	Parms.ForceDisable = ForceDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.OnRep_Player
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::OnRep_Player()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "OnRep_Player");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.OnRep_IsEquipped
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::OnRep_IsEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "OnRep_IsEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "ReceiveEndPlay");

	Params::BP_Cameroid_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.UpdateZoomFov
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::UpdateZoomFov(double FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "UpdateZoomFov");

	Params::BP_Cameroid_C_UpdateZoomFov Parms{};

	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.StartCaptureVFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Cameroid_C*                   Cameroid                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::StartCaptureVFX(class ABP_Cameroid_C* Cameroid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "StartCaptureVFX");

	Params::BP_Cameroid_C_StartCaptureVFX Parms{};

	Parms.Cameroid = Cameroid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.ToggleSelfieMode
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::ToggleSelfieMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "ToggleSelfieMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.UpdateSelfieMode
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::UpdateSelfieMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "UpdateSelfieMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.OnRep_IsInSelfieMode
// (BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::OnRep_IsInSelfieMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "OnRep_IsInSelfieMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.OverridePlayerFov
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::OverridePlayerFov(double FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "OverridePlayerFov");

	Params::BP_Cameroid_C_OverridePlayerFov Parms{};

	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.UpdateSelfieCameraRotationLimits
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LimitsEnabled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::UpdateSelfieCameraRotationLimits(bool LimitsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "UpdateSelfieCameraRotationLimits");

	Params::BP_Cameroid_C_UpdateSelfieCameraRotationLimits Parms{};

	Parms.LimitsEnabled = LimitsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.CameroidCapture (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Cameroid_C::CameroidCapture__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CameroidCapture (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Cameroid.BP_Cameroid_C.CameroidCapture (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CaptureId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::CameroidCapture__Client_(int32 CaptureId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "CameroidCapture (Client)");

	Params::BP_Cameroid_C_CameroidCapture__Client_ Parms{};

	Parms.CaptureId = CaptureId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.RegisterCapture (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   DataLength                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::RegisterCapture__Server_(const struct FS_CameroidCapture& Capture, int32 DataLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "RegisterCapture (Server)");

	Params::BP_Cameroid_C_RegisterCapture__Server_ Parms{};

	Parms.Capture = std::move(Capture);
	Parms.DataLength = DataLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Cameroid.BP_Cameroid_C.ExecuteUbergraph_BP_Cameroid
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Cameroid_C::ExecuteUbergraph_BP_Cameroid(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Cameroid_C", "ExecuteUbergraph_BP_Cameroid");

	Params::BP_Cameroid_C_ExecuteUbergraph_BP_Cameroid Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

