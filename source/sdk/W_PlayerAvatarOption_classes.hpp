#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerAvatarOption

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_PlayerAvatar_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PlayerAvatarOption.W_PlayerAvatarOption_C
// 0x00A8 (0x0368 - 0x02C0)
class UW_PlayerAvatarOption_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appareance;                                        // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AvatarImg;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_PlayerAvatar                                PlayerAvatar;                                      // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_PlayerAvatar, class UTexture2D*>       AvatarTextures;                                    // 0x02E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UW_PlayerAvatarOption_C* AvatarOption)> OnClicked;           // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLinearColor                           SelectedOutline;                                   // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultOutline;                                    // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_PlayerAvatarOption_Button_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void ExecuteUbergraph_W_PlayerAvatarOption(int32 EntryPoint);
	void InitAvatarOption(E_PlayerAvatar Avatar);
	void UpdateSelected(bool IsSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PlayerAvatarOption_C">();
	}
	static class UW_PlayerAvatarOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PlayerAvatarOption_C>();
	}
};
static_assert(alignof(UW_PlayerAvatarOption_C) == 0x000008, "Wrong alignment on UW_PlayerAvatarOption_C");
static_assert(sizeof(UW_PlayerAvatarOption_C) == 0x000368, "Wrong size on UW_PlayerAvatarOption_C");
static_assert(offsetof(UW_PlayerAvatarOption_C, UberGraphFrame) == 0x0002C0, "Member 'UW_PlayerAvatarOption_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PlayerAvatarOption_C, Appareance) == 0x0002C8, "Member 'UW_PlayerAvatarOption_C::Appareance' has a wrong offset!");
static_assert(offsetof(UW_PlayerAvatarOption_C, AvatarImg) == 0x0002D0, "Member 'UW_PlayerAvatarOption_C::AvatarImg' has a wrong offset!");
static_assert(offsetof(UW_PlayerAvatarOption_C, Button) == 0x0002D8, "Member 'UW_PlayerAvatarOption_C::Button' has a wrong offset!");
static_assert(offsetof(UW_PlayerAvatarOption_C, PlayerAvatar) == 0x0002E0, "Member 'UW_PlayerAvatarOption_C::PlayerAvatar' has a wrong offset!");
static_assert(offsetof(UW_PlayerAvatarOption_C, AvatarTextures) == 0x0002E8, "Member 'UW_PlayerAvatarOption_C::AvatarTextures' has a wrong offset!");
static_assert(offsetof(UW_PlayerAvatarOption_C, OnClicked) == 0x000338, "Member 'UW_PlayerAvatarOption_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_PlayerAvatarOption_C, SelectedOutline) == 0x000348, "Member 'UW_PlayerAvatarOption_C::SelectedOutline' has a wrong offset!");
static_assert(offsetof(UW_PlayerAvatarOption_C, DefaultOutline) == 0x000358, "Member 'UW_PlayerAvatarOption_C::DefaultOutline' has a wrong offset!");

}

