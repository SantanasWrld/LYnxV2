#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Loading

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Loading.BP_Loading_C.ExecuteUbergraph_BP_Loading
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Loading_C_ExecuteUbergraph_BP_Loading final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& DestinationMapName)> K2Node_CreateDelegate_OutputDelegate;   // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_MapName;                        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Difficulty;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentPoints;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Objective;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RemainingDays;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance_1;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_DestinationMapName;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance_2;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEpisodeData_Difficulty;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEpisodeData_CurrentPoints;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEpisodeData_Objective;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEpisodeData_RemainingDays;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Loading_C_ExecuteUbergraph_BP_Loading) == 0x000008, "Wrong alignment on BP_Loading_C_ExecuteUbergraph_BP_Loading");
static_assert(sizeof(BP_Loading_C_ExecuteUbergraph_BP_Loading) == 0x0000A0, "Wrong size on BP_Loading_C_ExecuteUbergraph_BP_Loading");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, EntryPoint) == 0x000000, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_CustomEvent_MapName) == 0x000018, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_CustomEvent_MapName' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_CustomEvent_Difficulty) == 0x000028, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_CustomEvent_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_CustomEvent_CurrentPoints) == 0x00002C, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_CustomEvent_CurrentPoints' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_CustomEvent_Objective) == 0x000030, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_CustomEvent_Objective' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_CustomEvent_RemainingDays) == 0x000034, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_CustomEvent_RemainingDays' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, CallFunc_GetGameInstance_ReturnValue_1) == 0x000040, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000048, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_DynamicCast_AsBP_UPGame_Instance_1) == 0x000058, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_DynamicCast_AsBP_UPGame_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_CustomEvent_DestinationMapName) == 0x000068, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_CustomEvent_DestinationMapName' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, CallFunc_GetGameInstance_ReturnValue_2) == 0x000078, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_DynamicCast_AsBP_UPGame_Instance_2) == 0x000080, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_DynamicCast_AsBP_UPGame_Instance_2' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, CallFunc_GetEpisodeData_Difficulty) == 0x00008C, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::CallFunc_GetEpisodeData_Difficulty' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, CallFunc_GetEpisodeData_CurrentPoints) == 0x000090, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::CallFunc_GetEpisodeData_CurrentPoints' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, CallFunc_GetEpisodeData_Objective) == 0x000094, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::CallFunc_GetEpisodeData_Objective' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, CallFunc_GetEpisodeData_RemainingDays) == 0x000098, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::CallFunc_GetEpisodeData_RemainingDays' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_ExecuteUbergraph_BP_Loading, CallFunc_HasAuthority_ReturnValue) == 0x00009C, "Member 'BP_Loading_C_ExecuteUbergraph_BP_Loading::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_Loading.BP_Loading_C.GetEpisodeData
// 0x0030 (0x0030 - 0x0000)
struct BP_Loading_C_GetEpisodeData final
{
public:
	int32                                         Difficulty;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPoints;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Objective;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingDays;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Episodes_C*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_InLobby;                        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRemainingDays_RemainingDays;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Loading_C_GetEpisodeData) == 0x000008, "Wrong alignment on BP_Loading_C_GetEpisodeData");
static_assert(sizeof(BP_Loading_C_GetEpisodeData) == 0x000030, "Wrong size on BP_Loading_C_GetEpisodeData");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, Difficulty) == 0x000000, "Member 'BP_Loading_C_GetEpisodeData::Difficulty' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, CurrentPoints) == 0x000004, "Member 'BP_Loading_C_GetEpisodeData::CurrentPoints' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, Objective) == 0x000008, "Member 'BP_Loading_C_GetEpisodeData::Objective' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, RemainingDays) == 0x00000C, "Member 'BP_Loading_C_GetEpisodeData::RemainingDays' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BP_Loading_C_GetEpisodeData::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'BP_Loading_C_GetEpisodeData::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000020, "Member 'BP_Loading_C_GetEpisodeData::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Loading_C_GetEpisodeData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_Loading_C_GetEpisodeData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, CallFunc_IsInLobby_InLobby) == 0x00002A, "Member 'BP_Loading_C_GetEpisodeData::CallFunc_IsInLobby_InLobby' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_GetEpisodeData, CallFunc_GetRemainingDays_RemainingDays) == 0x00002C, "Member 'BP_Loading_C_GetEpisodeData::CallFunc_GetRemainingDays_RemainingDays' has a wrong offset!");

// Function BP_Loading.BP_Loading_C.ServerTravelStarted
// 0x0010 (0x0010 - 0x0000)
struct BP_Loading_C_ServerTravelStarted final
{
public:
	class FString                                 DestinationMapName;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Loading_C_ServerTravelStarted) == 0x000008, "Wrong alignment on BP_Loading_C_ServerTravelStarted");
static_assert(sizeof(BP_Loading_C_ServerTravelStarted) == 0x000010, "Wrong size on BP_Loading_C_ServerTravelStarted");
static_assert(offsetof(BP_Loading_C_ServerTravelStarted, DestinationMapName) == 0x000000, "Member 'BP_Loading_C_ServerTravelStarted::DestinationMapName' has a wrong offset!");

// Function BP_Loading.BP_Loading_C.StartLoading
// 0x0020 (0x0020 - 0x0000)
struct BP_Loading_C_StartLoading final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Difficulty;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPoints;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Objective;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingDays;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Loading_C_StartLoading) == 0x000008, "Wrong alignment on BP_Loading_C_StartLoading");
static_assert(sizeof(BP_Loading_C_StartLoading) == 0x000020, "Wrong size on BP_Loading_C_StartLoading");
static_assert(offsetof(BP_Loading_C_StartLoading, MapName) == 0x000000, "Member 'BP_Loading_C_StartLoading::MapName' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_StartLoading, Difficulty) == 0x000010, "Member 'BP_Loading_C_StartLoading::Difficulty' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_StartLoading, CurrentPoints) == 0x000014, "Member 'BP_Loading_C_StartLoading::CurrentPoints' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_StartLoading, Objective) == 0x000018, "Member 'BP_Loading_C_StartLoading::Objective' has a wrong offset!");
static_assert(offsetof(BP_Loading_C_StartLoading, RemainingDays) == 0x00001C, "Member 'BP_Loading_C_StartLoading::RemainingDays' has a wrong offset!");

}

