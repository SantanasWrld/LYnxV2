#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteriorVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InteriorVolume.BP_InteriorVolume_C
// 0x0088 (0x0320 - 0x0298)
class ABP_InteriorVolume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Volume;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_Interior_Skybox_C*                  Skybox;                                            // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_Fog_Session_C*                      Fog;                                               // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPlayerInside;                                   // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ABP_UPPlayerCharacter_C*>          PlayersInside;                                     // 0x02C0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UBP_UPGameInstance_C*                   GameInstance;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DoorsSpawned;                                      // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ChecksPlayerInside();
	void ExecuteUbergraph_BP_InteriorVolume(int32 EntryPoint);
	void GetFog(class ABP_Fog_Session_C** Fog_0);
	void GetGameInstance(class UBP_UPGameInstance_C** GameInstance_0);
	void IsInVolume(const struct FVector& Location, bool* Result);
	void ReceiveTick(float DeltaSeconds);
	void SetLocalPlayerIsInInterior(bool IsInInterior);
	void SpawnDoors();
	void UpdateFogLocation(bool IsInInterior);
	void UpdateSkyboxVisibility(bool IsInInterior);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InteriorVolume_C">();
	}
	static class ABP_InteriorVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteriorVolume_C>();
	}
};
static_assert(alignof(ABP_InteriorVolume_C) == 0x000008, "Wrong alignment on ABP_InteriorVolume_C");
static_assert(sizeof(ABP_InteriorVolume_C) == 0x000320, "Wrong size on ABP_InteriorVolume_C");
static_assert(offsetof(ABP_InteriorVolume_C, UberGraphFrame) == 0x000298, "Member 'ABP_InteriorVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_InteriorVolume_C, Volume) == 0x0002A0, "Member 'ABP_InteriorVolume_C::Volume' has a wrong offset!");
static_assert(offsetof(ABP_InteriorVolume_C, Skybox) == 0x0002A8, "Member 'ABP_InteriorVolume_C::Skybox' has a wrong offset!");
static_assert(offsetof(ABP_InteriorVolume_C, Fog) == 0x0002B0, "Member 'ABP_InteriorVolume_C::Fog' has a wrong offset!");
static_assert(offsetof(ABP_InteriorVolume_C, HasPlayerInside) == 0x0002B8, "Member 'ABP_InteriorVolume_C::HasPlayerInside' has a wrong offset!");
static_assert(offsetof(ABP_InteriorVolume_C, PlayersInside) == 0x0002C0, "Member 'ABP_InteriorVolume_C::PlayersInside' has a wrong offset!");
static_assert(offsetof(ABP_InteriorVolume_C, GameInstance) == 0x000310, "Member 'ABP_InteriorVolume_C::GameInstance' has a wrong offset!");
static_assert(offsetof(ABP_InteriorVolume_C, DoorsSpawned) == 0x000318, "Member 'ABP_InteriorVolume_C::DoorsSpawned' has a wrong offset!");

}

