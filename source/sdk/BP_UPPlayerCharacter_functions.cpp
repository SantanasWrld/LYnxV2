#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPPlayerCharacter

#include "Basic.hpp"

#include "BP_UPPlayerCharacter_classes.hpp"
#include "BP_UPPlayerCharacter_parameters.hpp"


namespace SDK
{

// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ApplyCustomGameConfig
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::ApplyCustomGameConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ApplyCustomGameConfig");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.CanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::CanInteract(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "CanInteract");

	Params::BP_UPPlayerCharacter_C_CanInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.CanMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::CanMove(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "CanMove");

	Params::BP_UPPlayerCharacter_C_CanMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.DebugInteraction
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_UPPlayerCharacter_C::DebugInteraction(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "DebugInteraction");

	Params::BP_UPPlayerCharacter_C_DebugInteraction Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.DebugKill
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::DebugKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "DebugKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.DisableSpectate
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::DisableSpectate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "DisableSpectate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.DownloadCaptureTexture
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CaptureId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::DownloadCaptureTexture(int32 CaptureId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "DownloadCaptureTexture");

	Params::BP_UPPlayerCharacter_C_DownloadCaptureTexture Parms{};

	Parms.CaptureId = CaptureId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.EnableSpectate
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::EnableSpectate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "EnableSpectate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.EntersLadder
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::EntersLadder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "EntersLadder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.EntersVehicle
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::EntersVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "EntersVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ExecuteUbergraph_BP_UPPlayerCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::ExecuteUbergraph_BP_UPPlayerCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ExecuteUbergraph_BP_UPPlayerCharacter");

	Params::BP_UPPlayerCharacter_C_ExecuteUbergraph_BP_UPPlayerCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ExitImmersiveWidget
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::ExitImmersiveWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ExitImmersiveWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.FrozenDeath
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::FrozenDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "FrozenDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.GetDefaultScoringState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ScoringActorState*                    State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::GetDefaultScoringState(E_ScoringActorState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "GetDefaultScoringState");

	Params::BP_UPPlayerCharacter_C_GetDefaultScoringState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.GetEyesLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         EyesLocation_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::GetEyesLocation(struct FVector* EyesLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "GetEyesLocation");

	Params::BP_UPPlayerCharacter_C_GetEyesLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EyesLocation_0 != nullptr)
		*EyesLocation_0 = std::move(Parms.EyesLocation_0);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.GetEyesRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   EyesTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        EyesRotation_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UPPlayerCharacter_C::GetEyesRotation(const struct FVector& EyesTarget, struct FRotator* EyesRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "GetEyesRotation");

	Params::BP_UPPlayerCharacter_C_GetEyesRotation Parms{};

	Parms.EyesTarget = std::move(EyesTarget);

	UObject::ProcessEvent(Func, &Parms);

	if (EyesRotation_0 != nullptr)
		*EyesRotation_0 = std::move(Parms.EyesRotation_0);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.GetEyesTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   TargetFound                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         TargetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::GetEyesTarget(bool* TargetFound, struct FVector* TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "GetEyesTarget");

	Params::BP_UPPlayerCharacter_C_GetEyesTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetFound != nullptr)
		*TargetFound = Parms.TargetFound;

	if (TargetLocation != nullptr)
		*TargetLocation = std::move(Parms.TargetLocation);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.GetFirstPersonItemParent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent**                 Parent                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::GetFirstPersonItemParent(class USceneComponent** Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "GetFirstPersonItemParent");

	Params::BP_UPPlayerCharacter_C_GetFirstPersonItemParent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Parent != nullptr)
		*Parent = Parms.Parent;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.GetPlayerController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerController_C**        PlayerController                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::GetPlayerController(class ABP_UPPlayerController_C** PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "GetPlayerController");

	Params::BP_UPPlayerCharacter_C_GetPlayerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.GetPlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerState_C**             PlayerState_0                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::GetPlayerState(class ABP_UPPlayerState_C** PlayerState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "GetPlayerState");

	Params::BP_UPPlayerCharacter_C_GetPlayerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerState_0 != nullptr)
		*PlayerState_0 = Parms.PlayerState_0;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Harm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DeathType                             DeathType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::Harm(int32 Damage, bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Harm");

	Params::BP_UPPlayerCharacter_C_Harm Parms{};

	Parms.Damage = Damage;
	Parms.Ragdoll = Ragdoll;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;
	Parms.Dismemberment = Dismemberment;
	Parms.DeathType = DeathType;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Headbob
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::Headbob()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Headbob");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ImmersiveWidgetVisibilityChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::ImmersiveWidgetVisibilityChanged(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ImmersiveWidgetVisibilityChanged");

	Params::BP_UPPlayerCharacter_C_ImmersiveWidgetVisibilityChanged Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InitDeath
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::InitDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InitDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InitMovements
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::InitMovements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InitMovements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InitUI
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::InitUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InitUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InitVoicePlayback
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::InitVoicePlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InitVoicePlayback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_0");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_10
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_10");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_10 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_7");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_7 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_8");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_8 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_9
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_9");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_9 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_4");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_5");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_6");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_6 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_3");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_1");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_2");

	Params::BP_UPPlayerCharacter_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Interact (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::Interact__Server_(class AActor* Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Interact (Server)");

	Params::BP_UPPlayerCharacter_C_Interact__Server_ Parms{};

	Parms.Interaction = Interaction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.InteractInProgress
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ElapsedSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::InteractInProgress(double ElapsedSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "InteractInProgress");

	Params::BP_UPPlayerCharacter_C_InteractInProgress Parms{};

	Parms.ElapsedSeconds = ElapsedSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Interactions Tick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::Interactions_Tick(double Delta_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Interactions Tick");

	Params::BP_UPPlayerCharacter_C_Interactions_Tick Parms{};

	Parms.Delta_Seconds = Delta_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.IsInSelfieMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::IsInSelfieMode(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "IsInSelfieMode");

	Params::BP_UPPlayerCharacter_C_IsInSelfieMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Kill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DeathType                             DeathType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::Kill(bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Kill");

	Params::BP_UPPlayerCharacter_C_Kill Parms{};

	Parms.Ragdoll = Ragdoll;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;
	Parms.Dismemberment = Dismemberment;
	Parms.DeathType = DeathType;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.LeavesLadder
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::LeavesLadder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "LeavesLadder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.LeavesVehicle
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::LeavesVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "LeavesVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.LightDismemberment
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::LightDismemberment(const struct FVector& SourceLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "LightDismemberment");

	Params::BP_UPPlayerCharacter_C_LightDismemberment Parms{};

	Parms.SourceLocation = std::move(SourceLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Movements Tick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::Movements_Tick(double Delta_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Movements Tick");

	Params::BP_UPPlayerCharacter_C_Movements_Tick Parms{};

	Parms.Delta_Seconds = Delta_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OnJumped
// (Event, Public, BlueprintEvent)

void ABP_UPPlayerCharacter_C::OnJumped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OnJumped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_UPPlayerCharacter_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OnLanded");

	Params::BP_UPPlayerCharacter_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OnRep_ImmersiveWidgetClass
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::OnRep_ImmersiveWidgetClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OnRep_ImmersiveWidgetClass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OnRep_IsInInterior
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::OnRep_IsInInterior()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OnRep_IsInInterior");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OnRep_IsInRagdoll
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::OnRep_IsInRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OnRep_IsInRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OnRep_IsInVehicle
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::OnRep_IsInVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OnRep_IsInVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OnRep_IsSprinting
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::OnRep_IsSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OnRep_IsSprinting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OverrideFov
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::OverrideFov(double FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OverrideFov");

	Params::BP_UPPlayerCharacter_C_OverrideFov Parms{};

	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.OverwriteSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::OverwriteSpeed(double Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "OverwriteSpeed");

	Params::BP_UPPlayerCharacter_C_OverwriteSpeed Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.PlayerKilled (All)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          KilledCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::PlayerKilled__All_(class ABP_KillableCharacter_C* KilledCharacter, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "PlayerKilled (All)");

	Params::BP_UPPlayerCharacter_C_PlayerKilled__All_ Parms{};

	Parms.KilledCharacter = KilledCharacter;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ProcessLookInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValueX                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InValueY                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutValueX                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutValueY                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::ProcessLookInput(double InValueX, double InValueY, double* OutValueX, double* OutValueY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ProcessLookInput");

	Params::BP_UPPlayerCharacter_C_ProcessLookInput Parms{};

	Parms.InValueX = InValueX;
	Parms.InValueY = InValueY;

	UObject::ProcessEvent(Func, &Parms);

	if (OutValueX != nullptr)
		*OutValueX = Parms.OutValueX;

	if (OutValueY != nullptr)
		*OutValueY = Parms.OutValueY;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ProcessMoveInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValueX                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InValueY                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutValueX                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutValueY                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::ProcessMoveInput(double InValueX, double InValueY, double* OutValueX, double* OutValueY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ProcessMoveInput");

	Params::BP_UPPlayerCharacter_C_ProcessMoveInput Parms{};

	Parms.InValueX = InValueX;
	Parms.InValueY = InValueY;

	UObject::ProcessEvent(Func, &Parms);

	if (OutValueX != nullptr)
		*OutValueX = Parms.OutValueX;

	if (OutValueY != nullptr)
		*OutValueY = Parms.OutValueY;
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_UPPlayerCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ReceiveEndPlay");

	Params::BP_UPPlayerCharacter_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ReceivePossessed");

	Params::BP_UPPlayerCharacter_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ReceiveTick");

	Params::BP_UPPlayerCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Regenerate Stamina
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::Regenerate_Stamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Regenerate Stamina");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SaveCurrentControlRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator*                        ControlRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UPPlayerCharacter_C::SaveCurrentControlRotation(struct FRotator* ControlRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SaveCurrentControlRotation");

	Params::BP_UPPlayerCharacter_C_SaveCurrentControlRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ControlRotation != nullptr)
		*ControlRotation = std::move(Parms.ControlRotation);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SetControlRotationInstant
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  Rotation                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void ABP_UPPlayerCharacter_C::SetControlRotationInstant(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SetControlRotationInstant");

	Params::BP_UPPlayerCharacter_C_SetControlRotationInstant Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SetControlRotationSmooth
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UPPlayerCharacter_C::SetControlRotationSmooth(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SetControlRotationSmooth");

	Params::BP_UPPlayerCharacter_C_SetControlRotationSmooth Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SetCurrentSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::SetCurrentSpeed(double Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SetCurrentSpeed");

	Params::BP_UPPlayerCharacter_C_SetCurrentSpeed Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SetHudVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::SetHudVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SetHudVisibility");

	Params::BP_UPPlayerCharacter_C_SetHudVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SetMovementEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::SetMovementEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SetMovementEnabled");

	Params::BP_UPPlayerCharacter_C_SetMovementEnabled Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SetOverlayMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::SetOverlayMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SetOverlayMaterial");

	Params::BP_UPPlayerCharacter_C_SetOverlayMaterial Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SetTargetHalfHeight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HalfHeight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::SetTargetHalfHeight(double HalfHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SetTargetHalfHeight");

	Params::BP_UPPlayerCharacter_C_SetTargetHalfHeight Parms{};

	Parms.HalfHeight = HalfHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.ShowImmersiveWidget (Server)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ViewTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::ShowImmersiveWidget__Server_(class UClass* Widget, class AActor* ViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "ShowImmersiveWidget (Server)");

	Params::BP_UPPlayerCharacter_C_ShowImmersiveWidget__Server_ Parms{};

	Parms.Widget = Widget;
	Parms.ViewTarget = ViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SpawnBloodParticles
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::SpawnBloodParticles(class FName BoneName, double Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SpawnBloodParticles");

	Params::BP_UPPlayerCharacter_C_SpawnBloodParticles Parms{};

	Parms.BoneName = BoneName;
	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.SpawnSpectator
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerController_C*         PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::SpawnSpectator(class ABP_UPPlayerController_C* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "SpawnSpectator");

	Params::BP_UPPlayerCharacter_C_SpawnSpectator Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Sprint Timer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::Sprint_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Sprint Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.StartCrouch
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::StartCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "StartCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.StartInteract
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UPPlayerCharacter_C::StartInteract(class AActor* Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "StartInteract");

	Params::BP_UPPlayerCharacter_C_StartInteract Parms{};

	Parms.Interaction = Interaction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.StartSprint
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::StartSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "StartSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Stop Sprint
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::Stop_Sprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Stop Sprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.StopCrouch
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::StopCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "StopCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.StopInteract
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::StopInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "StopInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.TeleportPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UPPlayerCharacter_C::TeleportPlayer(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "TeleportPlayer");

	Params::BP_UPPlayerCharacter_C_TeleportPlayer Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Timeline_ControlRotationSmooth__FinishedFunc
// (BlueprintEvent)

void ABP_UPPlayerCharacter_C::Timeline_ControlRotationSmooth__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Timeline_ControlRotationSmooth__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Timeline_ControlRotationSmooth__UpdateFunc
// (BlueprintEvent)

void ABP_UPPlayerCharacter_C::Timeline_ControlRotationSmooth__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Timeline_ControlRotationSmooth__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Timeline_Crouch__FinishedFunc
// (BlueprintEvent)

void ABP_UPPlayerCharacter_C::Timeline_Crouch__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Timeline_Crouch__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Timeline_Crouch__UpdateFunc
// (BlueprintEvent)

void ABP_UPPlayerCharacter_C::Timeline_Crouch__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Timeline_Crouch__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Timeline_Fov__FinishedFunc
// (BlueprintEvent)

void ABP_UPPlayerCharacter_C::Timeline_Fov__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Timeline_Fov__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.Timeline_Fov__UpdateFunc
// (BlueprintEvent)

void ABP_UPPlayerCharacter_C::Timeline_Fov__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "Timeline_Fov__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.UpdateEyesRotation
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::UpdateEyesRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "UpdateEyesRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.UpdateFov
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::UpdateFov()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "UpdateFov");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.UpdateHalfHeight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::UpdateHalfHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "UpdateHalfHeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.UpdateSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::UpdateSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "UpdateSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UPPlayerCharacter.BP_UPPlayerCharacter_C.VehiclesTick
// (BlueprintCallable, BlueprintEvent)

void ABP_UPPlayerCharacter_C::VehiclesTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UPPlayerCharacter_C", "VehiclesTick");

	UObject::ProcessEvent(Func, nullptr);
}

}

