#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_FloatBBCompare

#include "Basic.hpp"

#include "GeometryCollectionNodes_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_FloatBBCompare.BTD_FloatBBCompare_C
// 0x0058 (0x00F8 - 0x00A0)
class UBTD_FloatBBCompare_C final : public UBTDecorator_BlueprintBase
{
public:
	ECompareOperationEnum                         Operation;                                         // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 FirstKey;                                          // 0x00A8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 SecondKey;                                         // 0x00D0(0x0028)(Edit, BlueprintVisible)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_FloatBBCompare_C">();
	}
	static class UBTD_FloatBBCompare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_FloatBBCompare_C>();
	}
};
static_assert(alignof(UBTD_FloatBBCompare_C) == 0x000008, "Wrong alignment on UBTD_FloatBBCompare_C");
static_assert(sizeof(UBTD_FloatBBCompare_C) == 0x0000F8, "Wrong size on UBTD_FloatBBCompare_C");
static_assert(offsetof(UBTD_FloatBBCompare_C, Operation) == 0x0000A0, "Member 'UBTD_FloatBBCompare_C::Operation' has a wrong offset!");
static_assert(offsetof(UBTD_FloatBBCompare_C, FirstKey) == 0x0000A8, "Member 'UBTD_FloatBBCompare_C::FirstKey' has a wrong offset!");
static_assert(offsetof(UBTD_FloatBBCompare_C, SecondKey) == 0x0000D0, "Member 'UBTD_FloatBBCompare_C::SecondKey' has a wrong offset!");

}

