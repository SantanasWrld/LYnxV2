#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Inventory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Inventory.W_Inventory_C
// 0x0080 (0x0340 - 0x02C0)
class UW_Inventory_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Select;                                            // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         InputActions;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ItemsVBox;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InputKey_C*                          W_InputKey_0;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InputKey_C*                          W_InputKey_1;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InputKey_C*                          W_InputKey_2;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InputKey_C*                          W_InputKey_3;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InputKey_C*                          W_InputKey_4;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UW_InventoryItem_C*>             ItemWidgets;                                       // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class ABP_UPPlayerController_C*               PlayerController;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBPC_PlayerInventory_C*                 Inventory;                                         // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_InputKey_C*>                  InputKeyWidgets;                                   // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void CheckItemWidgetsCount();
	void CreateItemWidgets(int32 Count);
	void DeleteItemWidgets(int32 Count);
	void ExecuteUbergraph_W_Inventory(int32 EntryPoint);
	void GetInventoryItem(int32 Index_0, struct FS_InventoryItem* ItemInfo, class ABP_InventoryItem_C** Item);
	void GetItemInfo(class ABP_InventoryItem_C* Item, class FText* InfoText);
	void OnInitialized();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateInputActions(class ABP_InventoryItem_C* Item);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Inventory_C">();
	}
	static class UW_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Inventory_C>();
	}
};
static_assert(alignof(UW_Inventory_C) == 0x000008, "Wrong alignment on UW_Inventory_C");
static_assert(sizeof(UW_Inventory_C) == 0x000340, "Wrong size on UW_Inventory_C");
static_assert(offsetof(UW_Inventory_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Inventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Select) == 0x0002C8, "Member 'UW_Inventory_C::Select' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, InputActions) == 0x0002D0, "Member 'UW_Inventory_C::InputActions' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, ItemsVBox) == 0x0002D8, "Member 'UW_Inventory_C::ItemsVBox' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, W_InputKey_0) == 0x0002E0, "Member 'UW_Inventory_C::W_InputKey_0' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, W_InputKey_1) == 0x0002E8, "Member 'UW_Inventory_C::W_InputKey_1' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, W_InputKey_2) == 0x0002F0, "Member 'UW_Inventory_C::W_InputKey_2' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, W_InputKey_3) == 0x0002F8, "Member 'UW_Inventory_C::W_InputKey_3' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, W_InputKey_4) == 0x000300, "Member 'UW_Inventory_C::W_InputKey_4' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, ItemWidgets) == 0x000308, "Member 'UW_Inventory_C::ItemWidgets' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, PlayerController) == 0x000318, "Member 'UW_Inventory_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Player) == 0x000320, "Member 'UW_Inventory_C::Player' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Inventory) == 0x000328, "Member 'UW_Inventory_C::Inventory' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, InputKeyWidgets) == 0x000330, "Member 'UW_Inventory_C::InputKeyWidgets' has a wrong offset!");

}

