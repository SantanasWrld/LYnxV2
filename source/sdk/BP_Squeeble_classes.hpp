#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Squeeble

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Parent_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Squeeble.BP_Squeeble_C
// 0x0050 (0x0AE0 - 0x0A90)
class ABP_Squeeble_C final : public ABP_Parent_Enemy_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Squeeble_C;                      // 0x0A88(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Timeline_Notice_ZLocation_966CE1774C16A6FF02547EAACF071AAE; // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Notice__Direction_966CE1774C16A6FF02547EAACF071AAE; // 0x0A94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A95[0x3];                                      // 0x0A95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Notice;                                   // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHiding;                                          // 0x0AA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJumping;                                         // 0x0AA1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA2[0x6];                                      // 0x0AA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        HidePoints;                                        // 0x0AA8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         HidePointSearchPerNavPoint;                        // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABC[0x4];                                      // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         IgnoredObstacles;                                  // 0x0AC0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MinObstacles;                                      // 0x0AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DebugHide();
	void ExecuteUbergraph_BP_Squeeble(int32 EntryPoint);
	void GetHidePointAroundNavPoint(class ABP_NavigationPoint_C* NavPoint, struct FVector* Location, bool* Success);
	void GetHidePoints(int32 NavPointIndex);
	void GetNavigationPoints();
	void GetObstaclesCount(const struct FVector& Point, int32* ObstaclesCount);
	void HasObstacle(const struct FVector& Origin, const struct FVector& Direction, bool* Result);
	void OnRep_IsGrawling();
	void Timeline_Notice__FinishedFunc();
	void Timeline_Notice__StartJumping__EventFunc();
	void Timeline_Notice__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Squeeble_C">();
	}
	static class ABP_Squeeble_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Squeeble_C>();
	}
};
static_assert(alignof(ABP_Squeeble_C) == 0x000010, "Wrong alignment on ABP_Squeeble_C");
static_assert(sizeof(ABP_Squeeble_C) == 0x000AE0, "Wrong size on ABP_Squeeble_C");
static_assert(offsetof(ABP_Squeeble_C, UberGraphFrame_BP_Squeeble_C) == 0x000A88, "Member 'ABP_Squeeble_C::UberGraphFrame_BP_Squeeble_C' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, Timeline_Notice_ZLocation_966CE1774C16A6FF02547EAACF071AAE) == 0x000A90, "Member 'ABP_Squeeble_C::Timeline_Notice_ZLocation_966CE1774C16A6FF02547EAACF071AAE' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, Timeline_Notice__Direction_966CE1774C16A6FF02547EAACF071AAE) == 0x000A94, "Member 'ABP_Squeeble_C::Timeline_Notice__Direction_966CE1774C16A6FF02547EAACF071AAE' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, Timeline_Notice) == 0x000A98, "Member 'ABP_Squeeble_C::Timeline_Notice' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, IsHiding) == 0x000AA0, "Member 'ABP_Squeeble_C::IsHiding' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, IsJumping) == 0x000AA1, "Member 'ABP_Squeeble_C::IsJumping' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, HidePoints) == 0x000AA8, "Member 'ABP_Squeeble_C::HidePoints' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, HidePointSearchPerNavPoint) == 0x000AB8, "Member 'ABP_Squeeble_C::HidePointSearchPerNavPoint' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, IgnoredObstacles) == 0x000AC0, "Member 'ABP_Squeeble_C::IgnoredObstacles' has a wrong offset!");
static_assert(offsetof(ABP_Squeeble_C, MinObstacles) == 0x000AD0, "Member 'ABP_Squeeble_C::MinObstacles' has a wrong offset!");

}

