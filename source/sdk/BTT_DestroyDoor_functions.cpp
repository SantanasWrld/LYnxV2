#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_DestroyDoor

#include "Basic.hpp"

#include "BTT_DestroyDoor_classes.hpp"
#include "BTT_DestroyDoor_parameters.hpp"


namespace SDK
{

// Function BTT_DestroyDoor.BTT_DestroyDoor_C.AbortTask
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_DestroyDoor_C::AbortTask(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DestroyDoor_C", "AbortTask");

	Params::BTT_DestroyDoor_C_AbortTask Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_DestroyDoor.BTT_DestroyDoor_C.EndTask
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_DestroyDoor_C::EndTask(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DestroyDoor_C", "EndTask");

	Params::BTT_DestroyDoor_C_EndTask Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_DestroyDoor.BTT_DestroyDoor_C.GetDestinationPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AAIController*                    Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_Parent_Enemy_C*               Pawn_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_DestroyDoor_C::GetDestinationPoint(class AAIController* Controller_0, class ABP_Parent_Enemy_C* Pawn_0, struct FVector* Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DestroyDoor_C", "GetDestinationPoint");

	Params::BTT_DestroyDoor_C_GetDestinationPoint Parms{};

	Parms.Controller_0 = Controller_0;
	Parms.Pawn_0 = Pawn_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function BTT_DestroyDoor.BTT_DestroyDoor_C.GetDoor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_InteractableDoor_C**          Door_0                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_DestroyDoor_C::GetDoor(class ABP_InteractableDoor_C** Door_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DestroyDoor_C", "GetDoor");

	Params::BTT_DestroyDoor_C_GetDoor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Door_0 != nullptr)
		*Door_0 = Parms.Door_0;
}


// Function BTT_DestroyDoor.BTT_DestroyDoor_C.IsDoorReadyToDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_InteractableDoor_C*           Door_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTT_DestroyDoor_C::IsDoorReadyToDestroy(class ABP_InteractableDoor_C* Door_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DestroyDoor_C", "IsDoorReadyToDestroy");

	Params::BTT_DestroyDoor_C_IsDoorReadyToDestroy Parms{};

	Parms.Door_0 = Door_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTT_DestroyDoor.BTT_DestroyDoor_C.TryStartTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   InstantFinish                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_DestroyDoor_C::TryStartTask(class AAIController* OwnerController, class APawn* ControlledPawn, bool* Success, bool* InstantFinish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_DestroyDoor_C", "TryStartTask");

	Params::BTT_DestroyDoor_C_TryStartTask Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (InstantFinish != nullptr)
		*InstantFinish = Parms.InstantFinish;
}

}

