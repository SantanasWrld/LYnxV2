#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_Perception

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTS_Perception.BTS_Perception_C.IsVisibleByTarget
// 0x0148 (0x0148 - 0x0000)
struct BTS_Perception_C_IsVisibleByTarget final
{
public:
	class ABP_Parent_Enemy_C*                     Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetEyesLocation_EyesLocation;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_IsVisibleByTarget) == 0x000008, "Wrong alignment on BTS_Perception_C_IsVisibleByTarget");
static_assert(sizeof(BTS_Perception_C_IsVisibleByTarget) == 0x000148, "Wrong size on BTS_Perception_C_IsVisibleByTarget");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, Pawn) == 0x000000, "Member 'BTS_Perception_C_IsVisibleByTarget::Pawn' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, Killable) == 0x000008, "Member 'BTS_Perception_C_IsVisibleByTarget::Killable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, IsVisible) == 0x000010, "Member 'BTS_Perception_C_IsVisibleByTarget::IsVisible' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTS_Perception_C_IsVisibleByTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, K2Node_MakeArray_Array) == 0x000030, "Member 'BTS_Perception_C_IsVisibleByTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, CallFunc_GetEyesLocation_EyesLocation) == 0x000040, "Member 'BTS_Perception_C_IsVisibleByTarget::CallFunc_GetEyesLocation_EyesLocation' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, CallFunc_LineTraceSingle_OutHit) == 0x000058, "Member 'BTS_Perception_C_IsVisibleByTarget::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, CallFunc_LineTraceSingle_ReturnValue) == 0x000140, "Member 'BTS_Perception_C_IsVisibleByTarget::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsVisibleByTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000141, "Member 'BTS_Perception_C_IsVisibleByTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.IsTargetAccessible
// 0x0040 (0x0040 - 0x0000)
struct BTS_Perception_C_IsTargetAccessible final
{
public:
	class ABP_Parent_Enemy_C*                     Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAccessible;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToActorSynchronously_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPartial_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_IsTargetAccessible) == 0x000008, "Wrong alignment on BTS_Perception_C_IsTargetAccessible");
static_assert(sizeof(BTS_Perception_C_IsTargetAccessible) == 0x000040, "Wrong size on BTS_Perception_C_IsTargetAccessible");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, Pawn) == 0x000000, "Member 'BTS_Perception_C_IsTargetAccessible::Pawn' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, Killable) == 0x000008, "Member 'BTS_Perception_C_IsTargetAccessible::Killable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, IsAccessible) == 0x000010, "Member 'BTS_Perception_C_IsTargetAccessible::IsAccessible' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTS_Perception_C_IsTargetAccessible::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, CallFunc_FindPathToActorSynchronously_ReturnValue) == 0x000030, "Member 'BTS_Perception_C_IsTargetAccessible::CallFunc_FindPathToActorSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BTS_Perception_C_IsTargetAccessible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, CallFunc_IsPartial_ReturnValue) == 0x000039, "Member 'BTS_Perception_C_IsTargetAccessible::CallFunc_IsPartial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BTS_Perception_C_IsTargetAccessible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsTargetAccessible, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'BTS_Perception_C_IsTargetAccessible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.IsPossibleTarget
// 0x0028 (0x0028 - 0x0000)
struct BTS_Perception_C_IsPossibleTarget final
{
public:
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Parent_Enemy_C*                     Pawn;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAffinity_Affinity;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_IsPossibleTarget) == 0x000008, "Wrong alignment on BTS_Perception_C_IsPossibleTarget");
static_assert(sizeof(BTS_Perception_C_IsPossibleTarget) == 0x000028, "Wrong size on BTS_Perception_C_IsPossibleTarget");
static_assert(offsetof(BTS_Perception_C_IsPossibleTarget, Killable) == 0x000000, "Member 'BTS_Perception_C_IsPossibleTarget::Killable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsPossibleTarget, Pawn) == 0x000008, "Member 'BTS_Perception_C_IsPossibleTarget::Pawn' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsPossibleTarget, Result) == 0x000010, "Member 'BTS_Perception_C_IsPossibleTarget::Result' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsPossibleTarget, CallFunc_GetAffinity_Affinity) == 0x000011, "Member 'BTS_Perception_C_IsPossibleTarget::CallFunc_GetAffinity_Affinity' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsPossibleTarget, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000018, "Member 'BTS_Perception_C_IsPossibleTarget::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsPossibleTarget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTS_Perception_C_IsPossibleTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsPossibleTarget, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BTS_Perception_C_IsPossibleTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.SetBlackboardValues
// 0x0040 (0x0040 - 0x0000)
struct BTS_Perception_C_SetBlackboardValues final
{
public:
	class ABP_Parent_Enemy_C*                     Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastPerceivedLocation;                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCurrentlyPerceived;                              // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConfirmed;                                       // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAccessible;                                      // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisibleByTarget_0;                               // 0x0033(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_SetBlackboardValues) == 0x000008, "Wrong alignment on BTS_Perception_C_SetBlackboardValues");
static_assert(sizeof(BTS_Perception_C_SetBlackboardValues) == 0x000040, "Wrong size on BTS_Perception_C_SetBlackboardValues");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, Pawn) == 0x000000, "Member 'BTS_Perception_C_SetBlackboardValues::Pawn' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, Killable) == 0x000008, "Member 'BTS_Perception_C_SetBlackboardValues::Killable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, Distance) == 0x000010, "Member 'BTS_Perception_C_SetBlackboardValues::Distance' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, LastPerceivedLocation) == 0x000018, "Member 'BTS_Perception_C_SetBlackboardValues::LastPerceivedLocation' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, IsCurrentlyPerceived) == 0x000030, "Member 'BTS_Perception_C_SetBlackboardValues::IsCurrentlyPerceived' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, IsConfirmed) == 0x000031, "Member 'BTS_Perception_C_SetBlackboardValues::IsConfirmed' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, IsAccessible) == 0x000032, "Member 'BTS_Perception_C_SetBlackboardValues::IsAccessible' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, IsVisibleByTarget_0) == 0x000033, "Member 'BTS_Perception_C_SetBlackboardValues::IsVisibleByTarget_0' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000034, "Member 'BTS_Perception_C_SetBlackboardValues::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetBlackboardValues, CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast) == 0x000038, "Member 'BTS_Perception_C_SetBlackboardValues::CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.IsCurrentlyPerceived
// 0x0038 (0x0038 - 0x0000)
struct BTS_Perception_C_IsCurrentlyPerceived final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPerceived;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIPerceptionComponent*                 CallFunc_GetAIPerceptionComponent_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetCurrentlyPerceivedActors_OutActors;    // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_IsCurrentlyPerceived) == 0x000008, "Wrong alignment on BTS_Perception_C_IsCurrentlyPerceived");
static_assert(sizeof(BTS_Perception_C_IsCurrentlyPerceived) == 0x000038, "Wrong size on BTS_Perception_C_IsCurrentlyPerceived");
static_assert(offsetof(BTS_Perception_C_IsCurrentlyPerceived, Controller) == 0x000000, "Member 'BTS_Perception_C_IsCurrentlyPerceived::Controller' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsCurrentlyPerceived, Killable) == 0x000008, "Member 'BTS_Perception_C_IsCurrentlyPerceived::Killable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsCurrentlyPerceived, IsPerceived) == 0x000010, "Member 'BTS_Perception_C_IsCurrentlyPerceived::IsPerceived' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsCurrentlyPerceived, CallFunc_GetAIPerceptionComponent_ReturnValue) == 0x000018, "Member 'BTS_Perception_C_IsCurrentlyPerceived::CallFunc_GetAIPerceptionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsCurrentlyPerceived, CallFunc_GetCurrentlyPerceivedActors_OutActors) == 0x000020, "Member 'BTS_Perception_C_IsCurrentlyPerceived::CallFunc_GetCurrentlyPerceivedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_IsCurrentlyPerceived, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'BTS_Perception_C_IsCurrentlyPerceived::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.SetResults
// 0x0048 (0x0048 - 0x0000)
struct BTS_Perception_C_SetResults final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Parent_Enemy_C*                     Pawn;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConfirmed;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisibleByTarget_IsVisible;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetAccessible_IsAccessible;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentlyPerceived_IsPerceived;         // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastPerceivedLocation_PerceivedLocation; // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_SetResults) == 0x000008, "Wrong alignment on BTS_Perception_C_SetResults");
static_assert(sizeof(BTS_Perception_C_SetResults) == 0x000048, "Wrong size on BTS_Perception_C_SetResults");
static_assert(offsetof(BTS_Perception_C_SetResults, Controller) == 0x000000, "Member 'BTS_Perception_C_SetResults::Controller' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, Pawn) == 0x000008, "Member 'BTS_Perception_C_SetResults::Pawn' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, Killable) == 0x000010, "Member 'BTS_Perception_C_SetResults::Killable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, Distance) == 0x000018, "Member 'BTS_Perception_C_SetResults::Distance' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, IsConfirmed) == 0x000020, "Member 'BTS_Perception_C_SetResults::IsConfirmed' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, CallFunc_IsVisibleByTarget_IsVisible) == 0x000021, "Member 'BTS_Perception_C_SetResults::CallFunc_IsVisibleByTarget_IsVisible' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, CallFunc_IsTargetAccessible_IsAccessible) == 0x000022, "Member 'BTS_Perception_C_SetResults::CallFunc_IsTargetAccessible_IsAccessible' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, CallFunc_IsCurrentlyPerceived_IsPerceived) == 0x000023, "Member 'BTS_Perception_C_SetResults::CallFunc_IsCurrentlyPerceived_IsPerceived' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, CallFunc_GetLastPerceivedLocation_PerceivedLocation) == 0x000028, "Member 'BTS_Perception_C_SetResults::CallFunc_GetLastPerceivedLocation_PerceivedLocation' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_SetResults, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BTS_Perception_C_SetResults::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.GetLastPerceivedLocation
// 0x00C8 (0x00C8 - 0x0000)
struct BTS_Perception_C_GetLastPerceivedLocation final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PerceivedLocation;                                 // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIPerceptionComponent*                 CallFunc_GetAIPerceptionComponent_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActorPerceptionBlueprintInfo          CallFunc_GetActorsPerception_Info;                 // 0x0038(0x0020)()
	bool                                          CallFunc_GetActorsPerception_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIStimulus                            CallFunc_Array_Get_Item;                           // 0x0068(0x0058)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_GetLastPerceivedLocation) == 0x000008, "Wrong alignment on BTS_Perception_C_GetLastPerceivedLocation");
static_assert(sizeof(BTS_Perception_C_GetLastPerceivedLocation) == 0x0000C8, "Wrong size on BTS_Perception_C_GetLastPerceivedLocation");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, Controller) == 0x000000, "Member 'BTS_Perception_C_GetLastPerceivedLocation::Controller' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, Target) == 0x000008, "Member 'BTS_Perception_C_GetLastPerceivedLocation::Target' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, PerceivedLocation) == 0x000010, "Member 'BTS_Perception_C_GetLastPerceivedLocation::PerceivedLocation' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BTS_Perception_C_GetLastPerceivedLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, CallFunc_GetAIPerceptionComponent_ReturnValue) == 0x000030, "Member 'BTS_Perception_C_GetLastPerceivedLocation::CallFunc_GetAIPerceptionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, CallFunc_GetActorsPerception_Info) == 0x000038, "Member 'BTS_Perception_C_GetLastPerceivedLocation::CallFunc_GetActorsPerception_Info' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, CallFunc_GetActorsPerception_ReturnValue) == 0x000058, "Member 'BTS_Perception_C_GetLastPerceivedLocation::CallFunc_GetActorsPerception_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BTS_Perception_C_GetLastPerceivedLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BTS_Perception_C_GetLastPerceivedLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, CallFunc_Array_Get_Item) == 0x000068, "Member 'BTS_Perception_C_GetLastPerceivedLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BTS_Perception_C_GetLastPerceivedLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetLastPerceivedLocation, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BTS_Perception_C_GetLastPerceivedLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.GetClosestPerceivedActor
// 0x00E0 (0x00E0 - 0x0000)
struct BTS_Perception_C_GetClosestPerceivedActor final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Parent_Enemy_C*                     Pawn;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UAISense>                   Sense;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                ClosestTarget;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        ClosestDistance;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AILocation;                                        // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIPerceptionComponent*                 CallFunc_GetAIPerceptionComponent_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetKnownPerceivedActors_OutActors;        // 0x0088(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                K2Node_DynamicCast_AsBP_Killable_Character;        // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPossibleTarget_Result;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_GetClosestPerceivedActor) == 0x000008, "Wrong alignment on BTS_Perception_C_GetClosestPerceivedActor");
static_assert(sizeof(BTS_Perception_C_GetClosestPerceivedActor) == 0x0000E0, "Wrong size on BTS_Perception_C_GetClosestPerceivedActor");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, Controller) == 0x000000, "Member 'BTS_Perception_C_GetClosestPerceivedActor::Controller' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, Pawn) == 0x000008, "Member 'BTS_Perception_C_GetClosestPerceivedActor::Pawn' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, Sense) == 0x000010, "Member 'BTS_Perception_C_GetClosestPerceivedActor::Sense' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, Killable) == 0x000018, "Member 'BTS_Perception_C_GetClosestPerceivedActor::Killable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, Distance) == 0x000020, "Member 'BTS_Perception_C_GetClosestPerceivedActor::Distance' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, ClosestTarget) == 0x000028, "Member 'BTS_Perception_C_GetClosestPerceivedActor::ClosestTarget' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, ClosestDistance) == 0x000030, "Member 'BTS_Perception_C_GetClosestPerceivedActor::ClosestDistance' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, AILocation) == 0x000038, "Member 'BTS_Perception_C_GetClosestPerceivedActor::AILocation' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BTS_Perception_C_GetClosestPerceivedActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_GetAIPerceptionComponent_ReturnValue) == 0x000078, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_GetAIPerceptionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BTS_Perception_C_GetClosestPerceivedActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_GetKnownPerceivedActors_OutActors) == 0x000088, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_GetKnownPerceivedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_Array_Get_Item) == 0x000098, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, K2Node_DynamicCast_AsBP_Killable_Character) == 0x0000A8, "Member 'BTS_Perception_C_GetClosestPerceivedActor::K2Node_DynamicCast_AsBP_Killable_Character' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BTS_Perception_C_GetClosestPerceivedActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_IsPossibleTarget_Result) == 0x0000B2, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_IsPossibleTarget_Result' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B8, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_Vector_Distance_ReturnValue) == 0x0000D0, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_GetClosestPerceivedActor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BTS_Perception_C_GetClosestPerceivedActor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_Perception_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_Perception_C_ReceiveTickAI");
static_assert(sizeof(BTS_Perception_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_Perception_C_ReceiveTickAI");
static_assert(offsetof(BTS_Perception_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_Perception_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_Perception_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_Perception_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTS_Perception.BTS_Perception_C.ExecuteUbergraph_BTS_Perception
// 0x0058 (0x0058 - 0x0000)
struct BTS_Perception_C_ExecuteUbergraph_BTS_Perception final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Parent_Enemy_C*                     K2Node_DynamicCast_AsBP_Parent_Enemy;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                CallFunc_GetClosestPerceivedActor_Killable;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetClosestPerceivedActor_Distance;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                CallFunc_GetClosestPerceivedActor_Killable_1;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetClosestPerceivedActor_Distance_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception) == 0x000008, "Wrong alignment on BTS_Perception_C_ExecuteUbergraph_BTS_Perception");
static_assert(sizeof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception) == 0x000058, "Wrong size on BTS_Perception_C_ExecuteUbergraph_BTS_Perception");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, EntryPoint) == 0x000000, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, K2Node_Event_OwnerController) == 0x000008, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, K2Node_DynamicCast_AsBP_Parent_Enemy) == 0x000020, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::K2Node_DynamicCast_AsBP_Parent_Enemy' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, CallFunc_GetClosestPerceivedActor_Killable) == 0x000030, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::CallFunc_GetClosestPerceivedActor_Killable' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, CallFunc_GetClosestPerceivedActor_Distance) == 0x000038, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::CallFunc_GetClosestPerceivedActor_Distance' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, CallFunc_GetClosestPerceivedActor_Killable_1) == 0x000040, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::CallFunc_GetClosestPerceivedActor_Killable_1' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, CallFunc_GetClosestPerceivedActor_Distance_1) == 0x000048, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::CallFunc_GetClosestPerceivedActor_Distance_1' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_Perception_C_ExecuteUbergraph_BTS_Perception, CallFunc_IsValid_ReturnValue_2) == 0x000051, "Member 'BTS_Perception_C_ExecuteUbergraph_BTS_Perception::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

