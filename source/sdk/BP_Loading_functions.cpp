#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Loading

#include "Basic.hpp"

#include "BP_Loading_classes.hpp"
#include "BP_Loading_parameters.hpp"


namespace SDK
{

// Function BP_Loading.BP_Loading_C.ExecuteUbergraph_BP_Loading
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Loading_C::ExecuteUbergraph_BP_Loading(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Loading_C", "ExecuteUbergraph_BP_Loading");

	Params::BP_Loading_C_ExecuteUbergraph_BP_Loading Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Loading.BP_Loading_C.GetEpisodeData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Difficulty                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  CurrentPoints                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Objective                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  RemainingDays                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Loading_C::GetEpisodeData(int32* Difficulty, int32* CurrentPoints, int32* Objective, int32* RemainingDays)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Loading_C", "GetEpisodeData");

	Params::BP_Loading_C_GetEpisodeData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Difficulty != nullptr)
		*Difficulty = Parms.Difficulty;

	if (CurrentPoints != nullptr)
		*CurrentPoints = Parms.CurrentPoints;

	if (Objective != nullptr)
		*Objective = Parms.Objective;

	if (RemainingDays != nullptr)
		*RemainingDays = Parms.RemainingDays;
}


// Function BP_Loading.BP_Loading_C.OnRep_IsLoadingCompleted
// (BlueprintCallable, BlueprintEvent)

void ABP_Loading_C::OnRep_IsLoadingCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Loading_C", "OnRep_IsLoadingCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Loading.BP_Loading_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Loading_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Loading_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Loading.BP_Loading_C.ServerTravelStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DestinationMapName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Loading_C::ServerTravelStarted(const class FString& DestinationMapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Loading_C", "ServerTravelStarted");

	Params::BP_Loading_C_ServerTravelStarted Parms{};

	Parms.DestinationMapName = std::move(DestinationMapName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Loading.BP_Loading_C.StartLoading
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MapName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Difficulty                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentPoints                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RemainingDays                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Loading_C::StartLoading(const class FString& MapName, int32 Difficulty, int32 CurrentPoints, int32 Objective, int32 RemainingDays)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Loading_C", "StartLoading");

	Params::BP_Loading_C_StartLoading Parms{};

	Parms.MapName = std::move(MapName);
	Parms.Difficulty = Difficulty;
	Parms.CurrentPoints = CurrentPoints;
	Parms.Objective = Objective;
	Parms.RemainingDays = RemainingDays;

	UObject::ProcessEvent(Func, &Parms);
}

}

