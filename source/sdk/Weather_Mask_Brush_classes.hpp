#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weather_Mask_Brush

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "UDS_Weather_Mask_Brush_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weather_Mask_Brush.Weather_Mask_Brush_C
// 0x00A8 (0x0340 - 0x0298)
class AWeather_Mask_Brush_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Mask_Brush                       Brush;                                             // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Mask_Wetness;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust;                                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Weather_C*               UDW;                                               // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      Corners;                                           // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        Yaw;                                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Brush_Scale;                                       // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Brush_Texture;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Brush_Color;                                       // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Brush_Location;                                    // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cancel_Masks_Above;                                // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Center_Location;                                   // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Distance;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Weather_Mask_Brush(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weather_Mask_Brush_C">();
	}
	static class AWeather_Mask_Brush_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeather_Mask_Brush_C>();
	}
};
static_assert(alignof(AWeather_Mask_Brush_C) == 0x000008, "Wrong alignment on AWeather_Mask_Brush_C");
static_assert(sizeof(AWeather_Mask_Brush_C) == 0x000340, "Wrong size on AWeather_Mask_Brush_C");
static_assert(offsetof(AWeather_Mask_Brush_C, UberGraphFrame) == 0x000298, "Member 'AWeather_Mask_Brush_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Box) == 0x0002A0, "Member 'AWeather_Mask_Brush_C::Box' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Billboard) == 0x0002A8, "Member 'AWeather_Mask_Brush_C::Billboard' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Brush) == 0x0002B0, "Member 'AWeather_Mask_Brush_C::Brush' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Mask_Wetness) == 0x0002B8, "Member 'AWeather_Mask_Brush_C::Mask_Wetness' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Dust) == 0x0002C0, "Member 'AWeather_Mask_Brush_C::Dust' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, UDW) == 0x0002C8, "Member 'AWeather_Mask_Brush_C::UDW' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Corners) == 0x0002D0, "Member 'AWeather_Mask_Brush_C::Corners' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Yaw) == 0x0002E0, "Member 'AWeather_Mask_Brush_C::Yaw' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Brush_Scale) == 0x0002E8, "Member 'AWeather_Mask_Brush_C::Brush_Scale' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Brush_Texture) == 0x0002F8, "Member 'AWeather_Mask_Brush_C::Brush_Texture' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Brush_Color) == 0x000300, "Member 'AWeather_Mask_Brush_C::Brush_Color' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Brush_Location) == 0x000310, "Member 'AWeather_Mask_Brush_C::Brush_Location' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Cancel_Masks_Above) == 0x000320, "Member 'AWeather_Mask_Brush_C::Cancel_Masks_Above' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Center_Location) == 0x000328, "Member 'AWeather_Mask_Brush_C::Center_Location' has a wrong offset!");
static_assert(offsetof(AWeather_Mask_Brush_C, Max_Distance) == 0x000338, "Member 'AWeather_Mask_Brush_C::Max_Distance' has a wrong offset!");

}

