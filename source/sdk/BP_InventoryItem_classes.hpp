#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_InventoryItem_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InventoryItem.BP_InventoryItem_C
// 0x00D8 (0x0370 - 0x0298)
class ABP_InventoryItem_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        MainParent;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_InventoryItem                               Item;                                              // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemId;                                            // 0x02BC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          FollowCameraRotation;                              // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipped;                                        // 0x02C1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInFocus;                                         // 0x02C2(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInUse;                                           // 0x02C3(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x02C8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class ABP_InventoryItem_C* Item, bool IsEquipped)> OnEquippedChanged; // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ABP_InventoryItem_C* Item, bool IsInFocus)> OnFocusChanged;  // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ABP_InventoryItem_C* Item, bool IsUsed)> OnUsedChanged;      // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UClass*                                 OverlayWidgetClass;                                // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_InventoryItemOverlay_C*              OverlayWidget;                                     // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class UInputAction*, class FText>        InputActions;                                      // 0x0310(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class ABP_InventoryItem_C* Item)> OnItemDestroyed;                 // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CreateSaveObject(class USaveGame** Save);
	void OnRep_IsInUse();
	void OnRep_IsEquipped();
	void ReceiveTick(float DeltaSeconds);
	void LoadSaveData(class USaveGame* Save);
	void LoadSaveObject(class USaveGame** Save);
	void UpdateInputs();
	void OnRep_IsInFocus();
	void OnRep_Player();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void CreateWidgetIfNeeded();
	void SaveData();
	void UpdateMainParentRotation();
	void ExecuteUbergraph_BP_InventoryItem(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InventoryItem_C">();
	}
	static class ABP_InventoryItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InventoryItem_C>();
	}
};
static_assert(alignof(ABP_InventoryItem_C) == 0x000008, "Wrong alignment on ABP_InventoryItem_C");
static_assert(sizeof(ABP_InventoryItem_C) == 0x000370, "Wrong size on ABP_InventoryItem_C");
static_assert(offsetof(ABP_InventoryItem_C, UberGraphFrame) == 0x000298, "Member 'ABP_InventoryItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, StaticMesh) == 0x0002A0, "Member 'ABP_InventoryItem_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, MainParent) == 0x0002A8, "Member 'ABP_InventoryItem_C::MainParent' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_InventoryItem_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, Item) == 0x0002B8, "Member 'ABP_InventoryItem_C::Item' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, ItemId) == 0x0002BC, "Member 'ABP_InventoryItem_C::ItemId' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, FollowCameraRotation) == 0x0002C0, "Member 'ABP_InventoryItem_C::FollowCameraRotation' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, IsEquipped) == 0x0002C1, "Member 'ABP_InventoryItem_C::IsEquipped' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, IsInFocus) == 0x0002C2, "Member 'ABP_InventoryItem_C::IsInFocus' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, IsInUse) == 0x0002C3, "Member 'ABP_InventoryItem_C::IsInUse' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, Player) == 0x0002C8, "Member 'ABP_InventoryItem_C::Player' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, OnEquippedChanged) == 0x0002D0, "Member 'ABP_InventoryItem_C::OnEquippedChanged' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, OnFocusChanged) == 0x0002E0, "Member 'ABP_InventoryItem_C::OnFocusChanged' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, OnUsedChanged) == 0x0002F0, "Member 'ABP_InventoryItem_C::OnUsedChanged' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, OverlayWidgetClass) == 0x000300, "Member 'ABP_InventoryItem_C::OverlayWidgetClass' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, OverlayWidget) == 0x000308, "Member 'ABP_InventoryItem_C::OverlayWidget' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, InputActions) == 0x000310, "Member 'ABP_InventoryItem_C::InputActions' has a wrong offset!");
static_assert(offsetof(ABP_InventoryItem_C, OnItemDestroyed) == 0x000360, "Member 'ABP_InventoryItem_C::OnItemDestroyed' has a wrong offset!");

}

