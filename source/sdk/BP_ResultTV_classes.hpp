#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResultTV

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_CameroidCapture_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ResultTV.BP_ResultTV_C
// 0x00E8 (0x0380 - 0x0298)
class ABP_ResultTV_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   PageText;                                          // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       RecapWidget;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RecapParent;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MainCollision;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ResultsPendingParent;                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TVMesh;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ResultMosaicElement_C*>      MosaicElements;                                    // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_ResultMosaicSelection_C*            MosaicSelection;                                   // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_ResultNextPage_C*                   NextPageBtn;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_ResultPrevPage_C*                   PrevPageBtn;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameState_C*                      GameState;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_CameroidCapture>             Captures;                                          // 0x0310(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	bool                                          ResultsPending;                                    // 0x0320(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          RecapInProgress;                                   // 0x0321(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          MosaicEnabled;                                     // 0x0322(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_323[0x1];                                      // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxPage;                                           // 0x0324(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MosaicPage;                                        // 0x0328(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CameroidCapture                     MosaicSelectionCapture;                            // 0x0330(0x0040)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FS_CameroidCapture& Capture)> OnSelectionChanged;     // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AreAllSessionPlayersConnected(bool* Result);
	void ExecuteUbergraph_BP_ResultTV(int32 EntryPoint);
	void FetchAllCaptures();
	void GetCapture(int32 CaptureIndex, struct FS_CameroidCapture* Capture);
	void GetInteractDistance(double* Distance);
	void GetInteractDuration(double* Duration);
	void GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange);
	void GetInteractText(class FText* Text);
	void GetTotalPoints(int32* Points);
	void Interact(class ABP_UPPlayerCharacter_C* Player);
	void InteractionStarted();
	void InteractionStopped();
	void NextPage();
	void OnRep_MosaicEnabled();
	void OnRep_MosaicPage();
	void OnRep_MosaicSelectionCapture();
	void OnRep_RecapInProgress();
	void OnRep_ResultsPending();
	void PrevPage();
	void RecapFinished();
	void ReceiveBeginPlay();
	void SelectMosaicCapture(const struct FS_CameroidCapture& Capture);
	void SetMosaicVisibility(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ResultTV_C">();
	}
	static class ABP_ResultTV_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ResultTV_C>();
	}
};
static_assert(alignof(ABP_ResultTV_C) == 0x000008, "Wrong alignment on ABP_ResultTV_C");
static_assert(sizeof(ABP_ResultTV_C) == 0x000380, "Wrong size on ABP_ResultTV_C");
static_assert(offsetof(ABP_ResultTV_C, UberGraphFrame) == 0x000298, "Member 'ABP_ResultTV_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, PageText) == 0x0002A0, "Member 'ABP_ResultTV_C::PageText' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, RecapWidget) == 0x0002A8, "Member 'ABP_ResultTV_C::RecapWidget' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, RecapParent) == 0x0002B0, "Member 'ABP_ResultTV_C::RecapParent' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, MainCollision) == 0x0002B8, "Member 'ABP_ResultTV_C::MainCollision' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, TextRender) == 0x0002C0, "Member 'ABP_ResultTV_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, ResultsPendingParent) == 0x0002C8, "Member 'ABP_ResultTV_C::ResultsPendingParent' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, TVMesh) == 0x0002D0, "Member 'ABP_ResultTV_C::TVMesh' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_ResultTV_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, MosaicElements) == 0x0002E0, "Member 'ABP_ResultTV_C::MosaicElements' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, MosaicSelection) == 0x0002F0, "Member 'ABP_ResultTV_C::MosaicSelection' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, NextPageBtn) == 0x0002F8, "Member 'ABP_ResultTV_C::NextPageBtn' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, PrevPageBtn) == 0x000300, "Member 'ABP_ResultTV_C::PrevPageBtn' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, GameState) == 0x000308, "Member 'ABP_ResultTV_C::GameState' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, Captures) == 0x000310, "Member 'ABP_ResultTV_C::Captures' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, ResultsPending) == 0x000320, "Member 'ABP_ResultTV_C::ResultsPending' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, RecapInProgress) == 0x000321, "Member 'ABP_ResultTV_C::RecapInProgress' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, MosaicEnabled) == 0x000322, "Member 'ABP_ResultTV_C::MosaicEnabled' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, MaxPage) == 0x000324, "Member 'ABP_ResultTV_C::MaxPage' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, MosaicPage) == 0x000328, "Member 'ABP_ResultTV_C::MosaicPage' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, MosaicSelectionCapture) == 0x000330, "Member 'ABP_ResultTV_C::MosaicSelectionCapture' has a wrong offset!");
static_assert(offsetof(ABP_ResultTV_C, OnSelectionChanged) == 0x000370, "Member 'ABP_ResultTV_C::OnSelectionChanged' has a wrong offset!");

}

