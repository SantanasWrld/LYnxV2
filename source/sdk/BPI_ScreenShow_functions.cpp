#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ScreenShow

#include "Basic.hpp"

#include "BPI_ScreenShow_classes.hpp"
#include "BPI_ScreenShow_parameters.hpp"


namespace SDK
{

// Function BPI_ScreenShow.BPI_ScreenShow_C.ClearScreen
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_ScreenShow_C::ClearScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_ScreenShow_C", "ClearScreen");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_ScreenShow.BPI_ScreenShow_C.SelectScreenShot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Screenshot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ScreenShow_C::SelectScreenShot(class UTexture2D* Screenshot, int32 Score, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_ScreenShow_C", "SelectScreenShot");

	Params::BPI_ScreenShow_C_SelectScreenShot Parms{};

	Parms.Screenshot = Screenshot;
	Parms.Score = Score;
	Parms.Index_0 = Index_0;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_ScreenShow.BPI_ScreenShow_C.ShowOnScreen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Buttons_Newsvan                       ButtonPressed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ScreenShow_C::ShowOnScreen(E_Buttons_Newsvan ButtonPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_ScreenShow_C", "ShowOnScreen");

	Params::BPI_ScreenShow_C_ShowOnScreen Parms{};

	Parms.ButtonPressed = ButtonPressed;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

