#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Inventory

#include "Basic.hpp"

#include "W_Inventory_classes.hpp"
#include "W_Inventory_parameters.hpp"


namespace SDK
{

// Function W_Inventory.W_Inventory_C.CheckItemWidgetsCount
// (BlueprintCallable, BlueprintEvent)

void UW_Inventory_C::CheckItemWidgetsCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "CheckItemWidgetsCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Inventory.W_Inventory_C.CreateItemWidgets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Inventory_C::CreateItemWidgets(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "CreateItemWidgets");

	Params::W_Inventory_C_CreateItemWidgets Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Inventory.W_Inventory_C.DeleteItemWidgets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Inventory_C::DeleteItemWidgets(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "DeleteItemWidgets");

	Params::W_Inventory_C_DeleteItemWidgets Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Inventory.W_Inventory_C.ExecuteUbergraph_W_Inventory
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Inventory_C::ExecuteUbergraph_W_Inventory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "ExecuteUbergraph_W_Inventory");

	Params::W_Inventory_C_ExecuteUbergraph_W_Inventory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Inventory.W_Inventory_C.GetInventoryItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_InventoryItem*                ItemInfo                                               (Parm, OutParm, HasGetValueTypeHash)
// class ABP_InventoryItem_C**             Item                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_Inventory_C::GetInventoryItem(int32 Index_0, struct FS_InventoryItem* ItemInfo, class ABP_InventoryItem_C** Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "GetInventoryItem");

	Params::W_Inventory_C_GetInventoryItem Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemInfo != nullptr)
		*ItemInfo = std::move(Parms.ItemInfo);

	if (Item != nullptr)
		*Item = Parms.Item;
}


// Function W_Inventory.W_Inventory_C.GetItemInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_InventoryItem_C*              Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            InfoText                                               (Parm, OutParm)

void UW_Inventory_C::GetItemInfo(class ABP_InventoryItem_C* Item, class FText* InfoText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "GetItemInfo");

	Params::W_Inventory_C_GetItemInfo Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (InfoText != nullptr)
		*InfoText = std::move(Parms.InfoText);
}


// Function W_Inventory.W_Inventory_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Inventory_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Inventory.W_Inventory_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Inventory_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "Tick");

	Params::W_Inventory_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Inventory.W_Inventory_C.UpdateInputActions
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_InventoryItem_C*              Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_Inventory_C::UpdateInputActions(class ABP_InventoryItem_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Inventory_C", "UpdateInputActions");

	Params::W_Inventory_C_UpdateInputActions Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}

}

