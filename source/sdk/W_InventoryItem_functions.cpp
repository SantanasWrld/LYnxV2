#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InventoryItem

#include "Basic.hpp"

#include "W_InventoryItem_classes.hpp"
#include "W_InventoryItem_parameters.hpp"


namespace SDK
{

// Function W_InventoryItem.W_InventoryItem_C.ExecuteUbergraph_W_InventoryItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InventoryItem_C::ExecuteUbergraph_W_InventoryItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InventoryItem_C", "ExecuteUbergraph_W_InventoryItem");

	Params::W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InventoryItem.W_InventoryItem_C.GetProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InventoryItem_C::GetProgress(double* Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InventoryItem_C", "GetProgress");

	Params::W_InventoryItem_C_GetProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}


// Function W_InventoryItem.W_InventoryItem_C.InitProgressBar
// (BlueprintCallable, BlueprintEvent)

void UW_InventoryItem_C::InitProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InventoryItem_C", "InitProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_InventoryItem.W_InventoryItem_C.SetItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_InventoryItem&          ItemInfo_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class ABP_InventoryItem_C*              Item_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UW_InventoryItem_C::SetItem(const struct FS_InventoryItem& ItemInfo_0, class ABP_InventoryItem_C* Item_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InventoryItem_C", "SetItem");

	Params::W_InventoryItem_C_SetItem Parms{};

	Parms.ItemInfo_0 = std::move(ItemInfo_0);
	Parms.Item_0 = Item_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InventoryItem.W_InventoryItem_C.SetProgressBar
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InventoryItem_C::SetProgressBar(double Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InventoryItem_C", "SetProgressBar");

	Params::W_InventoryItem_C_SetProgressBar Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InventoryItem.W_InventoryItem_C.SetSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSelected_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InventoryItem_C::SetSelected(bool IsSelected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InventoryItem_C", "SetSelected");

	Params::W_InventoryItem_C_SetSelected Parms{};

	Parms.IsSelected_0 = IsSelected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InventoryItem.W_InventoryItem_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InventoryItem_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InventoryItem_C", "Tick");

	Params::W_InventoryItem_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InventoryItem.W_InventoryItem_C.UpdateTexture
// (BlueprintCallable, BlueprintEvent)

void UW_InventoryItem_C::UpdateTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InventoryItem_C", "UpdateTexture");

	UObject::ProcessEvent(Func, nullptr);
}

}

