#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Infected

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_PlayerAvatar_structs.hpp"
#include "BP_Parent_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Infected.BP_Infected_C
// 0x00C0 (0x0B50 - 0x0A90)
class ABP_Infected_C final : public ABP_Parent_Enemy_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Infected_C;                      // 0x0A88(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 HeadMesh;                                          // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Insect;                                            // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                InfectedCharacter;                                 // 0x0AA0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_PlayerAvatar                        Avatar;                                            // 0x0AA8(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void CopyAvatar(const struct FS_PlayerAvatar& Avatar_0);
	void CopyHiddenBones(class USkeletalMeshComponent* Mesh_0);
	void ExecuteUbergraph_BP_Infected(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Infected_C">();
	}
	static class ABP_Infected_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Infected_C>();
	}
};
static_assert(alignof(ABP_Infected_C) == 0x000010, "Wrong alignment on ABP_Infected_C");
static_assert(sizeof(ABP_Infected_C) == 0x000B50, "Wrong size on ABP_Infected_C");
static_assert(offsetof(ABP_Infected_C, UberGraphFrame_BP_Infected_C) == 0x000A88, "Member 'ABP_Infected_C::UberGraphFrame_BP_Infected_C' has a wrong offset!");
static_assert(offsetof(ABP_Infected_C, HeadMesh) == 0x000A90, "Member 'ABP_Infected_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(ABP_Infected_C, Insect) == 0x000A98, "Member 'ABP_Infected_C::Insect' has a wrong offset!");
static_assert(offsetof(ABP_Infected_C, InfectedCharacter) == 0x000AA0, "Member 'ABP_Infected_C::InfectedCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Infected_C, Avatar) == 0x000AA8, "Member 'ABP_Infected_C::Avatar' has a wrong offset!");

}

