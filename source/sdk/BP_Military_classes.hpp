#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Military

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_PlayerAvatar_structs.hpp"
#include "BP_Parent_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Military.BP_Military_C
// 0x0110 (0x0BA0 - 0x0A90)
class ABP_Military_C : public ABP_Parent_Enemy_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Military_C;                      // 0x0A88(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       PlayerDetector;                                    // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_DeathFaceAnims_C*                  DeathFaceAnims;                                    // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HeadMesh;                                          // 0x0AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Weapon;                                            // 0x0AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShooting;                                        // 0x0AB0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB1[0x7];                                      // 0x0AB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerAvatar                        Avatar;                                            // 0x0AB8(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsTalking;                                         // 0x0B58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              ShootingVoiceSound;                                // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ShootingVoiceDuration;                             // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ShootingVoiceCooldown;                             // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ShootingVoiceChance;                               // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              JournalistVoiceSound;                              // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        JournalistVoiceDuration;                           // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JournalistVoiceCooldown;                           // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JournalistVoiceChance;                             // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void IsAiming(bool* Aiming);
	void CanShoot(bool* Value);
	void SetAiming(bool Value);
	void ReceiveBeginPlay();
	void Shoot(class AActor* TargetActor);
	void MilitaryKilled__All_(class ABP_KillableCharacter_C* KilledCharacter, class AActor* Killer);
	void OnRep_IsShooting();
	void PlayVoiceSound(class USoundCue* Sound, float Duration);
	void OnRep_IsAttacking();
	void BndEvt__BP_Military_PlayerDetector_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_BP_Military(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Military_C">();
	}
	static class ABP_Military_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Military_C>();
	}
};
static_assert(alignof(ABP_Military_C) == 0x000010, "Wrong alignment on ABP_Military_C");
static_assert(sizeof(ABP_Military_C) == 0x000BA0, "Wrong size on ABP_Military_C");
static_assert(offsetof(ABP_Military_C, UberGraphFrame_BP_Military_C) == 0x000A88, "Member 'ABP_Military_C::UberGraphFrame_BP_Military_C' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, PlayerDetector) == 0x000A90, "Member 'ABP_Military_C::PlayerDetector' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, DeathFaceAnims) == 0x000A98, "Member 'ABP_Military_C::DeathFaceAnims' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, HeadMesh) == 0x000AA0, "Member 'ABP_Military_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, Weapon) == 0x000AA8, "Member 'ABP_Military_C::Weapon' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, IsShooting) == 0x000AB0, "Member 'ABP_Military_C::IsShooting' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, Avatar) == 0x000AB8, "Member 'ABP_Military_C::Avatar' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, IsTalking) == 0x000B58, "Member 'ABP_Military_C::IsTalking' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, ShootingVoiceSound) == 0x000B60, "Member 'ABP_Military_C::ShootingVoiceSound' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, ShootingVoiceDuration) == 0x000B68, "Member 'ABP_Military_C::ShootingVoiceDuration' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, ShootingVoiceCooldown) == 0x000B70, "Member 'ABP_Military_C::ShootingVoiceCooldown' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, ShootingVoiceChance) == 0x000B78, "Member 'ABP_Military_C::ShootingVoiceChance' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, JournalistVoiceSound) == 0x000B80, "Member 'ABP_Military_C::JournalistVoiceSound' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, JournalistVoiceDuration) == 0x000B88, "Member 'ABP_Military_C::JournalistVoiceDuration' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, JournalistVoiceCooldown) == 0x000B90, "Member 'ABP_Military_C::JournalistVoiceCooldown' has a wrong offset!");
static_assert(offsetof(ABP_Military_C, JournalistVoiceChance) == 0x000B98, "Member 'ABP_Military_C::JournalistVoiceChance' has a wrong offset!");

}

