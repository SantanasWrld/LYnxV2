#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NavigationPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NavigationPoint.BP_NavigationPoint_C
// 0x0030 (0x02C8 - 0x0298)
class ABP_NavigationPoint_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   EditorVolumeRendering;                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    EditorIconRendering;                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InteriorVolume_C*                   InteriorVolume;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_NavigationPoint(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NavigationPoint_C">();
	}
	static class ABP_NavigationPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NavigationPoint_C>();
	}
};
static_assert(alignof(ABP_NavigationPoint_C) == 0x000008, "Wrong alignment on ABP_NavigationPoint_C");
static_assert(sizeof(ABP_NavigationPoint_C) == 0x0002C8, "Wrong size on ABP_NavigationPoint_C");
static_assert(offsetof(ABP_NavigationPoint_C, UberGraphFrame) == 0x000298, "Member 'ABP_NavigationPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NavigationPoint_C, EditorVolumeRendering) == 0x0002A0, "Member 'ABP_NavigationPoint_C::EditorVolumeRendering' has a wrong offset!");
static_assert(offsetof(ABP_NavigationPoint_C, EditorIconRendering) == 0x0002A8, "Member 'ABP_NavigationPoint_C::EditorIconRendering' has a wrong offset!");
static_assert(offsetof(ABP_NavigationPoint_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_NavigationPoint_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NavigationPoint_C, Radius) == 0x0002B8, "Member 'ABP_NavigationPoint_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_NavigationPoint_C, InteriorVolume) == 0x0002C0, "Member 'ABP_NavigationPoint_C::InteriorVolume' has a wrong offset!");

}

