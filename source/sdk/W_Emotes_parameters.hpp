#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Emotes

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "S_Emote_structs.hpp"


namespace SDK::Params
{

// Function W_Emotes.W_Emotes_C.ExecuteUbergraph_W_Emotes
// 0x0098 (0x0098 - 0x0000)
struct W_Emotes_C_ExecuteUbergraph_W_Emotes final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                CallFunc_GetPlayer_Player;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmote_Found;                           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Emote                               CallFunc_GetEmote_Emote;                           // 0x0060(0x0028)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Emotes_C_ExecuteUbergraph_W_Emotes) == 0x000008, "Wrong alignment on W_Emotes_C_ExecuteUbergraph_W_Emotes");
static_assert(sizeof(W_Emotes_C_ExecuteUbergraph_W_Emotes) == 0x000098, "Wrong size on W_Emotes_C_ExecuteUbergraph_W_Emotes");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, EntryPoint) == 0x000000, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, K2Node_Event_MyGeometry) == 0x000010, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, K2Node_Event_InDeltaTime) == 0x000048, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, CallFunc_GetPlayer_Player) == 0x000050, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::CallFunc_GetPlayer_Player' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000059, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, CallFunc_GetEmote_Found) == 0x00005A, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::CallFunc_GetEmote_Found' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, CallFunc_GetEmote_Emote) == 0x000060, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::CallFunc_GetEmote_Emote' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, Temp_bool_Has_Been_Initd_Variable) == 0x000088, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, Temp_bool_IsClosed_Variable) == 0x000089, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_ExecuteUbergraph_W_Emotes, CallFunc_PlayAnimation_ReturnValue_1) == 0x000090, "Member 'W_Emotes_C_ExecuteUbergraph_W_Emotes::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function W_Emotes.W_Emotes_C.GetPlayer
// 0x0020 (0x0020 - 0x0000)
struct W_Emotes_C_GetPlayer final
{
public:
	class ABP_UPPlayerCharacter_C*                Player_0;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Emotes_C_GetPlayer) == 0x000008, "Wrong alignment on W_Emotes_C_GetPlayer");
static_assert(sizeof(W_Emotes_C_GetPlayer) == 0x000020, "Wrong size on W_Emotes_C_GetPlayer");
static_assert(offsetof(W_Emotes_C_GetPlayer, Player_0) == 0x000000, "Member 'W_Emotes_C_GetPlayer::Player_0' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_GetPlayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'W_Emotes_C_GetPlayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_GetPlayer, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000010, "Member 'W_Emotes_C_GetPlayer::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_GetPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_Emotes_C_GetPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_GetPlayer, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'W_Emotes_C_GetPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_GetPlayer, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'W_Emotes_C_GetPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_Emotes.W_Emotes_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Emotes_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Emotes_C_Tick) == 0x000004, "Wrong alignment on W_Emotes_C_Tick");
static_assert(sizeof(W_Emotes_C_Tick) == 0x00003C, "Wrong size on W_Emotes_C_Tick");
static_assert(offsetof(W_Emotes_C_Tick, MyGeometry) == 0x000000, "Member 'W_Emotes_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Emotes_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Emotes_C_Tick::InDeltaTime' has a wrong offset!");

}

