#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MainHUD

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_MainHUD.W_MainHUD_C.ExecuteUbergraph_W_MainHUD
// 0x004C (0x004C - 0x0000)
struct W_MainHUD_C_ExecuteUbergraph_W_MainHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldInteractionBeVisible_Visible;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldInventoryBeVIsible_Visible;         // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD) == 0x000004, "Wrong alignment on W_MainHUD_C_ExecuteUbergraph_W_MainHUD");
static_assert(sizeof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD) == 0x00004C, "Wrong size on W_MainHUD_C_ExecuteUbergraph_W_MainHUD");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, EntryPoint) == 0x000000, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, Temp_bool_Variable) == 0x000004, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, Temp_byte_Variable) == 0x000005, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, Temp_byte_Variable_1) == 0x000006, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, Temp_bool_Variable_1) == 0x000007, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, Temp_byte_Variable_2) == 0x000008, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, Temp_byte_Variable_3) == 0x000009, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, K2Node_Event_MyGeometry) == 0x00000C, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, K2Node_Event_InDeltaTime) == 0x000044, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, CallFunc_ShouldInteractionBeVisible_Visible) == 0x000048, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::CallFunc_ShouldInteractionBeVisible_Visible' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, K2Node_Select_Default) == 0x000049, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, CallFunc_ShouldInventoryBeVIsible_Visible) == 0x00004A, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::CallFunc_ShouldInventoryBeVIsible_Visible' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ExecuteUbergraph_W_MainHUD, K2Node_Select_Default_1) == 0x00004B, "Member 'W_MainHUD_C_ExecuteUbergraph_W_MainHUD::K2Node_Select_Default_1' has a wrong offset!");

// Function W_MainHUD.W_MainHUD_C.GetLocalPlayer
// 0x0020 (0x0020 - 0x0000)
struct W_MainHUD_C_GetLocalPlayer final
{
public:
	class ABP_UPPlayerCharacter_C*                LocalPlayer_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainHUD_C_GetLocalPlayer) == 0x000008, "Wrong alignment on W_MainHUD_C_GetLocalPlayer");
static_assert(sizeof(W_MainHUD_C_GetLocalPlayer) == 0x000020, "Wrong size on W_MainHUD_C_GetLocalPlayer");
static_assert(offsetof(W_MainHUD_C_GetLocalPlayer, LocalPlayer_0) == 0x000000, "Member 'W_MainHUD_C_GetLocalPlayer::LocalPlayer_0' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_GetLocalPlayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'W_MainHUD_C_GetLocalPlayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_GetLocalPlayer, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000010, "Member 'W_MainHUD_C_GetLocalPlayer::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_GetLocalPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_MainHUD_C_GetLocalPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_GetLocalPlayer, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'W_MainHUD_C_GetLocalPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_MainHUD.W_MainHUD_C.ShouldInteractionBeVisible
// 0x0028 (0x0028 - 0x0000)
struct W_MainHUD_C_ShouldInteractionBeVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                CallFunc_GetLocalPlayer_LocalPlayer;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Cameroid_C*                         K2Node_DynamicCast_AsBP_Cameroid;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainHUD_C_ShouldInteractionBeVisible) == 0x000008, "Wrong alignment on W_MainHUD_C_ShouldInteractionBeVisible");
static_assert(sizeof(W_MainHUD_C_ShouldInteractionBeVisible) == 0x000028, "Wrong size on W_MainHUD_C_ShouldInteractionBeVisible");
static_assert(offsetof(W_MainHUD_C_ShouldInteractionBeVisible, Visible) == 0x000000, "Member 'W_MainHUD_C_ShouldInteractionBeVisible::Visible' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ShouldInteractionBeVisible, CallFunc_GetLocalPlayer_LocalPlayer) == 0x000008, "Member 'W_MainHUD_C_ShouldInteractionBeVisible::CallFunc_GetLocalPlayer_LocalPlayer' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ShouldInteractionBeVisible, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_MainHUD_C_ShouldInteractionBeVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ShouldInteractionBeVisible, K2Node_DynamicCast_AsBP_Cameroid) == 0x000018, "Member 'W_MainHUD_C_ShouldInteractionBeVisible::K2Node_DynamicCast_AsBP_Cameroid' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ShouldInteractionBeVisible, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_MainHUD_C_ShouldInteractionBeVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ShouldInteractionBeVisible, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'W_MainHUD_C_ShouldInteractionBeVisible::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_MainHUD.W_MainHUD_C.ShouldInventoryBeVIsible
// 0x0018 (0x0018 - 0x0000)
struct W_MainHUD_C_ShouldInventoryBeVIsible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                CallFunc_GetLocalPlayer_LocalPlayer;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainHUD_C_ShouldInventoryBeVIsible) == 0x000008, "Wrong alignment on W_MainHUD_C_ShouldInventoryBeVIsible");
static_assert(sizeof(W_MainHUD_C_ShouldInventoryBeVIsible) == 0x000018, "Wrong size on W_MainHUD_C_ShouldInventoryBeVIsible");
static_assert(offsetof(W_MainHUD_C_ShouldInventoryBeVIsible, Visible) == 0x000000, "Member 'W_MainHUD_C_ShouldInventoryBeVIsible::Visible' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ShouldInventoryBeVIsible, CallFunc_GetLocalPlayer_LocalPlayer) == 0x000008, "Member 'W_MainHUD_C_ShouldInventoryBeVIsible::CallFunc_GetLocalPlayer_LocalPlayer' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ShouldInventoryBeVIsible, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_MainHUD_C_ShouldInventoryBeVIsible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_ShouldInventoryBeVIsible, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'W_MainHUD_C_ShouldInventoryBeVIsible::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_MainHUD.W_MainHUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_MainHUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainHUD_C_Tick) == 0x000004, "Wrong alignment on W_MainHUD_C_Tick");
static_assert(sizeof(W_MainHUD_C_Tick) == 0x00003C, "Wrong size on W_MainHUD_C_Tick");
static_assert(offsetof(W_MainHUD_C_Tick, MyGeometry) == 0x000000, "Member 'W_MainHUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MainHUD_C_Tick, InDeltaTime) == 0x000038, "Member 'W_MainHUD_C_Tick::InDeltaTime' has a wrong offset!");

}

