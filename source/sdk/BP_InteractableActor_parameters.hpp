#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableActor

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_InteractableActor.BP_InteractableActor_C.Interact
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableActor_C_Interact final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableActor_C_Interact) == 0x000008, "Wrong alignment on BP_InteractableActor_C_Interact");
static_assert(sizeof(BP_InteractableActor_C_Interact) == 0x000008, "Wrong size on BP_InteractableActor_C_Interact");
static_assert(offsetof(BP_InteractableActor_C_Interact, Player) == 0x000000, "Member 'BP_InteractableActor_C_Interact::Player' has a wrong offset!");

// Function BP_InteractableActor.BP_InteractableActor_C.ExecuteUbergraph_BP_InteractableActor
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_Event_Player;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor) == 0x000008, "Wrong alignment on BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor");
static_assert(sizeof(BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor) == 0x000010, "Wrong size on BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor");
static_assert(offsetof(BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor, EntryPoint) == 0x000000, "Member 'BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor, K2Node_Event_Player) == 0x000008, "Member 'BP_InteractableActor_C_ExecuteUbergraph_BP_InteractableActor::K2Node_Event_Player' has a wrong offset!");

// Function BP_InteractableActor.BP_InteractableActor_C.GetInteractDuration
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableActor_C_GetInteractDuration final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableActor_C_GetInteractDuration) == 0x000008, "Wrong alignment on BP_InteractableActor_C_GetInteractDuration");
static_assert(sizeof(BP_InteractableActor_C_GetInteractDuration) == 0x000008, "Wrong size on BP_InteractableActor_C_GetInteractDuration");
static_assert(offsetof(BP_InteractableActor_C_GetInteractDuration, Duration) == 0x000000, "Member 'BP_InteractableActor_C_GetInteractDuration::Duration' has a wrong offset!");

// Function BP_InteractableActor.BP_InteractableActor_C.GetInteractDistance
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableActor_C_GetInteractDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableActor_C_GetInteractDistance) == 0x000008, "Wrong alignment on BP_InteractableActor_C_GetInteractDistance");
static_assert(sizeof(BP_InteractableActor_C_GetInteractDistance) == 0x000008, "Wrong size on BP_InteractableActor_C_GetInteractDistance");
static_assert(offsetof(BP_InteractableActor_C_GetInteractDistance, Distance) == 0x000000, "Member 'BP_InteractableActor_C_GetInteractDistance::Distance' has a wrong offset!");

// Function BP_InteractableActor.BP_InteractableActor_C.GetInteractText
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableActor_C_GetInteractText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_InteractableActor_C_GetInteractText) == 0x000008, "Wrong alignment on BP_InteractableActor_C_GetInteractText");
static_assert(sizeof(BP_InteractableActor_C_GetInteractText) == 0x000018, "Wrong size on BP_InteractableActor_C_GetInteractText");
static_assert(offsetof(BP_InteractableActor_C_GetInteractText, Text) == 0x000000, "Member 'BP_InteractableActor_C_GetInteractText::Text' has a wrong offset!");

// Function BP_InteractableActor.BP_InteractableActor_C.GetInteractNoise
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractableActor_C_GetInteractNoise final
{
public:
	bool                                          NoiseOnInteract;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NoiseRange_0;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableActor_C_GetInteractNoise) == 0x000008, "Wrong alignment on BP_InteractableActor_C_GetInteractNoise");
static_assert(sizeof(BP_InteractableActor_C_GetInteractNoise) == 0x000010, "Wrong size on BP_InteractableActor_C_GetInteractNoise");
static_assert(offsetof(BP_InteractableActor_C_GetInteractNoise, NoiseOnInteract) == 0x000000, "Member 'BP_InteractableActor_C_GetInteractNoise::NoiseOnInteract' has a wrong offset!");
static_assert(offsetof(BP_InteractableActor_C_GetInteractNoise, NoiseRange_0) == 0x000008, "Member 'BP_InteractableActor_C_GetInteractNoise::NoiseRange_0' has a wrong offset!");

}

