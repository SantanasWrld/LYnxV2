#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_HarmTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "E_Dismemberment_structs.hpp"
#include "E_DeathType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_HarmTarget.BTT_HarmTarget_C
// 0x0050 (0x00F8 - 0x00A8)
class UBTT_HarmTarget_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 TargetKey;                                         // 0x00B0(0x0028)(Edit, BlueprintVisible)
	bool                                          Ragdoll;                                           // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Force;                                             // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Dismemberment                               Dismemberment;                                     // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeathType                                   DeathType;                                         // 0x00E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DamageOverride;                                    // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffset;                                           // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetDamage(class ABP_Parent_Enemy_C* Killer, int32* Damage);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BTT_HarmTarget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_HarmTarget_C">();
	}
	static class UBTT_HarmTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_HarmTarget_C>();
	}
};
static_assert(alignof(UBTT_HarmTarget_C) == 0x000008, "Wrong alignment on UBTT_HarmTarget_C");
static_assert(sizeof(UBTT_HarmTarget_C) == 0x0000F8, "Wrong size on UBTT_HarmTarget_C");
static_assert(offsetof(UBTT_HarmTarget_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_HarmTarget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_HarmTarget_C, TargetKey) == 0x0000B0, "Member 'UBTT_HarmTarget_C::TargetKey' has a wrong offset!");
static_assert(offsetof(UBTT_HarmTarget_C, Ragdoll) == 0x0000D8, "Member 'UBTT_HarmTarget_C::Ragdoll' has a wrong offset!");
static_assert(offsetof(UBTT_HarmTarget_C, Force) == 0x0000E0, "Member 'UBTT_HarmTarget_C::Force' has a wrong offset!");
static_assert(offsetof(UBTT_HarmTarget_C, Dismemberment) == 0x0000E8, "Member 'UBTT_HarmTarget_C::Dismemberment' has a wrong offset!");
static_assert(offsetof(UBTT_HarmTarget_C, DeathType) == 0x0000E9, "Member 'UBTT_HarmTarget_C::DeathType' has a wrong offset!");
static_assert(offsetof(UBTT_HarmTarget_C, DamageOverride) == 0x0000EC, "Member 'UBTT_HarmTarget_C::DamageOverride' has a wrong offset!");
static_assert(offsetof(UBTT_HarmTarget_C, ZOffset) == 0x0000F0, "Member 'UBTT_HarmTarget_C::ZOffset' has a wrong offset!");

}

