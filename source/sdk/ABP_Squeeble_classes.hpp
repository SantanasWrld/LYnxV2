#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Squeeble

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_Squeeble_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Squeeble.ABP_Squeeble_C
// 0x0330 (0x0680 - 0x0350)
class UABP_Squeeble_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Squeeble::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                 // 0x0358(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0368(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0370(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0378(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0410(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0438(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0480(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x04A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x04E8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0508(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0578(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0598(0x00C8)()
	class ABP_Squeeble_C*                         Squeeble;                                          // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Direction;                                         // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHiding;                                          // 0x0678(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJumping;                                         // 0x0679(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_Squeeble(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Squeeble_C">();
	}
	static class UABP_Squeeble_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Squeeble_C>();
	}
};
static_assert(alignof(UABP_Squeeble_C) == 0x000010, "Wrong alignment on UABP_Squeeble_C");
static_assert(sizeof(UABP_Squeeble_C) == 0x000680, "Wrong size on UABP_Squeeble_C");
static_assert(offsetof(UABP_Squeeble_C, UberGraphFrame) == 0x000350, "Member 'UABP_Squeeble_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_Squeeble_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimBlueprintExtension_PropertyAccess) == 0x000368, "Member 'UABP_Squeeble_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimBlueprintExtension_Base) == 0x000370, "Member 'UABP_Squeeble_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_Root) == 0x000378, "Member 'UABP_Squeeble_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_TransitionResult_3) == 0x000398, "Member 'UABP_Squeeble_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_TransitionResult_2) == 0x0003C0, "Member 'UABP_Squeeble_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_TransitionResult_1) == 0x0003E8, "Member 'UABP_Squeeble_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_TransitionResult) == 0x000410, "Member 'UABP_Squeeble_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_SequencePlayer_1) == 0x000438, "Member 'UABP_Squeeble_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_StateResult_2) == 0x000480, "Member 'UABP_Squeeble_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_SequencePlayer) == 0x0004A0, "Member 'UABP_Squeeble_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_StateResult_1) == 0x0004E8, "Member 'UABP_Squeeble_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_BlendSpacePlayer) == 0x000508, "Member 'UABP_Squeeble_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_StateResult) == 0x000578, "Member 'UABP_Squeeble_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, AnimGraphNode_StateMachine) == 0x000598, "Member 'UABP_Squeeble_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, Squeeble) == 0x000660, "Member 'UABP_Squeeble_C::Squeeble' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, Speed) == 0x000668, "Member 'UABP_Squeeble_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, Direction) == 0x000670, "Member 'UABP_Squeeble_C::Direction' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, IsHiding) == 0x000678, "Member 'UABP_Squeeble_C::IsHiding' has a wrong offset!");
static_assert(offsetof(UABP_Squeeble_C, IsJumping) == 0x000679, "Member 'UABP_Squeeble_C::IsJumping' has a wrong offset!");

}

