#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_ScoringTagsComponent

#include "Basic.hpp"

#include "E_ScoringTag_structs.hpp"


namespace SDK::Params
{

// Function BPC_ScoringTagsComponent.BPC_ScoringTagsComponent_C.ComputeTags
// 0x0038 (0x0038 - 0x0000)
struct BPC_ScoringTagsComponent_C_ComputeTags final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ScoringVolume_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ScoringTag                                  CallFunc_Array_Get_Item_1;                         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ScoringTagsComponent_C_ComputeTags) == 0x000008, "Wrong alignment on BPC_ScoringTagsComponent_C_ComputeTags");
static_assert(sizeof(BPC_ScoringTagsComponent_C_ComputeTags) == 0x000038, "Wrong size on BPC_ScoringTagsComponent_C_ComputeTags");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Array_Get_Item) == 0x000018, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Array_Get_Item_1) == 0x000025, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Less_IntInt_ReturnValue_1) == 0x00002C, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ComputeTags, CallFunc_Array_Contains_ReturnValue) == 0x000034, "Member 'BPC_ScoringTagsComponent_C_ComputeTags::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BPC_ScoringTagsComponent.BPC_ScoringTagsComponent_C.EntersVolume
// 0x0010 (0x0010 - 0x0000)
struct BPC_ScoringTagsComponent_C_EntersVolume final
{
public:
	class ABP_ScoringVolume_C*                    Volume;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ScoringTagsComponent_C_EntersVolume) == 0x000008, "Wrong alignment on BPC_ScoringTagsComponent_C_EntersVolume");
static_assert(sizeof(BPC_ScoringTagsComponent_C_EntersVolume) == 0x000010, "Wrong size on BPC_ScoringTagsComponent_C_EntersVolume");
static_assert(offsetof(BPC_ScoringTagsComponent_C_EntersVolume, Volume) == 0x000000, "Member 'BPC_ScoringTagsComponent_C_EntersVolume::Volume' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_EntersVolume, CallFunc_Array_Contains_ReturnValue) == 0x000008, "Member 'BPC_ScoringTagsComponent_C_EntersVolume::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_EntersVolume, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BPC_ScoringTagsComponent_C_EntersVolume::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPC_ScoringTagsComponent.BPC_ScoringTagsComponent_C.ExitVolume
// 0x0010 (0x0010 - 0x0000)
struct BPC_ScoringTagsComponent_C_ExitVolume final
{
public:
	class ABP_ScoringVolume_C*                    Volume;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_ScoringTagsComponent_C_ExitVolume) == 0x000008, "Wrong alignment on BPC_ScoringTagsComponent_C_ExitVolume");
static_assert(sizeof(BPC_ScoringTagsComponent_C_ExitVolume) == 0x000010, "Wrong size on BPC_ScoringTagsComponent_C_ExitVolume");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ExitVolume, Volume) == 0x000000, "Member 'BPC_ScoringTagsComponent_C_ExitVolume::Volume' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ExitVolume, CallFunc_Array_Contains_ReturnValue) == 0x000008, "Member 'BPC_ScoringTagsComponent_C_ExitVolume::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_ScoringTagsComponent_C_ExitVolume, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'BPC_ScoringTagsComponent_C_ExitVolume::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BPC_ScoringTagsComponent.BPC_ScoringTagsComponent_C.GetCurrentTags
// 0x0010 (0x0010 - 0x0000)
struct BPC_ScoringTagsComponent_C_GetCurrentTags final
{
public:
	TArray<E_ScoringTag>                          Tags_0;                                            // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPC_ScoringTagsComponent_C_GetCurrentTags) == 0x000008, "Wrong alignment on BPC_ScoringTagsComponent_C_GetCurrentTags");
static_assert(sizeof(BPC_ScoringTagsComponent_C_GetCurrentTags) == 0x000010, "Wrong size on BPC_ScoringTagsComponent_C_GetCurrentTags");
static_assert(offsetof(BPC_ScoringTagsComponent_C_GetCurrentTags, Tags_0) == 0x000000, "Member 'BPC_ScoringTagsComponent_C_GetCurrentTags::Tags_0' has a wrong offset!");

}

