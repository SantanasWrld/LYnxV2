#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VoiceChat

#include "Basic.hpp"

#include "BP_VoiceChat_classes.hpp"
#include "BP_VoiceChat_parameters.hpp"


namespace SDK
{

// Function BP_VoiceChat.BP_VoiceChat_C.CheckPreferedCaptureDevice
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::CheckPreferedCaptureDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "CheckPreferedCaptureDevice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.CleanupPlaybackSoundMix
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::CleanupPlaybackSoundMix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "CleanupPlaybackSoundMix");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_AddMediaSuccess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   mediaId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Dead_AddMediaSuccess(int32 mediaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_AddMediaSuccess");

	Params::BP_VoiceChat_C_Dead_AddMediaSuccess Parms{};

	Parms.mediaId = mediaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_Connect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Dead_Connect(const class FString& UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_Connect");

	Params::BP_VoiceChat_C_Dead_Connect Parms{};

	Parms.UserId = std::move(UserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_Disconnect
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Dead_Disconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_Disconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_JoinRoom
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Dead_JoinRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_JoinRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_MediaAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinPlaybackMedia*               Media                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UOdinJsonObject*                  properties                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Dead_MediaAdded(int64 peerId, class UOdinPlaybackMedia* Media, class UOdinJsonObject* properties, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_MediaAdded");

	Params::BP_VoiceChat_C_Dead_MediaAdded Parms{};

	Parms.peerId = peerId;
	Parms.Media = Media;
	Parms.properties = properties;
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_MediaRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinPlaybackMedia*               Media                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Dead_MediaRemoved(int64 peerId, class UOdinPlaybackMedia* Media, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_MediaRemoved");

	Params::BP_VoiceChat_C_Dead_MediaRemoved Parms{};

	Parms.peerId = peerId;
	Parms.Media = Media;
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_MutePlayerSpatial
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Dead_MutePlayerSpatial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_MutePlayerSpatial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_PeerJoined
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const TArray<uint8>&                    userData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Dead_PeerJoined(int64 peerId, const class FString& UserId, const TArray<uint8>& userData, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_PeerJoined");

	Params::BP_VoiceChat_C_Dead_PeerJoined Parms{};

	Parms.peerId = peerId;
	Parms.UserId = std::move(UserId);
	Parms.userData = std::move(userData);
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_PeerLeft
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Dead_PeerLeft(int64 peerId, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_PeerLeft");

	Params::BP_VoiceChat_C_Dead_PeerLeft Parms{};

	Parms.peerId = peerId;
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_RegisterToPeerEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Dead_RegisterToPeerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_RegisterToPeerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_RegsiterToMediaEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Dead_RegsiterToMediaEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_RegsiterToMediaEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Dead_RoomJoined
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    roomId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const TArray<uint8>&                    roomUserData                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    customer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int64                                   ownPeerId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    ownUserId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Dead_RoomJoined(const class FString& roomId, const TArray<uint8>& roomUserData, const class FString& customer, int64 ownPeerId, const class FString& ownUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Dead_RoomJoined");

	Params::BP_VoiceChat_C_Dead_RoomJoined Parms{};

	Parms.roomId = std::move(roomId);
	Parms.roomUserData = std::move(roomUserData);
	Parms.customer = std::move(customer);
	Parms.ownPeerId = ownPeerId;
	Parms.ownUserId = std::move(ownUserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.ExecuteUbergraph_BP_VoiceChat
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::ExecuteUbergraph_BP_VoiceChat(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "ExecuteUbergraph_BP_VoiceChat");

	Params::BP_VoiceChat_C_ExecuteUbergraph_BP_VoiceChat Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.GetCaptureDevices
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FOdinCaptureDeviceInfo>*  Devices                                                (Parm, OutParm)
// struct FOdinCaptureDeviceInfo*          CurrentDevice                                          (Parm, OutParm)

void ABP_VoiceChat_C::GetCaptureDevices(bool* Success, TArray<struct FOdinCaptureDeviceInfo>* Devices, struct FOdinCaptureDeviceInfo* CurrentDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "GetCaptureDevices");

	Params::BP_VoiceChat_C_GetCaptureDevices Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Devices != nullptr)
		*Devices = std::move(Parms.Devices);

	if (CurrentDevice != nullptr)
		*CurrentDevice = std::move(Parms.CurrentDevice);
}


// Function BP_VoiceChat.BP_VoiceChat_C.GetDeadOdinSynth
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UOdinSynthComponent**             Synth                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::GetDeadOdinSynth(const class FString& PlayerId, class UOdinSynthComponent** Synth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "GetDeadOdinSynth");

	Params::BP_VoiceChat_C_GetDeadOdinSynth Parms{};

	Parms.PlayerId = std::move(PlayerId);

	UObject::ProcessEvent(Func, &Parms);

	if (Synth != nullptr)
		*Synth = Parms.Synth;
}


// Function BP_VoiceChat.BP_VoiceChat_C.GetIsMicrophoneMuted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Muted                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::GetIsMicrophoneMuted(bool* Muted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "GetIsMicrophoneMuted");

	Params::BP_VoiceChat_C_GetIsMicrophoneMuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Muted != nullptr)
		*Muted = Parms.Muted;
}


// Function BP_VoiceChat.BP_VoiceChat_C.GetPeerOdinSynth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinSynthComponent**             OdinSynth                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::GetPeerOdinSynth(int64 peerId, class UOdinSynthComponent** OdinSynth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "GetPeerOdinSynth");

	Params::BP_VoiceChat_C_GetPeerOdinSynth Parms{};

	Parms.peerId = peerId;

	UObject::ProcessEvent(Func, &Parms);

	if (OdinSynth != nullptr)
		*OdinSynth = Parms.OdinSynth;
}


// Function BP_VoiceChat.BP_VoiceChat_C.GetPlayerWithId
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABP_UPPlayerCharacter_C**         Player                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::GetPlayerWithId(const class FString& PlayerId, class ABP_UPPlayerCharacter_C** Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "GetPlayerWithId");

	Params::BP_VoiceChat_C_GetPlayerWithId Parms{};

	Parms.PlayerId = std::move(PlayerId);

	UObject::ProcessEvent(Func, &Parms);

	if (Player != nullptr)
		*Player = Parms.Player;
}


// Function BP_VoiceChat.BP_VoiceChat_C.GetPlayerWithPeerId
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_UPPlayerCharacter_C**         Player                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::GetPlayerWithPeerId(int64 peerId, class ABP_UPPlayerCharacter_C** Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "GetPlayerWithPeerId");

	Params::BP_VoiceChat_C_GetPlayerWithPeerId Parms{};

	Parms.peerId = peerId;

	UObject::ProcessEvent(Func, &Parms);

	if (Player != nullptr)
		*Player = Parms.Player;
}


// Function BP_VoiceChat.BP_VoiceChat_C.InitPlaybackSoundMix
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::InitPlaybackSoundMix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "InitPlaybackSoundMix");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.InitWhenReady
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::InitWhenReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "InitWhenReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.IsPlayerMuted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Muted                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::IsPlayerMuted(int64 SteamID, bool* Muted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "IsPlayerMuted");

	Params::BP_VoiceChat_C_IsPlayerMuted Parms{};

	Parms.SteamID = SteamID;

	UObject::ProcessEvent(Func, &Parms);

	if (Muted != nullptr)
		*Muted = Parms.Muted;
}


// Function BP_VoiceChat.BP_VoiceChat_C.IsVoiceChatConnected
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Connected                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::IsVoiceChatConnected(bool* Connected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "IsVoiceChatConnected");

	Params::BP_VoiceChat_C_IsVoiceChatConnected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Connected != nullptr)
		*Connected = Parms.Connected;
}


// Function BP_VoiceChat.BP_VoiceChat_C.LoadSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::LoadSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "LoadSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.OnResponse_2545B4EC453CEBEAB61DD1AB86BB785F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::OnResponse_2545B4EC453CEBEAB61DD1AB86BB785F(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "OnResponse_2545B4EC453CEBEAB61DD1AB86BB785F");

	Params::BP_VoiceChat_C_OnResponse_2545B4EC453CEBEAB61DD1AB86BB785F Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.OnResponse_2ACA8CBA4227ACF8B5CAA9A5F58E75C7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::OnResponse_2ACA8CBA4227ACF8B5CAA9A5F58E75C7(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "OnResponse_2ACA8CBA4227ACF8B5CAA9A5F58E75C7");

	Params::BP_VoiceChat_C_OnResponse_2ACA8CBA4227ACF8B5CAA9A5F58E75C7 Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.OnResponse_36BAB3384C5B656231D02BB576D57068
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::OnResponse_36BAB3384C5B656231D02BB576D57068(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "OnResponse_36BAB3384C5B656231D02BB576D57068");

	Params::BP_VoiceChat_C_OnResponse_36BAB3384C5B656231D02BB576D57068 Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.OnResponse_427044EE489A4E1C9BEF93ABEAEC684B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::OnResponse_427044EE489A4E1C9BEF93ABEAEC684B(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "OnResponse_427044EE489A4E1C9BEF93ABEAEC684B");

	Params::BP_VoiceChat_C_OnResponse_427044EE489A4E1C9BEF93ABEAEC684B Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.OnResponse_43A297B8421C269F5D3136B2527C1D8D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::OnResponse_43A297B8421C269F5D3136B2527C1D8D(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "OnResponse_43A297B8421C269F5D3136B2527C1D8D");

	Params::BP_VoiceChat_C_OnResponse_43A297B8421C269F5D3136B2527C1D8D Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.OnResponse_8789FAF748932B57DC014C94724933F5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::OnResponse_8789FAF748932B57DC014C94724933F5(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "OnResponse_8789FAF748932B57DC014C94724933F5");

	Params::BP_VoiceChat_C_OnResponse_8789FAF748932B57DC014C94724933F5 Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.PlayerKilled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          KilledCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::PlayerKilled(class ABP_KillableCharacter_C* KilledCharacter, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "PlayerKilled");

	Params::BP_VoiceChat_C_PlayerKilled Parms{};

	Parms.KilledCharacter = KilledCharacter;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.PlayerSpawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player1                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::PlayerSpawned(class ABP_UPPlayerCharacter_C* Player1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "PlayerSpawned");

	Params::BP_VoiceChat_C_PlayerSpawned Parms{};

	Parms.Player1 = Player1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_AddMedia
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Radio_AddMedia()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_AddMedia");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_AddMediaSuccess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   mediaId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Radio_AddMediaSuccess(int32 mediaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_AddMediaSuccess");

	Params::BP_VoiceChat_C_Radio_AddMediaSuccess Parms{};

	Parms.mediaId = mediaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_Connect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Radio_Connect(const class FString& UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_Connect");

	Params::BP_VoiceChat_C_Radio_Connect Parms{};

	Parms.UserId = std::move(UserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_Disconnect
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Radio_Disconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_Disconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_JoinRoom
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Radio_JoinRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_JoinRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_MediaAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinPlaybackMedia*               Media                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UOdinJsonObject*                  properties                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Radio_MediaAdded(int64 peerId, class UOdinPlaybackMedia* Media, class UOdinJsonObject* properties, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_MediaAdded");

	Params::BP_VoiceChat_C_Radio_MediaAdded Parms{};

	Parms.peerId = peerId;
	Parms.Media = Media;
	Parms.properties = properties;
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_RoomJoined
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    roomId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const TArray<uint8>&                    roomUserData                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    customer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int64                                   ownPeerId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    ownUserId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Radio_RoomJoined(const class FString& roomId, const TArray<uint8>& roomUserData, const class FString& customer, int64 ownPeerId, const class FString& ownUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_RoomJoined");

	Params::BP_VoiceChat_C_Radio_RoomJoined Parms{};

	Parms.roomId = std::move(roomId);
	Parms.roomUserData = std::move(roomUserData);
	Parms.customer = std::move(customer);
	Parms.ownPeerId = ownPeerId;
	Parms.ownUserId = std::move(ownUserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_StartTransmiting
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Radio_StartTransmiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_StartTransmiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Radio_StopTransmiting
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Radio_StopTransmiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Radio_StopTransmiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_VoiceChat_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "ReceiveEndPlay");

	Params::BP_VoiceChat_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.RegisterKilledEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::RegisterKilledEvent(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "RegisterKilledEvent");

	Params::BP_VoiceChat_C_RegisterKilledEvent Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.RegisterKilledEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::RegisterKilledEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "RegisterKilledEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.SaveSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::SaveSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "SaveSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.ServerTravelStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DestinationMapName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::ServerTravelStarted(const class FString& DestinationMapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "ServerTravelStarted");

	Params::BP_VoiceChat_C_ServerTravelStarted Parms{};

	Parms.DestinationMapName = std::move(DestinationMapName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.SetCaptureDevice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             DeviceName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::SetCaptureDevice(class FName DeviceName, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "SetCaptureDevice");

	Params::BP_VoiceChat_C_SetCaptureDevice Parms{};

	Parms.DeviceName = DeviceName;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_VoiceChat.BP_VoiceChat_C.SetCaptureVolumeMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CaptureVolumeMultiplier_0                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::SetCaptureVolumeMultiplier(double CaptureVolumeMultiplier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "SetCaptureVolumeMultiplier");

	Params::BP_VoiceChat_C_SetCaptureVolumeMultiplier Parms{};

	Parms.CaptureVolumeMultiplier_0 = CaptureVolumeMultiplier_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.SetIsMicrophoneMuted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Muted                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::SetIsMicrophoneMuted(bool Muted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "SetIsMicrophoneMuted");

	Params::BP_VoiceChat_C_SetIsMicrophoneMuted Parms{};

	Parms.Muted = Muted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.SetPlaybackVolumeMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PlaybackVolumeMultiplier_0                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::SetPlaybackVolumeMultiplier(double PlaybackVolumeMultiplier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "SetPlaybackVolumeMultiplier");

	Params::BP_VoiceChat_C_SetPlaybackVolumeMultiplier Parms{};

	Parms.PlaybackVolumeMultiplier_0 = PlaybackVolumeMultiplier_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.SetPlayerMuted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Mute                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::SetPlayerMuted(int64 SteamID, bool Mute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "SetPlayerMuted");

	Params::BP_VoiceChat_C_SetPlayerMuted Parms{};

	Parms.SteamID = SteamID;
	Parms.Mute = Mute;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.SetPreferedDevice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DeviceName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::SetPreferedDevice(const class FString& DeviceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "SetPreferedDevice");

	Params::BP_VoiceChat_C_SetPreferedDevice Parms{};

	Parms.DeviceName = std::move(DeviceName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.SetPushToTalk
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PushToTalk_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::SetPushToTalk(bool PushToTalk_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "SetPushToTalk");

	Params::BP_VoiceChat_C_SetPushToTalk Parms{};

	Parms.PushToTalk_0 = PushToTalk_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_AddMedia
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Spatial_AddMedia()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_AddMedia");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_AddMediaError
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   errorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_AddMediaError(int64 errorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_AddMediaError");

	Params::BP_VoiceChat_C_Spatial_AddMediaError Parms{};

	Parms.errorCode = errorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_AddMediaSuccess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   mediaId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_AddMediaSuccess(int32 mediaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_AddMediaSuccess");

	Params::BP_VoiceChat_C_Spatial_AddMediaSuccess Parms{};

	Parms.mediaId = mediaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_Connect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    roomId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_Connect(const class FString& roomId, const class FString& UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_Connect");

	Params::BP_VoiceChat_C_Spatial_Connect Parms{};

	Parms.roomId = std::move(roomId);
	Parms.UserId = std::move(UserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_Disconnect
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Spatial_Disconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_Disconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_JoinRoom
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Spatial_JoinRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_JoinRoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_JoinRoomError
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   errorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_JoinRoomError(int64 errorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_JoinRoomError");

	Params::BP_VoiceChat_C_Spatial_JoinRoomError Parms{};

	Parms.errorCode = errorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_JoinRoomSuccess
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    roomId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const TArray<uint8>&                    roomUserData                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    customer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int64                                   ownPeerId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    ownUserId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_JoinRoomSuccess(const class FString& roomId, const TArray<uint8>& roomUserData, const class FString& customer, int64 ownPeerId, const class FString& ownUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_JoinRoomSuccess");

	Params::BP_VoiceChat_C_Spatial_JoinRoomSuccess Parms{};

	Parms.roomId = std::move(roomId);
	Parms.roomUserData = std::move(roomUserData);
	Parms.customer = std::move(customer);
	Parms.ownPeerId = ownPeerId;
	Parms.ownUserId = std::move(ownUserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_MediaActiveStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UOdinMediaBase*             Media                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_MediaActiveStateChanged(int64 peerId, const class UOdinMediaBase* Media, bool Active, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_MediaActiveStateChanged");

	Params::BP_VoiceChat_C_Spatial_MediaActiveStateChanged Parms{};

	Parms.peerId = peerId;
	Parms.Media = Media;
	Parms.Active = Active;
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_MediaAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinPlaybackMedia*               Media                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UOdinJsonObject*                  properties                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_MediaAdded(int64 peerId, class UOdinPlaybackMedia* Media, class UOdinJsonObject* properties, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_MediaAdded");

	Params::BP_VoiceChat_C_Spatial_MediaAdded Parms{};

	Parms.peerId = peerId;
	Parms.Media = Media;
	Parms.properties = properties;
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_MediaRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinPlaybackMedia*               Media                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_MediaRemoved(int64 peerId, class UOdinPlaybackMedia* Media, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_MediaRemoved");

	Params::BP_VoiceChat_C_Spatial_MediaRemoved Parms{};

	Parms.peerId = peerId;
	Parms.Media = Media;
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_PeerJoined
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const TArray<uint8>&                    userData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_PeerJoined(int64 peerId, const class FString& UserId, const TArray<uint8>& userData, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_PeerJoined");

	Params::BP_VoiceChat_C_Spatial_PeerJoined Parms{};

	Parms.peerId = peerId;
	Parms.UserId = std::move(UserId);
	Parms.userData = std::move(userData);
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_PeerLeft
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   peerId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOdinRoom*                        room                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::Spatial_PeerLeft(int64 peerId, class UOdinRoom* room)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_PeerLeft");

	Params::BP_VoiceChat_C_Spatial_PeerLeft Parms{};

	Parms.peerId = peerId;
	Parms.room = room;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_RegisterToMediaEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Spatial_RegisterToMediaEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_RegisterToMediaEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.Spatial_RegisterToPeerEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::Spatial_RegisterToPeerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "Spatial_RegisterToPeerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.StartLocalPlayerVoice
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::StartLocalPlayerVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "StartLocalPlayerVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.StopLocalPlayerVoice
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::StopLocalPlayerVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "StopLocalPlayerVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.TryGetLocalPlayerId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64*                                  SteamID                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::TryGetLocalPlayerId(bool* Success, int64* SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "TryGetLocalPlayerId");

	Params::BP_VoiceChat_C_TryGetLocalPlayerId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (SteamID != nullptr)
		*SteamID = Parms.SteamID;
}


// Function BP_VoiceChat.BP_VoiceChat_C.UpdatePlaybackSoundMix
// (BlueprintCallable, BlueprintEvent)

void ABP_VoiceChat_C::UpdatePlaybackSoundMix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "UpdatePlaybackSoundMix");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VoiceChat.BP_VoiceChat_C.VerifyToken
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    GeneratorSuccess                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Token                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    roomId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          ValidToken                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VoiceChat_C::VerifyToken(bool GeneratorSuccess, const class FString& Token, const class FString& roomId, const class FString& UserId, class FString* ValidToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VoiceChat_C", "VerifyToken");

	Params::BP_VoiceChat_C_VerifyToken Parms{};

	Parms.GeneratorSuccess = GeneratorSuccess;
	Parms.Token = std::move(Token);
	Parms.roomId = std::move(roomId);
	Parms.UserId = std::move(UserId);

	UObject::ProcessEvent(Func, &Parms);

	if (ValidToken != nullptr)
		*ValidToken = std::move(Parms.ValidToken);
}

}

