#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_PlayerContextualSound

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_PlayerContextualSound.BPC_PlayerContextualSound_C
// 0x0040 (0x00E0 - 0x00A0)
class UBPC_PlayerContextualSound_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AmbientAudio;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AmbientSoundArea_C*>         Areas;                                             // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class USoundBase*                             Sound;                                             // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TransitionTimer;                                   // 0x00D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutDuration;                                   // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInDuration;                                    // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EndSoundTransition();
	void EntersArea(class ABP_AmbientSoundArea_C* Area);
	void ExecuteUbergraph_BPC_PlayerContextualSound(int32 EntryPoint);
	void ExitArea(class ABP_AmbientSoundArea_C* Area);
	void GetSoundToPlay(class USoundBase** Sound_0);
	void ReceiveBeginPlay();
	void StartSoundTransition(class USoundBase* TargetSound);
	void UpdateSound();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_PlayerContextualSound_C">();
	}
	static class UBPC_PlayerContextualSound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_PlayerContextualSound_C>();
	}
};
static_assert(alignof(UBPC_PlayerContextualSound_C) == 0x000008, "Wrong alignment on UBPC_PlayerContextualSound_C");
static_assert(sizeof(UBPC_PlayerContextualSound_C) == 0x0000E0, "Wrong size on UBPC_PlayerContextualSound_C");
static_assert(offsetof(UBPC_PlayerContextualSound_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_PlayerContextualSound_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerContextualSound_C, Player) == 0x0000A8, "Member 'UBPC_PlayerContextualSound_C::Player' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerContextualSound_C, AmbientAudio) == 0x0000B0, "Member 'UBPC_PlayerContextualSound_C::AmbientAudio' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerContextualSound_C, Areas) == 0x0000B8, "Member 'UBPC_PlayerContextualSound_C::Areas' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerContextualSound_C, Sound) == 0x0000C8, "Member 'UBPC_PlayerContextualSound_C::Sound' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerContextualSound_C, TransitionTimer) == 0x0000D0, "Member 'UBPC_PlayerContextualSound_C::TransitionTimer' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerContextualSound_C, FadeOutDuration) == 0x0000D8, "Member 'UBPC_PlayerContextualSound_C::FadeOutDuration' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerContextualSound_C, FadeInDuration) == 0x0000DC, "Member 'UBPC_PlayerContextualSound_C::FadeInDuration' has a wrong offset!");

}

