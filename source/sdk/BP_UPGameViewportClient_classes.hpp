#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPGameViewportClient

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Headliners_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UPGameViewportClient.BP_UPGameViewportClient_C
// 0x0038 (0x0410 - 0x03D8)
class UBP_UPGameViewportClient_C final : public UUPGameViewportClient
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        MaxHeight;                                         // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentSize;                                       // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentRatio;                                      // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FVector2D& Size, double Ratio)> OnViewportSizeChanged; // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_UPGameViewportClient(int32 EntryPoint);
	void SetScreenPercentage(double MaxHeight_0, int32 NewParam);
	void ViewportSizeChanged(int32 Width, int32 Height);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UPGameViewportClient_C">();
	}
	static class UBP_UPGameViewportClient_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_UPGameViewportClient_C>();
	}
};
static_assert(alignof(UBP_UPGameViewportClient_C) == 0x000008, "Wrong alignment on UBP_UPGameViewportClient_C");
static_assert(sizeof(UBP_UPGameViewportClient_C) == 0x000410, "Wrong size on UBP_UPGameViewportClient_C");
static_assert(offsetof(UBP_UPGameViewportClient_C, UberGraphFrame) == 0x0003D8, "Member 'UBP_UPGameViewportClient_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_UPGameViewportClient_C, MaxHeight) == 0x0003E0, "Member 'UBP_UPGameViewportClient_C::MaxHeight' has a wrong offset!");
static_assert(offsetof(UBP_UPGameViewportClient_C, CurrentSize) == 0x0003E8, "Member 'UBP_UPGameViewportClient_C::CurrentSize' has a wrong offset!");
static_assert(offsetof(UBP_UPGameViewportClient_C, CurrentRatio) == 0x0003F8, "Member 'UBP_UPGameViewportClient_C::CurrentRatio' has a wrong offset!");
static_assert(offsetof(UBP_UPGameViewportClient_C, OnViewportSizeChanged) == 0x000400, "Member 'UBP_UPGameViewportClient_C::OnViewportSizeChanged' has a wrong offset!");

}

