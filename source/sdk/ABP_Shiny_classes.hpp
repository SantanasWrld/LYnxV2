#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Shiny

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Shiny.ABP_Shiny_C
// 0x0720 (0x0A70 - 0x0350)
class UABP_Shiny_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0388(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x03B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x03D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0400(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0428(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0478(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x04A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x04E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0508(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0550(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0598(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0608(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0628(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0670(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0690(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0758(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0778(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x07A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x07C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0810(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0830(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0878(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0898(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0960(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0980(0x00C8)()
	double                                        Speed;                                             // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Direction;                                         // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x0A58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A59[0x7];                                      // 0x0A59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Shiny_C*                            Shiny;                                             // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTeleporting;                                     // 0x0A68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Shiny_AnimGraphNode_TransitionResult_0A1301B543C88CADF03B5793289BC37B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Shiny_AnimGraphNode_TransitionResult_1413250543FA0D649C259D9BB5FF0586();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Shiny_AnimGraphNode_TransitionResult_1F8689664C24E3A24E3EC5840A3B2C3F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Shiny_AnimGraphNode_TransitionResult_5AF19E114E4FB6D6AED4B7BE2B2F53C8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Shiny_AnimGraphNode_TransitionResult_CBC3EB37483DD2CC45321FA89BD1CB92();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Shiny_AnimGraphNode_TransitionResult_F803AA154258365901ABFE936A53697D();
	void ExecuteUbergraph_ABP_Shiny(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Shiny_C">();
	}
	static class UABP_Shiny_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Shiny_C>();
	}
};
static_assert(alignof(UABP_Shiny_C) == 0x000010, "Wrong alignment on UABP_Shiny_C");
static_assert(sizeof(UABP_Shiny_C) == 0x000A70, "Wrong size on UABP_Shiny_C");
static_assert(offsetof(UABP_Shiny_C, UberGraphFrame) == 0x000350, "Member 'UABP_Shiny_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UABP_Shiny_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UABP_Shiny_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_Root) == 0x000368, "Member 'UABP_Shiny_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_10) == 0x000388, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_9) == 0x0003B0, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_8) == 0x0003D8, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_7) == 0x000400, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_6) == 0x000428, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_5) == 0x000450, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_4) == 0x000478, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_SequencePlayer_5) == 0x0004A0, "Member 'UABP_Shiny_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateResult_7) == 0x0004E8, "Member 'UABP_Shiny_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_SequencePlayer_4) == 0x000508, "Member 'UABP_Shiny_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateResult_6) == 0x000550, "Member 'UABP_Shiny_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_3) == 0x000570, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_2) == 0x000598, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_SequencePlayer_3) == 0x0005C0, "Member 'UABP_Shiny_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateResult_5) == 0x000608, "Member 'UABP_Shiny_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_SequencePlayer_2) == 0x000628, "Member 'UABP_Shiny_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateResult_4) == 0x000670, "Member 'UABP_Shiny_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateMachine_2) == 0x000690, "Member 'UABP_Shiny_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateResult_3) == 0x000758, "Member 'UABP_Shiny_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult_1) == 0x000778, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_TransitionResult) == 0x0007A0, "Member 'UABP_Shiny_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_SequencePlayer_1) == 0x0007C8, "Member 'UABP_Shiny_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateResult_2) == 0x000810, "Member 'UABP_Shiny_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_SequencePlayer) == 0x000830, "Member 'UABP_Shiny_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateResult_1) == 0x000878, "Member 'UABP_Shiny_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateMachine_1) == 0x000898, "Member 'UABP_Shiny_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateResult) == 0x000960, "Member 'UABP_Shiny_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, AnimGraphNode_StateMachine) == 0x000980, "Member 'UABP_Shiny_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, Speed) == 0x000A48, "Member 'UABP_Shiny_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, Direction) == 0x000A50, "Member 'UABP_Shiny_C::Direction' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, IsAttacking) == 0x000A58, "Member 'UABP_Shiny_C::IsAttacking' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, Shiny) == 0x000A60, "Member 'UABP_Shiny_C::Shiny' has a wrong offset!");
static_assert(offsetof(UABP_Shiny_C, IsTeleporting) == 0x000A68, "Member 'UABP_Shiny_C::IsTeleporting' has a wrong offset!");

}

