#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_WeaponHolder

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_WeaponHolder.BPI_WeaponHolder_C.CanShoot
// 0x0001 (0x0001 - 0x0000)
struct BPI_WeaponHolder_C_CanShoot final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_WeaponHolder_C_CanShoot) == 0x000001, "Wrong alignment on BPI_WeaponHolder_C_CanShoot");
static_assert(sizeof(BPI_WeaponHolder_C_CanShoot) == 0x000001, "Wrong size on BPI_WeaponHolder_C_CanShoot");
static_assert(offsetof(BPI_WeaponHolder_C_CanShoot, Value) == 0x000000, "Member 'BPI_WeaponHolder_C_CanShoot::Value' has a wrong offset!");

// Function BPI_WeaponHolder.BPI_WeaponHolder_C.IsAiming
// 0x0001 (0x0001 - 0x0000)
struct BPI_WeaponHolder_C_IsAiming final
{
public:
	bool                                          Aiming;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_WeaponHolder_C_IsAiming) == 0x000001, "Wrong alignment on BPI_WeaponHolder_C_IsAiming");
static_assert(sizeof(BPI_WeaponHolder_C_IsAiming) == 0x000001, "Wrong size on BPI_WeaponHolder_C_IsAiming");
static_assert(offsetof(BPI_WeaponHolder_C_IsAiming, Aiming) == 0x000000, "Member 'BPI_WeaponHolder_C_IsAiming::Aiming' has a wrong offset!");

// Function BPI_WeaponHolder.BPI_WeaponHolder_C.SetAiming
// 0x0001 (0x0001 - 0x0000)
struct BPI_WeaponHolder_C_SetAiming final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_WeaponHolder_C_SetAiming) == 0x000001, "Wrong alignment on BPI_WeaponHolder_C_SetAiming");
static_assert(sizeof(BPI_WeaponHolder_C_SetAiming) == 0x000001, "Wrong size on BPI_WeaponHolder_C_SetAiming");
static_assert(offsetof(BPI_WeaponHolder_C_SetAiming, Value) == 0x000000, "Member 'BPI_WeaponHolder_C_SetAiming::Value' has a wrong offset!");

// Function BPI_WeaponHolder.BPI_WeaponHolder_C.Shoot
// 0x0008 (0x0008 - 0x0000)
struct BPI_WeaponHolder_C_Shoot final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_WeaponHolder_C_Shoot) == 0x000008, "Wrong alignment on BPI_WeaponHolder_C_Shoot");
static_assert(sizeof(BPI_WeaponHolder_C_Shoot) == 0x000008, "Wrong size on BPI_WeaponHolder_C_Shoot");
static_assert(offsetof(BPI_WeaponHolder_C_Shoot, TargetActor) == 0x000000, "Member 'BPI_WeaponHolder_C_Shoot::TargetActor' has a wrong offset!");

}

