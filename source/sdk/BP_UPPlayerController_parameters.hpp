#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPPlayerController

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_UPPlayerController.BP_UPPlayerController_C.AddHudWidget
// 0x0028 (0x0028 - 0x0000)
struct BP_UPPlayerController_C_AddHudWidget final
{
public:
	class UClass*                                 WidgetClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Priority;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Widget;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_HudParent_C*                         CallFunc_GetHudParent_HudParent;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_AddHudWidget_Widget;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_AddHudWidget) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_AddHudWidget");
static_assert(sizeof(BP_UPPlayerController_C_AddHudWidget) == 0x000028, "Wrong size on BP_UPPlayerController_C_AddHudWidget");
static_assert(offsetof(BP_UPPlayerController_C_AddHudWidget, WidgetClass) == 0x000000, "Member 'BP_UPPlayerController_C_AddHudWidget::WidgetClass' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_AddHudWidget, Priority) == 0x000008, "Member 'BP_UPPlayerController_C_AddHudWidget::Priority' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_AddHudWidget, Widget) == 0x000010, "Member 'BP_UPPlayerController_C_AddHudWidget::Widget' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_AddHudWidget, CallFunc_GetHudParent_HudParent) == 0x000018, "Member 'BP_UPPlayerController_C_AddHudWidget::CallFunc_GetHudParent_HudParent' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_AddHudWidget, CallFunc_AddHudWidget_Widget) == 0x000020, "Member 'BP_UPPlayerController_C_AddHudWidget::CallFunc_AddHudWidget_Widget' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.AskForCapture
// 0x0004 (0x0004 - 0x0000)
struct BP_UPPlayerController_C_AskForCapture final
{
public:
	int32                                         CaptureId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_AskForCapture) == 0x000004, "Wrong alignment on BP_UPPlayerController_C_AskForCapture");
static_assert(sizeof(BP_UPPlayerController_C_AskForCapture) == 0x000004, "Wrong size on BP_UPPlayerController_C_AskForCapture");
static_assert(offsetof(BP_UPPlayerController_C_AskForCapture, CaptureId) == 0x000000, "Member 'BP_UPPlayerController_C_AskForCapture::CaptureId' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.CheckSteamId
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_CheckSteamId final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         SteamID_0;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_Int64Int64_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_CheckSteamId) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_CheckSteamId");
static_assert(sizeof(BP_UPPlayerController_C_CheckSteamId) == 0x000018, "Wrong size on BP_UPPlayerController_C_CheckSteamId");
static_assert(offsetof(BP_UPPlayerController_C_CheckSteamId, IsValid) == 0x000000, "Member 'BP_UPPlayerController_C_CheckSteamId::IsValid' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_CheckSteamId, SteamID_0) == 0x000008, "Member 'BP_UPPlayerController_C_CheckSteamId::SteamID_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_CheckSteamId, CallFunc_GreaterEqual_Int64Int64_ReturnValue) == 0x000010, "Member 'BP_UPPlayerController_C_CheckSteamId::CallFunc_GreaterEqual_Int64Int64_ReturnValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.CreateCaptureRequest
// 0x0004 (0x0004 - 0x0000)
struct BP_UPPlayerController_C_CreateCaptureRequest final
{
public:
	int32                                         CaptureId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_CreateCaptureRequest) == 0x000004, "Wrong alignment on BP_UPPlayerController_C_CreateCaptureRequest");
static_assert(sizeof(BP_UPPlayerController_C_CreateCaptureRequest) == 0x000004, "Wrong size on BP_UPPlayerController_C_CreateCaptureRequest");
static_assert(offsetof(BP_UPPlayerController_C_CreateCaptureRequest, CaptureId) == 0x000000, "Member 'BP_UPPlayerController_C_CreateCaptureRequest::CaptureId' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.ExecuteUbergraph_BP_UPPlayerController
// 0x07E0 (0x07E0 - 0x0000)
struct BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVector2D& Size, double Ratio)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CaptureId_1;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CaptureId;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureRequest_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VoiceChat_C*                        CallFunc_GetActorOfClass_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                CallFunc_FindDeadPlayerWithId_Player;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraShakeBase>           K2Node_CustomEvent_ShakeClass;                     // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Scale;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CameraShakeIndex_1;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CameraShakeIndex;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_Map_Find_Value;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Size;                           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Ratio;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUPGameViewportClient*                  CallFunc_GetViewportClient_ReturnValue;            // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UPGameViewportClient_C*             K2Node_DynamicCast_AsBP_UPGame_Viewport_Client;    // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable;                              // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0190(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x01B8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2_0;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUPGameViewportClient*                  CallFunc_GetViewportClient_ReturnValue_1;          // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameViewportClient_C*             K2Node_DynamicCast_AsBP_UPGame_Viewport_Client_1;  // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputMappingContext*             K2Node_CustomEvent_MappingContext;                 // 0x0208(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Priority;                       // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0218(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0230(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0248(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0260(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0278(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0290(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x02A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_7;                        // 0x02C0(0x0018)(HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_1;                            // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VoiceChat_C*                        CallFunc_GetActorOfClass_ReturnValue_1;            // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_8;                        // 0x02E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsMicrophoneMuted_Muted;               // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_303[0x5];                                      // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_9;                        // 0x0308(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsUsingGamepad;                 // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_2;     // 0x0328(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_2;     // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_2;   // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_2;    // 0x0350(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_InputVectorAxisEvent_AxisValue;             // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3_0;                            // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_10;                       // 0x0390(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_3;     // 0x03A8(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_3;     // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_3;   // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_3;    // 0x03D0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_4;     // 0x03D8(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_4;     // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_4;   // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_4;    // 0x0400(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_1;                            // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_2; // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3_2;                            // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_3; // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_InLobby;                        // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433[0x5];                                      // 0x0433(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainMenu_C*                          CallFunc_Create_ReturnValue;                       // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_InLobby_1;                      // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_443[0x5];                                      // 0x0443(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_GamepadFocusHighlight_C*             CallFunc_Create_ReturnValue_1;                     // 0x0448(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PlayerName_1;                   // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowPlayerNotification_Result;      // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0468(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0480(0x0050)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_11;                       // 0x04D0(0x0018)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x04E8(0x0010)(ReferenceParm)
	class FString                                 K2Node_CustomEvent_PlayerName;                     // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0508(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0520(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0538(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0548(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0598(0x0010)(ReferenceParm)
	bool                                          CallFunc_ShouldShowPlayerNotification_Result_1;    // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x05B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x05C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x05D8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x05F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_SteamId;                        // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSteamId_IsValid;                       // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetSteamId_SteamId;                       // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_12;                       // 0x0620(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_13;                       // 0x0638(0x0018)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_679[0x7];                                      // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_14;                       // 0x0680(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_15;                       // 0x0698(0x0018)(HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPGameMode_C*                       K2Node_DynamicCast_AsBP_UPGame_Mode;               // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C2[0x6];                                      // 0x06C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x06D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPGameMode_C*                       K2Node_DynamicCast_AsBP_UPGame_Mode_1;             // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_2;                            // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x0708(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x0730(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance_1;         // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5_0;                            // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSession_InSession;                    // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4_0;                            // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_4; // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_CustomEvent_DeadPlayer;                     // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0778(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character_1;      // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable;                              // 0x0789(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_78A[0x6];                                      // 0x078A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0790(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_HasMappingContext_self_CastInput; // 0x0798(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasMappingContext_OutFoundPriority;       // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMappingContext_ReturnValue;            // 0x07AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AD[0x3];                                      // 0x07AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_RemoveMappingContext_self_CastInput; // 0x07B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x07C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable_1;                            // 0x07C2(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_7C3[0x5];                                      // 0x07C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_AddMappingContext_self_CastInput; // 0x07C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController) == 0x000010, "Wrong alignment on BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController");
static_assert(sizeof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController) == 0x0007E0, "Wrong size on BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, EntryPoint) == 0x000000, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_HasAuthority_ReturnValue_1) == 0x000005, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_CaptureId_1) == 0x000018, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_CaptureId_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_CaptureId) == 0x00001C, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_CaptureId' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetActorOfClass_ReturnValue) == 0x0000A0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000AC, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_bool_Variable) == 0x0000BC, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable) == 0x0000D0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_FindDeadPlayerWithId_Player) == 0x0000D8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_FindDeadPlayerWithId_Player' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue_2) == 0x0000E0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue_3) == 0x0000E1, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_ShakeClass) == 0x0000E8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_ShakeClass' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_Scale) == 0x0000F0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_CameraShakeIndex_1) == 0x0000F4, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_CameraShakeIndex_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_StartCameraShake_ReturnValue) == 0x0000F8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_CameraShakeIndex) == 0x000100, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_CameraShakeIndex' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Map_Find_Value) == 0x000108, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Map_Find_ReturnValue) == 0x000110, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue_4) == 0x000111, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_Size) == 0x000118, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_Size' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_Ratio) == 0x000128, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_Ratio' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_BreakVector2D_X) == 0x000130, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_BreakVector2D_Y) == 0x000138, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetViewportClient_ReturnValue) == 0x000148, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetViewportClient_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_bool_Variable_1) == 0x000150, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_AsBP_UPGame_Viewport_Client) == 0x000158, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_AsBP_UPGame_Viewport_Client' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_1) == 0x000168, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_2) == 0x000170, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_3) == 0x000178, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue_5) == 0x000180, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_object_Variable) == 0x000188, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000190, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x0001B0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x0001B4, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_SourceAction) == 0x0001B8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_2_0) == 0x0001C0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_2_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_1_0) == 0x0001C8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x0001D0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetViewportClient_ReturnValue_1) == 0x0001D8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetViewportClient_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_AsBP_UPGame_Viewport_Client_1) == 0x0001E0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_AsBP_UPGame_Viewport_Client_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_SelectFloat_ReturnValue) == 0x0001F0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000200, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_MappingContext) == 0x000208, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_MappingContext' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_Priority) == 0x000210, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_Priority' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_Enabled) == 0x000214, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key) == 0x000218, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_1) == 0x000230, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_2) == 0x000248, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_3) == 0x000260, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_4) == 0x000278, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_5) == 0x000290, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_6) == 0x0002A8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_7) == 0x0002C0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_object_Variable_1) == 0x0002D8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetActorOfClass_ReturnValue_1) == 0x0002E0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_8) == 0x0002E8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue_6) == 0x000300, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetIsMicrophoneMuted_Muted) == 0x000301, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetIsMicrophoneMuted_Muted' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Not_PreBool_ReturnValue) == 0x000302, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_9) == 0x000308, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_IsUsingGamepad) == 0x000320, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_IsUsingGamepad' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ActionValue_2) == 0x000328, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ElapsedTime_2) == 0x000348, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ElapsedTime_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_TriggeredTime_2) == 0x00034C, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_TriggeredTime_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_SourceAction_2) == 0x000350, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_SourceAction_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputVectorAxisEvent_AxisValue) == 0x000358, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputVectorAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000370, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_3_0) == 0x000378, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_0) == 0x000380, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x000388, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_10) == 0x000390, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ActionValue_3) == 0x0003A8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ElapsedTime_3) == 0x0003C8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ElapsedTime_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_TriggeredTime_3) == 0x0003CC, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_TriggeredTime_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_SourceAction_3) == 0x0003D0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_SourceAction_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ActionValue_4) == 0x0003D8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ActionValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ElapsedTime_4) == 0x0003F8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ElapsedTime_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_TriggeredTime_4) == 0x0003FC, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_TriggeredTime_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_SourceAction_4) == 0x000400, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_SourceAction_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_3_1) == 0x000408, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_3_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_1) == 0x000410, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_InputActionValueToBool_ReturnValue_2) == 0x000418, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_InputActionValueToBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_3_2) == 0x000420, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_3_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_2) == 0x000428, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_InputActionValueToBool_ReturnValue_3) == 0x000430, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_InputActionValueToBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_Visible) == 0x000431, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsInLobby_InLobby) == 0x000432, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsInLobby_InLobby' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Create_ReturnValue) == 0x000438, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsInLobby_InLobby_1) == 0x000440, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsInLobby_InLobby_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsVisible_ReturnValue) == 0x000441, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Not_PreBool_ReturnValue_1) == 0x000442, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Create_ReturnValue_1) == 0x000448, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_PlayerName_1) == 0x000450, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_PlayerName_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_ShouldShowPlayerNotification_Result) == 0x000460, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_ShouldShowPlayerNotification_Result' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_StringToText_ReturnValue) == 0x000468, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_MakeStruct_FormatArgumentData) == 0x000480, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_11) == 0x0004D0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_11' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_MakeArray_Array) == 0x0004E8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_PlayerName) == 0x0004F8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Format_ReturnValue) == 0x000508, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000520, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_TextToString_ReturnValue) == 0x000538, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_MakeStruct_FormatArgumentData_1) == 0x000548, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_MakeArray_Array_1) == 0x000598, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_ShouldShowPlayerNotification_Result_1) == 0x0005A8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_ShouldShowPlayerNotification_Result_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Format_ReturnValue_1) == 0x0005B0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0005C8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_MakeLiteralText_ReturnValue) == 0x0005D8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0005F0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_SteamId) == 0x000600, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_SteamId' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetSteamId_IsValid) == 0x000608, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetSteamId_IsValid' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetSteamId_SteamId) == 0x000610, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetSteamId_SteamId' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000618, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_12) == 0x000620, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_12' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_13) == 0x000638, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_13' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetGameInstance_ReturnValue) == 0x000650, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000658, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_bSuccess_2) == 0x000660, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_Event_PossessedPawn) == 0x000668, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000670, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_bSuccess_3) == 0x000678, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_14) == 0x000680, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_14' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_InputKeyEvent_Key_15) == 0x000698, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_InputKeyEvent_Key_15' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetGameMode_ReturnValue) == 0x0006B0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_AsBP_UPGame_Mode) == 0x0006B8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_AsBP_UPGame_Mode' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_bSuccess_4) == 0x0006C0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_bool_Variable_2) == 0x0006C1, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_4) == 0x0006C8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_5) == 0x0006D0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_K2_GetPawn_ReturnValue) == 0x0006D8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetGameMode_ReturnValue_1) == 0x0006E0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue_7) == 0x0006E8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_AsBP_UPGame_Mode_1) == 0x0006F0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_AsBP_UPGame_Mode_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_bSuccess_5) == 0x0006F8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_object_Variable_2) == 0x000700, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x000708, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x000728, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x00072C, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x000730, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetGameInstance_ReturnValue_1) == 0x000738, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_AsBP_UPGame_Instance_1) == 0x000740, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_AsBP_UPGame_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_bSuccess_6) == 0x000748, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_5_0) == 0x000750, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_5_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsInSession_InSession) == 0x000758, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsInSession_InSession' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_real_Variable_4_0) == 0x000760, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_real_Variable_4_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_Conv_InputActionValueToBool_ReturnValue_4) == 0x000768, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_Conv_InputActionValueToBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_CustomEvent_DeadPlayer) == 0x000770, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_CustomEvent_DeadPlayer' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000778, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_AsBP_UPPlayer_Character_1) == 0x000780, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_AsBP_UPPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, K2Node_DynamicCast_bSuccess_7) == 0x000788, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_struct_Variable) == 0x000789, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000790, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_HasMappingContext_self_CastInput) == 0x000798, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_HasMappingContext_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_HasMappingContext_OutFoundPriority) == 0x0007A8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_HasMappingContext_OutFoundPriority' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_HasMappingContext_ReturnValue) == 0x0007AC, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_HasMappingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_RemoveMappingContext_self_CastInput) == 0x0007B0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_RemoveMappingContext_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0007C0, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_IsValid_ReturnValue_8) == 0x0007C1, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, Temp_struct_Variable_1) == 0x0007C2, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController, CallFunc_AddMappingContext_self_CastInput) == 0x0007C8, "Member 'BP_UPPlayerController_C_ExecuteUbergraph_BP_UPPlayerController::CallFunc_AddMappingContext_self_CastInput' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.FindDeadPlayerWithId
// 0x0030 (0x0030 - 0x0000)
struct BP_UPPlayerController_C_FindDeadPlayerWithId final
{
public:
	int64                                         SteamID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                Player_0;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_FindDeadPlayerWithId) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_FindDeadPlayerWithId");
static_assert(sizeof(BP_UPPlayerController_C_FindDeadPlayerWithId) == 0x000030, "Wrong size on BP_UPPlayerController_C_FindDeadPlayerWithId");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, SteamID_0) == 0x000000, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::SteamID_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, Player_0) == 0x000008, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::Player_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000029, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_FindDeadPlayerWithId, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_UPPlayerController_C_FindDeadPlayerWithId::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.FixDeadPlayerReconnecting
// 0x0008 (0x0008 - 0x0000)
struct BP_UPPlayerController_C_FixDeadPlayerReconnecting final
{
public:
	class ABP_UPPlayerCharacter_C*                DeadPlayer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_FixDeadPlayerReconnecting) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_FixDeadPlayerReconnecting");
static_assert(sizeof(BP_UPPlayerController_C_FixDeadPlayerReconnecting) == 0x000008, "Wrong size on BP_UPPlayerController_C_FixDeadPlayerReconnecting");
static_assert(offsetof(BP_UPPlayerController_C_FixDeadPlayerReconnecting, DeadPlayer) == 0x000000, "Member 'BP_UPPlayerController_C_FixDeadPlayerReconnecting::DeadPlayer' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.GetCameraShakeIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_UPPlayerController_C_GetCameraShakeIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Index;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_GetCameraShakeIndex) == 0x000004, "Wrong alignment on BP_UPPlayerController_C_GetCameraShakeIndex");
static_assert(sizeof(BP_UPPlayerController_C_GetCameraShakeIndex) == 0x000010, "Wrong size on BP_UPPlayerController_C_GetCameraShakeIndex");
static_assert(offsetof(BP_UPPlayerController_C_GetCameraShakeIndex, Index_0) == 0x000000, "Member 'BP_UPPlayerController_C_GetCameraShakeIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetCameraShakeIndex, _Index) == 0x000004, "Member 'BP_UPPlayerController_C_GetCameraShakeIndex::_Index' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetCameraShakeIndex, Temp_int_Variable) == 0x000008, "Member 'BP_UPPlayerController_C_GetCameraShakeIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetCameraShakeIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UPPlayerController_C_GetCameraShakeIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.GetHudParent
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_GetHudParent final
{
public:
	class UW_HudParent_C*                         HudParent_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_HudParent_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_GetHudParent) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_GetHudParent");
static_assert(sizeof(BP_UPPlayerController_C_GetHudParent) == 0x000018, "Wrong size on BP_UPPlayerController_C_GetHudParent");
static_assert(offsetof(BP_UPPlayerController_C_GetHudParent, HudParent_0) == 0x000000, "Member 'BP_UPPlayerController_C_GetHudParent::HudParent_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetHudParent, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_UPPlayerController_C_GetHudParent::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetHudParent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_UPPlayerController_C_GetHudParent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.GetInputKey
// 0x0130 (0x0130 - 0x0000)
struct BP_UPPlayerController_C_GetInputKey final
{
public:
	class UInputAction*                           InputAction;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 _Key;                                              // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_QueryKeysMappedToAction_self_CastInput; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKey>                           CallFunc_QueryKeysMappedToAction_ReturnValue;      // 0x0058(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0088(0x0018)()
	TMap<class FString, class UTexture2D*>        K2Node_Select_Default;                             // 0x00A0(0x0050)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_GetInputKey) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_GetInputKey");
static_assert(sizeof(BP_UPPlayerController_C_GetInputKey) == 0x000130, "Wrong size on BP_UPPlayerController_C_GetInputKey");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, InputAction) == 0x000000, "Member 'BP_UPPlayerController_C_GetInputKey::InputAction' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, Key) == 0x000008, "Member 'BP_UPPlayerController_C_GetInputKey::Key' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, Icon) == 0x000018, "Member 'BP_UPPlayerController_C_GetInputKey::Icon' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, _Key) == 0x000020, "Member 'BP_UPPlayerController_C_GetInputKey::_Key' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_UPPlayerController_C_GetInputKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_UPPlayerController_C_GetInputKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000040, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_QueryKeysMappedToAction_self_CastInput) == 0x000048, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_QueryKeysMappedToAction_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_QueryKeysMappedToAction_ReturnValue) == 0x000058, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_QueryKeysMappedToAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, Temp_bool_Variable) == 0x000068, "Member 'BP_UPPlayerController_C_GetInputKey::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000088, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, K2Node_Select_Default) == 0x0000A0, "Member 'BP_UPPlayerController_C_GetInputKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Map_Find_Value) == 0x000100, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Map_Find_ReturnValue) == 0x000108, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Replace_ReturnValue) == 0x000110, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000120, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Array_Length_ReturnValue) == 0x000124, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000128, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetInputKey, CallFunc_Less_IntInt_ReturnValue) == 0x000129, "Member 'BP_UPPlayerController_C_GetInputKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.GetSteamID
// 0x0028 (0x0028 - 0x0000)
struct BP_UPPlayerController_C_GetSteamID final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         SteamID_0;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_Int64Int64_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_GetSteamID) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_GetSteamID");
static_assert(sizeof(BP_UPPlayerController_C_GetSteamID) == 0x000028, "Wrong size on BP_UPPlayerController_C_GetSteamID");
static_assert(offsetof(BP_UPPlayerController_C_GetSteamID, IsValid) == 0x000000, "Member 'BP_UPPlayerController_C_GetSteamID::IsValid' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetSteamID, SteamID_0) == 0x000008, "Member 'BP_UPPlayerController_C_GetSteamID::SteamID_0' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetSteamID, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BP_UPPlayerController_C_GetSteamID::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetSteamID, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000018, "Member 'BP_UPPlayerController_C_GetSteamID::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetSteamID, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_UPPlayerController_C_GetSteamID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_GetSteamID, CallFunc_GreaterEqual_Int64Int64_ReturnValue) == 0x000021, "Member 'BP_UPPlayerController_C_GetSteamID::CallFunc_GreaterEqual_Int64Int64_ReturnValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_A_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_A_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_A_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_A_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_A_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_A_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_A_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_A_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_D_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_D_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_D_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_D_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_D_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_D_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_D_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_D_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Down_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Down_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Down_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Down_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Down_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Down_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Down_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Down_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_15
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_15) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_15");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_15) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_15");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_15, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_15::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Gamepad_DPad_Left_K2Node_InputKeyEvent_13
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Left_K2Node_InputKeyEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Left_K2Node_InputKeyEvent_13) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Left_K2Node_InputKeyEvent_13");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Left_K2Node_InputKeyEvent_13) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Left_K2Node_InputKeyEvent_13");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Left_K2Node_InputKeyEvent_13, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Left_K2Node_InputKeyEvent_13::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_12) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_12");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_12) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_12");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_12, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_12::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_14
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_14) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_14");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_14) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_14");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_14, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_14::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'BP_UPPlayerController_C_InpActEvt_IA_MainMenu_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'BP_UPPlayerController_C_InpActEvt_IA_MuteMicrophone_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2
// 0x0030 (0x0030 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2) == 0x000030, "Wrong size on BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2, ActionValue) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2, ElapsedTime) == 0x000020, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2, TriggeredTime) == 0x000024, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2, SourceAction) == 0x000028, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_2::SourceAction' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3
// 0x0030 (0x0030 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3) == 0x000030, "Wrong size on BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3, ActionValue) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3, ElapsedTime) == 0x000020, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3, TriggeredTime) == 0x000024, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3, SourceAction) == 0x000028, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_3::SourceAction' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4
// 0x0030 (0x0030 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4) == 0x000030, "Wrong size on BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4, ActionValue) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4, ElapsedTime) == 0x000020, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4, TriggeredTime) == 0x000024, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4, SourceAction) == 0x000028, "Member 'BP_UPPlayerController_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_4::SourceAction' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Left_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Left_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Left_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Left_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Left_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Left_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Left_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Left_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_11) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_11");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_11) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_11");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_11, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_11::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Q_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Q_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Q_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Q_K2Node_InputKeyEvent_8");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Q_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Q_K2Node_InputKeyEvent_8");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Q_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Q_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Right_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Right_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Right_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Right_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Right_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Right_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Right_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Right_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_10");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_10");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_S_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_S_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_S_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_S_K2Node_InputKeyEvent_7");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_S_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_S_K2Node_InputKeyEvent_7");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_S_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_S_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Up_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Up_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Up_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Up_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Up_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Up_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Up_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Up_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_W_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_W_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_W_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_W_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_W_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_W_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_W_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_W_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpActEvt_Z_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_9");
static_assert(sizeof(BP_UPPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_9");
static_assert(offsetof(BP_UPPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'BP_UPPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.InpAxisKeyEvt_Gamepad_Left2D_K2Node_InputVectorAxisEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_InpAxisKeyEvt_Gamepad_Left2D_K2Node_InputVectorAxisEvent_1 final
{
public:
	struct FVector                                AxisValue;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_InpAxisKeyEvt_Gamepad_Left2D_K2Node_InputVectorAxisEvent_1) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_InpAxisKeyEvt_Gamepad_Left2D_K2Node_InputVectorAxisEvent_1");
static_assert(sizeof(BP_UPPlayerController_C_InpAxisKeyEvt_Gamepad_Left2D_K2Node_InputVectorAxisEvent_1) == 0x000018, "Wrong size on BP_UPPlayerController_C_InpAxisKeyEvt_Gamepad_Left2D_K2Node_InputVectorAxisEvent_1");
static_assert(offsetof(BP_UPPlayerController_C_InpAxisKeyEvt_Gamepad_Left2D_K2Node_InputVectorAxisEvent_1, AxisValue) == 0x000000, "Member 'BP_UPPlayerController_C_InpAxisKeyEvt_Gamepad_Left2D_K2Node_InputVectorAxisEvent_1::AxisValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.IsPressingGamepad
// 0x0068 (0x0068 - 0x0000)
struct BP_UPPlayerController_C_IsPressingGamepad final
{
public:
	class UInputAction*                           InputAction;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_QueryKeysMappedToAction_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKey>                           CallFunc_QueryKeysMappedToAction_ReturnValue;      // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_IsPressingGamepad) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_IsPressingGamepad");
static_assert(sizeof(BP_UPPlayerController_C_IsPressingGamepad) == 0x000068, "Wrong size on BP_UPPlayerController_C_IsPressingGamepad");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, InputAction) == 0x000000, "Member 'BP_UPPlayerController_C_IsPressingGamepad::InputAction' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, Result) == 0x000008, "Member 'BP_UPPlayerController_C_IsPressingGamepad::Result' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_UPPlayerController_C_IsPressingGamepad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_UPPlayerController_C_IsPressingGamepad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000018, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_QueryKeysMappedToAction_self_CastInput) == 0x000020, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_QueryKeysMappedToAction_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_QueryKeysMappedToAction_ReturnValue) == 0x000030, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_QueryKeysMappedToAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000061, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_IsPressingGamepad, CallFunc_IsInputKeyDown_ReturnValue) == 0x000062, "Member 'BP_UPPlayerController_C_IsPressingGamepad::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.PlayerJoinedNotification
// 0x0010 (0x0010 - 0x0000)
struct BP_UPPlayerController_C_PlayerJoinedNotification final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_PlayerJoinedNotification) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_PlayerJoinedNotification");
static_assert(sizeof(BP_UPPlayerController_C_PlayerJoinedNotification) == 0x000010, "Wrong size on BP_UPPlayerController_C_PlayerJoinedNotification");
static_assert(offsetof(BP_UPPlayerController_C_PlayerJoinedNotification, PlayerName) == 0x000000, "Member 'BP_UPPlayerController_C_PlayerJoinedNotification::PlayerName' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.PlayerLeftNotification
// 0x0010 (0x0010 - 0x0000)
struct BP_UPPlayerController_C_PlayerLeftNotification final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_PlayerLeftNotification) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_PlayerLeftNotification");
static_assert(sizeof(BP_UPPlayerController_C_PlayerLeftNotification) == 0x000010, "Wrong size on BP_UPPlayerController_C_PlayerLeftNotification");
static_assert(offsetof(BP_UPPlayerController_C_PlayerLeftNotification, PlayerName) == 0x000000, "Member 'BP_UPPlayerController_C_PlayerLeftNotification::PlayerName' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct BP_UPPlayerController_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_ReceivePossess) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_ReceivePossess");
static_assert(sizeof(BP_UPPlayerController_C_ReceivePossess) == 0x000008, "Wrong size on BP_UPPlayerController_C_ReceivePossess");
static_assert(offsetof(BP_UPPlayerController_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'BP_UPPlayerController_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.SetMainMenuVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_UPPlayerController_C_SetMainMenuVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_SetMainMenuVisibility) == 0x000001, "Wrong alignment on BP_UPPlayerController_C_SetMainMenuVisibility");
static_assert(sizeof(BP_UPPlayerController_C_SetMainMenuVisibility) == 0x000001, "Wrong size on BP_UPPlayerController_C_SetMainMenuVisibility");
static_assert(offsetof(BP_UPPlayerController_C_SetMainMenuVisibility, Visible) == 0x000000, "Member 'BP_UPPlayerController_C_SetMainMenuVisibility::Visible' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.SetMappingContextEnabled
// 0x0010 (0x0010 - 0x0000)
struct BP_UPPlayerController_C_SetMappingContextEnabled final
{
public:
	const class UInputMappingContext*             MappingContext;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Priority;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_SetMappingContextEnabled) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_SetMappingContextEnabled");
static_assert(sizeof(BP_UPPlayerController_C_SetMappingContextEnabled) == 0x000010, "Wrong size on BP_UPPlayerController_C_SetMappingContextEnabled");
static_assert(offsetof(BP_UPPlayerController_C_SetMappingContextEnabled, MappingContext) == 0x000000, "Member 'BP_UPPlayerController_C_SetMappingContextEnabled::MappingContext' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_SetMappingContextEnabled, Priority) == 0x000008, "Member 'BP_UPPlayerController_C_SetMappingContextEnabled::Priority' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_SetMappingContextEnabled, Enabled) == 0x00000C, "Member 'BP_UPPlayerController_C_SetMappingContextEnabled::Enabled' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.SetSteamId (Server)
// 0x0008 (0x0008 - 0x0000)
struct BP_UPPlayerController_C_SetSteamId__Server_ final
{
public:
	int64                                         SteamID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_SetSteamId__Server_) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_SetSteamId__Server_");
static_assert(sizeof(BP_UPPlayerController_C_SetSteamId__Server_) == 0x000008, "Wrong size on BP_UPPlayerController_C_SetSteamId__Server_");
static_assert(offsetof(BP_UPPlayerController_C_SetSteamId__Server_, SteamID_0) == 0x000000, "Member 'BP_UPPlayerController_C_SetSteamId__Server_::SteamID_0' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.ShouldShowPlayerNotification
// 0x0020 (0x0020 - 0x0000)
struct BP_UPPlayerController_C_ShouldShowPlayerNotification final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_ShouldShowPlayerNotification) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_ShouldShowPlayerNotification");
static_assert(sizeof(BP_UPPlayerController_C_ShouldShowPlayerNotification) == 0x000020, "Wrong size on BP_UPPlayerController_C_ShouldShowPlayerNotification");
static_assert(offsetof(BP_UPPlayerController_C_ShouldShowPlayerNotification, Result) == 0x000000, "Member 'BP_UPPlayerController_C_ShouldShowPlayerNotification::Result' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShouldShowPlayerNotification, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_UPPlayerController_C_ShouldShowPlayerNotification::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShouldShowPlayerNotification, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000010, "Member 'BP_UPPlayerController_C_ShouldShowPlayerNotification::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShouldShowPlayerNotification, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UPPlayerController_C_ShouldShowPlayerNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShouldShowPlayerNotification, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_UPPlayerController_C_ShouldShowPlayerNotification::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShouldShowPlayerNotification, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_UPPlayerController_C_ShouldShowPlayerNotification::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.ShowLocalNotification
// 0x0038 (0x0038 - 0x0000)
struct BP_UPPlayerController_C_ShowLocalNotification final
{
public:
	class FString                                 Notification;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UW_HudParent_C*                         CallFunc_GetHudParent_HudParent;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_FindHudWidget_Widget;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_MainHUD_C*                           K2Node_DynamicCast_AsW_Main_HUD;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_ShowLocalNotification) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_ShowLocalNotification");
static_assert(sizeof(BP_UPPlayerController_C_ShowLocalNotification) == 0x000038, "Wrong size on BP_UPPlayerController_C_ShowLocalNotification");
static_assert(offsetof(BP_UPPlayerController_C_ShowLocalNotification, Notification) == 0x000000, "Member 'BP_UPPlayerController_C_ShowLocalNotification::Notification' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShowLocalNotification, CallFunc_GetHudParent_HudParent) == 0x000010, "Member 'BP_UPPlayerController_C_ShowLocalNotification::CallFunc_GetHudParent_HudParent' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShowLocalNotification, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_UPPlayerController_C_ShowLocalNotification::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShowLocalNotification, CallFunc_FindHudWidget_Widget) == 0x000020, "Member 'BP_UPPlayerController_C_ShowLocalNotification::CallFunc_FindHudWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShowLocalNotification, K2Node_DynamicCast_AsW_Main_HUD) == 0x000028, "Member 'BP_UPPlayerController_C_ShowLocalNotification::K2Node_DynamicCast_AsW_Main_HUD' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_ShowLocalNotification, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_UPPlayerController_C_ShowLocalNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.StartCameraShake (Server)
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_StartCameraShake__Server_ final
{
public:
	TSubclassOf<class UCameraShakeBase>           ShakeClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CameraShakeIndex;                                  // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCameraShakeIndex_Index;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_StartCameraShake__Server_) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_StartCameraShake__Server_");
static_assert(sizeof(BP_UPPlayerController_C_StartCameraShake__Server_) == 0x000018, "Wrong size on BP_UPPlayerController_C_StartCameraShake__Server_");
static_assert(offsetof(BP_UPPlayerController_C_StartCameraShake__Server_, ShakeClass) == 0x000000, "Member 'BP_UPPlayerController_C_StartCameraShake__Server_::ShakeClass' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_StartCameraShake__Server_, Scale) == 0x000008, "Member 'BP_UPPlayerController_C_StartCameraShake__Server_::Scale' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_StartCameraShake__Server_, CameraShakeIndex) == 0x00000C, "Member 'BP_UPPlayerController_C_StartCameraShake__Server_::CameraShakeIndex' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_StartCameraShake__Server_, CallFunc_GetCameraShakeIndex_Index) == 0x000010, "Member 'BP_UPPlayerController_C_StartCameraShake__Server_::CallFunc_GetCameraShakeIndex_Index' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.StartCameraShake_Client
// 0x0010 (0x0010 - 0x0000)
struct BP_UPPlayerController_C_StartCameraShake_Client final
{
public:
	TSubclassOf<class UCameraShakeBase>           ShakeClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CameraShakeIndex;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_StartCameraShake_Client) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_StartCameraShake_Client");
static_assert(sizeof(BP_UPPlayerController_C_StartCameraShake_Client) == 0x000010, "Wrong size on BP_UPPlayerController_C_StartCameraShake_Client");
static_assert(offsetof(BP_UPPlayerController_C_StartCameraShake_Client, ShakeClass) == 0x000000, "Member 'BP_UPPlayerController_C_StartCameraShake_Client::ShakeClass' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_StartCameraShake_Client, Scale) == 0x000008, "Member 'BP_UPPlayerController_C_StartCameraShake_Client::Scale' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_StartCameraShake_Client, CameraShakeIndex) == 0x00000C, "Member 'BP_UPPlayerController_C_StartCameraShake_Client::CameraShakeIndex' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.StopCameraShake
// 0x0004 (0x0004 - 0x0000)
struct BP_UPPlayerController_C_StopCameraShake final
{
public:
	int32                                         CameraShakeIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_StopCameraShake) == 0x000004, "Wrong alignment on BP_UPPlayerController_C_StopCameraShake");
static_assert(sizeof(BP_UPPlayerController_C_StopCameraShake) == 0x000004, "Wrong size on BP_UPPlayerController_C_StopCameraShake");
static_assert(offsetof(BP_UPPlayerController_C_StopCameraShake, CameraShakeIndex) == 0x000000, "Member 'BP_UPPlayerController_C_StopCameraShake::CameraShakeIndex' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.UpdateAspectRatio
// 0x0018 (0x0018 - 0x0000)
struct BP_UPPlayerController_C_UpdateAspectRatio final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ratio;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_UpdateAspectRatio) == 0x000008, "Wrong alignment on BP_UPPlayerController_C_UpdateAspectRatio");
static_assert(sizeof(BP_UPPlayerController_C_UpdateAspectRatio) == 0x000018, "Wrong size on BP_UPPlayerController_C_UpdateAspectRatio");
static_assert(offsetof(BP_UPPlayerController_C_UpdateAspectRatio, Size) == 0x000000, "Member 'BP_UPPlayerController_C_UpdateAspectRatio::Size' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerController_C_UpdateAspectRatio, Ratio) == 0x000010, "Member 'BP_UPPlayerController_C_UpdateAspectRatio::Ratio' has a wrong offset!");

// Function BP_UPPlayerController.BP_UPPlayerController_C.UpdateGamepadUsage
// 0x0001 (0x0001 - 0x0000)
struct BP_UPPlayerController_C_UpdateGamepadUsage final
{
public:
	bool                                          IsUsingGamepad;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerController_C_UpdateGamepadUsage) == 0x000001, "Wrong alignment on BP_UPPlayerController_C_UpdateGamepadUsage");
static_assert(sizeof(BP_UPPlayerController_C_UpdateGamepadUsage) == 0x000001, "Wrong size on BP_UPPlayerController_C_UpdateGamepadUsage");
static_assert(offsetof(BP_UPPlayerController_C_UpdateGamepadUsage, IsUsingGamepad) == 0x000000, "Member 'BP_UPPlayerController_C_UpdateGamepadUsage::IsUsingGamepad' has a wrong offset!");

}

