#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_GetLandingPoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_GetLandingPoint.BTT_GetLandingPoint_C.ExecuteUbergraph_BTT_GetLandingPoint
// 0x0060 (0x0060 - 0x0000)
struct BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLandingPoint_Success;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLandingPoint_LandingPoint;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint) == 0x000008, "Wrong alignment on BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint");
static_assert(sizeof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint) == 0x000060, "Wrong size on BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint");
static_assert(offsetof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint, EntryPoint) == 0x000000, "Member 'BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000008, "Member 'BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint, K2Node_Event_OwnerController) == 0x000030, "Member 'BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint, K2Node_Event_ControlledPawn) == 0x000038, "Member 'BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint, CallFunc_GetLandingPoint_Success) == 0x000040, "Member 'BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint::CallFunc_GetLandingPoint_Success' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint, CallFunc_GetLandingPoint_LandingPoint) == 0x000048, "Member 'BTT_GetLandingPoint_C_ExecuteUbergraph_BTT_GetLandingPoint::CallFunc_GetLandingPoint_LandingPoint' has a wrong offset!");

// Function BTT_GetLandingPoint.BTT_GetLandingPoint_C.GetLandingPoint
// 0x00C0 (0x00C0 - 0x0000)
struct BTT_GetLandingPoint_C_GetLandingPoint final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          AIController;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LandingPoint;                                      // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         CallFunc_GetControllerNavData_NavData;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetLandingPoint_C_GetLandingPoint) == 0x000008, "Wrong alignment on BTT_GetLandingPoint_C_GetLandingPoint");
static_assert(sizeof(BTT_GetLandingPoint_C_GetLandingPoint) == 0x0000C0, "Wrong size on BTT_GetLandingPoint_C_GetLandingPoint");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, TargetLocation) == 0x000000, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::TargetLocation' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, AIController) == 0x000018, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::AIController' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, Success) == 0x000020, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::Success' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, LandingPoint) == 0x000028, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::LandingPoint' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_GetControllerNavData_NavData) == 0x000040, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_GetControllerNavData_NavData' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_BreakVector_X) == 0x000048, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_BreakVector_Y) == 0x000050, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_BreakVector_Z) == 0x000058, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, Temp_int_Variable) == 0x000060, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation) == 0x000068, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue) == 0x000080, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000081, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_BreakVector_X_1) == 0x000088, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_BreakVector_Y_1) == 0x000090, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_BreakVector_Z_1) == 0x000098, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_Abs_ReturnValue) == 0x0000B0, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_GetLandingPoint, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BTT_GetLandingPoint_C_GetLandingPoint::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BTT_GetLandingPoint.BTT_GetLandingPoint_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_GetLandingPoint_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetLandingPoint_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_GetLandingPoint_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_GetLandingPoint_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_GetLandingPoint_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_GetLandingPoint_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_GetLandingPoint_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_GetLandingPoint_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_GetLandingPoint_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

