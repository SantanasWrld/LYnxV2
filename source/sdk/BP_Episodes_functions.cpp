#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Episodes

#include "Basic.hpp"

#include "BP_Episodes_classes.hpp"
#include "BP_Episodes_parameters.hpp"


namespace SDK
{

// Function BP_Episodes.BP_Episodes_C.ApplyCustomGameConfig
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::ApplyCustomGameConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "ApplyCustomGameConfig");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.ArePlayerStatesReady
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Ready                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::ArePlayerStatesReady(bool* Ready)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "ArePlayerStatesReady");

	Params::BP_Episodes_C_ArePlayerStatesReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ready != nullptr)
		*Ready = Parms.Ready;
}


// Function BP_Episodes.BP_Episodes_C.CheckEpisodeEndAchievements
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::CheckEpisodeEndAchievements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "CheckEpisodeEndAchievements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.CheckPerfectScoreAchievement
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::CheckPerfectScoreAchievement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "CheckPerfectScoreAchievement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.CheckPlayersCountAchievements
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::CheckPlayersCountAchievements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "CheckPlayersCountAchievements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.CheckScoreAchievements
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::CheckScoreAchievements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "CheckScoreAchievements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.CheckTopCapturesAchivements
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::CheckTopCapturesAchivements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "CheckTopCapturesAchivements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.CreateSave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_EpisodesSave_C**              OutputPin                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::CreateSave(class UBP_EpisodesSave_C** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "CreateSave");

	Params::BP_Episodes_C_CreateSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function BP_Episodes.BP_Episodes_C.CreateWidgetIfNeeded
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::CreateWidgetIfNeeded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "CreateWidgetIfNeeded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.DayEnded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SessionPoints                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::DayEnded(int32 SessionPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "DayEnded");

	Params::BP_Episodes_C_DayEnded Parms{};

	Parms.SessionPoints = SessionPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Episodes.BP_Episodes_C.EndEpisode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Failure                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::EndEpisode(bool Failure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "EndEpisode");

	Params::BP_Episodes_C_EndEpisode Parms{};

	Parms.Failure = Failure;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Episodes.BP_Episodes_C.ExecuteUbergraph_BP_Episodes
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::ExecuteUbergraph_BP_Episodes(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "ExecuteUbergraph_BP_Episodes");

	Params::BP_Episodes_C_ExecuteUbergraph_BP_Episodes Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Episodes.BP_Episodes_C.GetDeadPlayerNames
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>*                  PlayerNames                                            (Parm, OutParm)

void ABP_Episodes_C::GetDeadPlayerNames(TArray<class FString>* PlayerNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "GetDeadPlayerNames");

	Params::BP_Episodes_C_GetDeadPlayerNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerNames != nullptr)
		*PlayerNames = std::move(Parms.PlayerNames);
}


// Function BP_Episodes.BP_Episodes_C.GetEpisodeDefinition
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Difficulty                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_EpisodeDefinition*            EpisodeDefinition_0                                    (Parm, OutParm, HasGetValueTypeHash)

void ABP_Episodes_C::GetEpisodeDefinition(int32 Difficulty, struct FS_EpisodeDefinition* EpisodeDefinition_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "GetEpisodeDefinition");

	Params::BP_Episodes_C_GetEpisodeDefinition Parms{};

	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);

	if (EpisodeDefinition_0 != nullptr)
		*EpisodeDefinition_0 = std::move(Parms.EpisodeDefinition_0);
}


// Function BP_Episodes.BP_Episodes_C.GetMaxDifficulty
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  MaxDifficulty                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::GetMaxDifficulty(int32* MaxDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "GetMaxDifficulty");

	Params::BP_Episodes_C_GetMaxDifficulty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxDifficulty != nullptr)
		*MaxDifficulty = Parms.MaxDifficulty;
}


// Function BP_Episodes.BP_Episodes_C.GetNextSessionMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString*                          MapName                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Episodes_C::GetNextSessionMap(class FString* MapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "GetNextSessionMap");

	Params::BP_Episodes_C_GetNextSessionMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapName != nullptr)
		*MapName = std::move(Parms.MapName);
}


// Function BP_Episodes.BP_Episodes_C.GetRemainingDays
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  RemainingDays                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::GetRemainingDays(int32* RemainingDays)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "GetRemainingDays");

	Params::BP_Episodes_C_GetRemainingDays Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingDays != nullptr)
		*RemainingDays = Parms.RemainingDays;
}


// Function BP_Episodes.BP_Episodes_C.GiveReward
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Reward                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::GiveReward(int32 Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "GiveReward");

	Params::BP_Episodes_C_GiveReward Parms{};

	Parms.Reward = Reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Episodes.BP_Episodes_C.Init (All)
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::Init__All_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "Init (All)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.Init (Server)
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::Init__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "Init (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.LoadEpisodes
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::LoadEpisodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "LoadEpisodes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.LoadSave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::LoadSave(class USaveGame* SaveObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "LoadSave");

	Params::BP_Episodes_C_LoadSave Parms{};

	Parms.SaveObject = SaveObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Episodes.BP_Episodes_C.Multicast OnDayEnded
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::Multicast_OnDayEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "Multicast OnDayEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Episodes_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "ReceiveEndPlay");

	Params::BP_Episodes_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Episodes.BP_Episodes_C.ResetProgression
// (BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::ResetProgression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "ResetProgression");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.RestartFromZero
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Failure                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::RestartFromZero(bool Failure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "RestartFromZero");

	Params::BP_Episodes_C_RestartFromZero Parms{};

	Parms.Failure = Failure;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Episodes.BP_Episodes_C.SaveEpisodes
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Episodes_C::SaveEpisodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "SaveEpisodes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Episodes.BP_Episodes_C.StartNewEpisode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Difficulty                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Episodes_C::StartNewEpisode(int32 Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Episodes_C", "StartNewEpisode");

	Params::BP_Episodes_C_StartNewEpisode Parms{};

	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);
}

}

