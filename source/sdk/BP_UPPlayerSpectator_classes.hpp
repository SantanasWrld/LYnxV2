#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPPlayerSpectator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UPPlayerSpectator.BP_UPPlayerSpectator_C
// 0x0060 (0x0380 - 0x0320)
class ABP_UPPlayerSpectator_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFloatingPawnMovement*                  FloatingPawnMovement;                              // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UW_Spectate_C*                          Widget;                                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                LocalPlayer;                                       // 0x0350(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class ABP_UPPlayerCharacter_C*>        Players;                                           // 0x0358(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         FollowedPlayerIndex;                               // 0x0368(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerController_C*               PlayerController;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              DeathSound;                                        // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeFollowedPlayer();
	void CreateWidget();
	void ExecuteUbergraph_BP_UPPlayerSpectator(int32 EntryPoint);
	void FindPlayers(class ABP_UPPlayerCharacter_C* LocalPlayer_0);
	void GetPlayerMeshLocation(class ABP_UPPlayerCharacter_C* Player, struct FVector* Location);
	void InpActEvt_IA_ChangeSpectate_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void ReceiveBeginPlay();
	void ReceiveControllerChanged(class AController* OldController, class AController* NewController);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void UpdateCameraAspectRatio();
	void UpdateLocation();
	void UpdatePawnMovement();
	void UpdateWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UPPlayerSpectator_C">();
	}
	static class ABP_UPPlayerSpectator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_UPPlayerSpectator_C>();
	}
};
static_assert(alignof(ABP_UPPlayerSpectator_C) == 0x000008, "Wrong alignment on ABP_UPPlayerSpectator_C");
static_assert(sizeof(ABP_UPPlayerSpectator_C) == 0x000380, "Wrong size on ABP_UPPlayerSpectator_C");
static_assert(offsetof(ABP_UPPlayerSpectator_C, UberGraphFrame) == 0x000320, "Member 'ABP_UPPlayerSpectator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, FloatingPawnMovement) == 0x000328, "Member 'ABP_UPPlayerSpectator_C::FloatingPawnMovement' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, Camera) == 0x000330, "Member 'ABP_UPPlayerSpectator_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, SpringArm) == 0x000338, "Member 'ABP_UPPlayerSpectator_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, DefaultSceneRoot) == 0x000340, "Member 'ABP_UPPlayerSpectator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, Widget) == 0x000348, "Member 'ABP_UPPlayerSpectator_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, LocalPlayer) == 0x000350, "Member 'ABP_UPPlayerSpectator_C::LocalPlayer' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, Players) == 0x000358, "Member 'ABP_UPPlayerSpectator_C::Players' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, FollowedPlayerIndex) == 0x000368, "Member 'ABP_UPPlayerSpectator_C::FollowedPlayerIndex' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, PlayerController) == 0x000370, "Member 'ABP_UPPlayerSpectator_C::PlayerController' has a wrong offset!");
static_assert(offsetof(ABP_UPPlayerSpectator_C, DeathSound) == 0x000378, "Member 'ABP_UPPlayerSpectator_C::DeathSound' has a wrong offset!");

}

