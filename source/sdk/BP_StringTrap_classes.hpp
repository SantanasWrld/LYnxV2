#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StringTrap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_StringTrap.BP_StringTrap_C
// 0x0110 (0x03A8 - 0x0298)
class ABP_StringTrap_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_ScoringComponent_C*                Scoring;                                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        Cable;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MonsterMesh;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      InteractionCollision;                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    CableEnd;                                          // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_PlayersProximity_C*                Players_Proximity;                                 // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DetectionBox;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BotMesh;                                           // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        InteractDuration;                                  // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InteractDistance;                                  // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   InteractionText;                                   // 0x0300(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                TopLocation;                                       // 0x0318(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBroken;                                          // 0x0330(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTriggered;                                       // 0x0331(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332[0x6];                                      // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                HangedTarget;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DamageDelay;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DamageTimerHandle;                                 // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, bool>                     Affinities;                                        // 0x0358(0x0050)(Edit, BlueprintVisible)

public:
	void BndEvt__StringTrap_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__StringTrap_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void DamageHangedTarget();
	void ExecuteUbergraph_BP_StringTrap(int32 EntryPoint);
	void GetInteractDistance(double* Distance);
	void GetInteractDuration(double* Duration);
	void GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange);
	void GetInteractText(class FText* Text);
	void HangSFX();
	void HasHarmed__All_(TScriptInterface<class IBPI_Killable_C> HarmedActor);
	void HasHarmed__Server_(TScriptInterface<class IBPI_Killable_C> HarmedActor);
	void HasKilled__All_(TScriptInterface<class IBPI_Killable_C> KilledActor);
	void HasKilled__Server_(TScriptInterface<class IBPI_Killable_C> KilledActor);
	void Interact(class ABP_UPPlayerCharacter_C* Player);
	void InteractionStarted();
	void InteractionStopped();
	void IsTriggerActor(class AActor* Actor, bool* Result, class ABP_KillableCharacter_C** Character);
	void OnRep_HangedTarget();
	void OnRep_IsBroken();
	void OnRep_IsTriggered();
	void OnRep_TopLocation();
	void ReceiveBeginPlay();
	void UpdateInteractionCollision();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StringTrap_C">();
	}
	static class ABP_StringTrap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_StringTrap_C>();
	}
};
static_assert(alignof(ABP_StringTrap_C) == 0x000008, "Wrong alignment on ABP_StringTrap_C");
static_assert(sizeof(ABP_StringTrap_C) == 0x0003A8, "Wrong size on ABP_StringTrap_C");
static_assert(offsetof(ABP_StringTrap_C, UberGraphFrame) == 0x000298, "Member 'ABP_StringTrap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, Scoring) == 0x0002A0, "Member 'ABP_StringTrap_C::Scoring' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, PhysicsConstraint) == 0x0002A8, "Member 'ABP_StringTrap_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, Cable) == 0x0002B0, "Member 'ABP_StringTrap_C::Cable' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, MonsterMesh) == 0x0002B8, "Member 'ABP_StringTrap_C::MonsterMesh' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, InteractionCollision) == 0x0002C0, "Member 'ABP_StringTrap_C::InteractionCollision' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, CableEnd) == 0x0002C8, "Member 'ABP_StringTrap_C::CableEnd' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, Players_Proximity) == 0x0002D0, "Member 'ABP_StringTrap_C::Players_Proximity' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, DetectionBox) == 0x0002D8, "Member 'ABP_StringTrap_C::DetectionBox' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, BotMesh) == 0x0002E0, "Member 'ABP_StringTrap_C::BotMesh' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, DefaultSceneRoot) == 0x0002E8, "Member 'ABP_StringTrap_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, InteractDuration) == 0x0002F0, "Member 'ABP_StringTrap_C::InteractDuration' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, InteractDistance) == 0x0002F8, "Member 'ABP_StringTrap_C::InteractDistance' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, InteractionText) == 0x000300, "Member 'ABP_StringTrap_C::InteractionText' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, TopLocation) == 0x000318, "Member 'ABP_StringTrap_C::TopLocation' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, IsBroken) == 0x000330, "Member 'ABP_StringTrap_C::IsBroken' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, IsTriggered) == 0x000331, "Member 'ABP_StringTrap_C::IsTriggered' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, HangedTarget) == 0x000338, "Member 'ABP_StringTrap_C::HangedTarget' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, Damage) == 0x000340, "Member 'ABP_StringTrap_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, DamageDelay) == 0x000348, "Member 'ABP_StringTrap_C::DamageDelay' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, DamageTimerHandle) == 0x000350, "Member 'ABP_StringTrap_C::DamageTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_StringTrap_C, Affinities) == 0x000358, "Member 'ABP_StringTrap_C::Affinities' has a wrong offset!");

}

