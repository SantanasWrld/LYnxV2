#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_PlayerFear

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_PlayerFear.BPC_PlayerFear_C
// 0x07C0 (0x0A60 - 0x02A0)
class UBPC_PlayerFear_C final : public USceneComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       FearDetector;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FearReductionDelay;                                // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FearReductionPerSecond;                            // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   PostProcessSettings;                               // 0x02D0(0x06E0)(Edit, BlueprintVisible)
	class UCurveFloat*                            PostProcessWeightForFear;                          // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        PostProcessMaxDeltaWeight;                         // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UBPC_FearSource_C*>              FearSources;                                       // 0x09C8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TSet<class UBPC_FearSource_C*>                JumpFearSources;                                   // 0x09D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        Fear;                                              // 0x0A28(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              FearSoundCue;                                      // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FearAudio;                                         // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        FirstFearThreshold;                                // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FearSoundEnabled;                                  // 0x0A48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A49[0x7];                                      // 0x0A49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  PostProcess;                                       // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        LastActiveFearTime;                                // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BPC_PlayerFear(int32 EntryPoint);
	void GetActiveFear(bool* Active, double* FearPerSecond, double* MinFear, double* MaxFear);
	void InitAudioComponent();
	void InitPostProcess();
	void InstantFear(double MinFear);
	void IsInSight(class UBPC_FearSource_C* FearSource, bool* Result);
	void OnRep_Fear();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RegisterOverlapEvents();
	void SetFearSoundEnabled(bool Enabled);
	void UpdateFearSound();
	void UpdatePostProcess();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_PlayerFear_C">();
	}
	static class UBPC_PlayerFear_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_PlayerFear_C>();
	}
};
static_assert(alignof(UBPC_PlayerFear_C) == 0x000010, "Wrong alignment on UBPC_PlayerFear_C");
static_assert(sizeof(UBPC_PlayerFear_C) == 0x000A60, "Wrong size on UBPC_PlayerFear_C");
static_assert(offsetof(UBPC_PlayerFear_C, UberGraphFrame) == 0x0002A0, "Member 'UBPC_PlayerFear_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, FearDetector) == 0x0002A8, "Member 'UBPC_PlayerFear_C::FearDetector' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, Radius) == 0x0002B0, "Member 'UBPC_PlayerFear_C::Radius' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, FearReductionDelay) == 0x0002B8, "Member 'UBPC_PlayerFear_C::FearReductionDelay' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, FearReductionPerSecond) == 0x0002C0, "Member 'UBPC_PlayerFear_C::FearReductionPerSecond' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, PostProcessSettings) == 0x0002D0, "Member 'UBPC_PlayerFear_C::PostProcessSettings' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, PostProcessWeightForFear) == 0x0009B0, "Member 'UBPC_PlayerFear_C::PostProcessWeightForFear' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, PostProcessMaxDeltaWeight) == 0x0009B8, "Member 'UBPC_PlayerFear_C::PostProcessMaxDeltaWeight' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, Player) == 0x0009C0, "Member 'UBPC_PlayerFear_C::Player' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, FearSources) == 0x0009C8, "Member 'UBPC_PlayerFear_C::FearSources' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, JumpFearSources) == 0x0009D8, "Member 'UBPC_PlayerFear_C::JumpFearSources' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, Fear) == 0x000A28, "Member 'UBPC_PlayerFear_C::Fear' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, FearSoundCue) == 0x000A30, "Member 'UBPC_PlayerFear_C::FearSoundCue' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, FearAudio) == 0x000A38, "Member 'UBPC_PlayerFear_C::FearAudio' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, FirstFearThreshold) == 0x000A40, "Member 'UBPC_PlayerFear_C::FirstFearThreshold' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, FearSoundEnabled) == 0x000A48, "Member 'UBPC_PlayerFear_C::FearSoundEnabled' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, PostProcess) == 0x000A50, "Member 'UBPC_PlayerFear_C::PostProcess' has a wrong offset!");
static_assert(offsetof(UBPC_PlayerFear_C, LastActiveFearTime) == 0x000A58, "Member 'UBPC_PlayerFear_C::LastActiveFearTime' has a wrong offset!");

}

