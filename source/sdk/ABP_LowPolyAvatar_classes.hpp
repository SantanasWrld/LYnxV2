#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_LowPolyAvatar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_LowPolyAvatar_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "E_InteriorSurvivorState_structs.hpp"
#include "E_InventoryItem_structs.hpp"
#include "E_Emote_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_LowPolyAvatar.ABP_LowPolyAvatar_C
// 0x2130 (0x2480 - 0x0350)
class UABP_LowPolyAvatar_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_LowPolyAvatar::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;            // 0x0358(0x0024)(HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0380(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_BlendSpaceGraph;            // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0458(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0688(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x06B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x06D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0700(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0728(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0750(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0778(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x07A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x07C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x07F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0818(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0840(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x0868(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x08B0(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_4;                      // 0x08D0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x0948(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_3;                      // 0x0968(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x09E0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x0A00(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_4;            // 0x0A48(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x0A68(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_3;            // 0x0AB0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x0AD0(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_2;            // 0x0B18(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_2;                      // 0x0B38(0x0078)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_1;            // 0x0BB0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x0BD0(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult;              // 0x0C18(0x0020)()
	struct FAnimNode_BlendSpaceGraph              AnimGraphNode_BlendSpaceGraph;                     // 0x0C38(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x0CA0(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_1;                      // 0x0CC0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x0D38(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x0D58(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0DA0(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_4;                      // 0x0DC0(0x0010)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel_3;                // 0x0DD0(0x0068)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x0E38(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0E80(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0EA0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x0EE8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x0F30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x0F78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0FC0(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_3;                      // 0x1008(0x0010)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1018(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1060(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x10A8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x10F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x1138(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x1158(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x11D0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x11F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1238(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1258(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x12A0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x12C0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1330(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_2;                      // 0x1350(0x0010)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel_2;                // 0x1360(0x0068)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x13C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1410(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x1430(0x0010)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel_1;                // 0x1440(0x0068)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x14A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x14F0(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x1510(0x0010)()
	struct FAnimNode_BlendBoneByChannel           AnimGraphNode_BlendBoneByChannel;                  // 0x1520(0x0068)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1588(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x15D0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x15F0(0x0070)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1660(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x16A8(0x00F0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1798(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x17E0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1850(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1870(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x1938(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1A60(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1A80(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1AA0(0x0128)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1BC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1BF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1C18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1C40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1C68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1C90(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1CB8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1D00(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1D20(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1D68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1DB0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1DF8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1E40(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1E88(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1EA8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1EF0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1F10(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1F58(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1F78(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x2040(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2130(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2258(0x0128)()
	bool                                          IsInAir;                                           // 0x2380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouched;                                        // 0x2381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2382[0x6];                                     // 0x2382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x2388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound;                                             // 0x2390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x2398(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction;                                         // 0x23B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHoldingRifle;                                    // 0x23B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAiming;                                          // 0x23B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShootingRifle;                                   // 0x23B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B7[0x1];                                     // 0x23B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EPhysicalSurface Surface)> OnFootstep;                             // 0x23B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OverrideLookRotation;                              // 0x23C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C9[0x7];                                     // 0x23C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               LookRotation;                                      // 0x23D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LookAround;                                        // 0x23E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InventoryItem                               ItemEquipped;                                      // 0x23E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFocused;                                       // 0x23EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInSelfie;                                        // 0x23EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSpeaking;                                        // 0x23EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Emote                                       CurrentEmote;                                      // 0x23ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAfraid;                                          // 0x23EE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSitted;                                          // 0x23EF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x23F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23F1[0x7];                                     // 0x23F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPhysicalSurface, class USoundBase*>     FootstepSounds;                                    // 0x23F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UCurveFloat*                            FootstepVolumeForSpeed;                            // 0x2448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        HeadScale;                                         // 0x2450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NeckOffset;                                        // 0x2458(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundCue*                              ClothSound;                                        // 0x2470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_InteriorSurvivorState                       SurvivorState;                                     // 0x2478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep_Notify();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_LayeredBoneBlend_A4B62D4F411454CD6A8F8BAE43B65F9C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_ModifyBone_14E631C24EEE133B5B645882635E7A8A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_SequencePlayer_180BF08E4E6B72F073FF1782D7E0D252();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_0E45D5044DA3DF5D97B6FAAF18EDD613();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_175FFF54400CA0EC412B7083B0989D7E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_281E36604A3DE6F5860C7A925104FCF0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_2D80DE0A4A165D1CC44D488C5558F97C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_5C7506B24253E169EA7A2993EC203FE1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_5FDEE4D246044F5D42F5FCAC20444179();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_6A50F46445C8D2874901B7983801EBBF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_7155F1D648531724F03BD485B39990BE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_7A2048F54201C271B3B97EBDCD5CC21F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_7A591BE4423D895286D93BBDB7CC552B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_85C7990B43A47C33217672A0E8BCC9F9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_92656D1046B91C2EF05967A05482BE69();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_9369FBA1409A86596F1076A5141D45D8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_9AD8B978443EEA7A38F2858849F93A3E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_BFAD820C40FB350EB2857880034B9A14();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_C144F01A49FB0017799E0581906A5F62();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_F5AE3B6A49C62706D023BA99C66A6B4A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_LowPolyAvatar_AnimGraphNode_TransitionResult_F867B5374C7EFB9ED9010FA7431019DF();
	void ExecuteUbergraph_ABP_LowPolyAvatar(int32 EntryPoint);
	void GetFootstepSound(EPhysicalSurface Selection, class USoundBase** Sound_0);
	void GetItemAnim(bool* HasAnim, class UAnimSequence** Anim);
	void IsCameroid(E_InventoryItem Item, bool* Result);
	void PlayClothSound();
	void UpdateInfected(class ABP_Infected_C* Infected);
	void UpdateMilitary(class ABP_Military_C* Military);
	void UpdatePlayerAnim(class ABP_UPPlayerCharacter_C* Player);
	void UpdateSurvivorAnim(class ABP_Survivor_Exterior_C* Survivor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_LowPolyAvatar_C">();
	}
	static class UABP_LowPolyAvatar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_LowPolyAvatar_C>();
	}
};
static_assert(alignof(UABP_LowPolyAvatar_C) == 0x000010, "Wrong alignment on UABP_LowPolyAvatar_C");
static_assert(sizeof(UABP_LowPolyAvatar_C) == 0x002480, "Wrong size on UABP_LowPolyAvatar_C");
static_assert(offsetof(UABP_LowPolyAvatar_C, UberGraphFrame) == 0x000350, "Member 'UABP_LowPolyAvatar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_LowPolyAvatar_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimBlueprintExtension_PropertyAccess) == 0x000380, "Member 'UABP_LowPolyAvatar_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimBlueprintExtension_BlendSpaceGraph) == 0x000388, "Member 'UABP_LowPolyAvatar_C::AnimBlueprintExtension_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UABP_LowPolyAvatar_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_Root) == 0x000398, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_35) == 0x0003B8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_34) == 0x0003E0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_33) == 0x000408, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_32) == 0x000430, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_31) == 0x000458, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_30) == 0x000480, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_29) == 0x0004A8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_28) == 0x0004D0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_27) == 0x0004F8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_26) == 0x000520, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_25) == 0x000548, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_24) == 0x000570, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_23) == 0x000598, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_22) == 0x0005C0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_21) == 0x0005E8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_20) == 0x000610, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_19) == 0x000638, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_18) == 0x000660, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_17) == 0x000688, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_16) == 0x0006B0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_15) == 0x0006D8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_14) == 0x000700, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_13) == 0x000728, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_12) == 0x000750, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_11) == 0x000778, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_10) == 0x0007A0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_9) == 0x0007C8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_8) == 0x0007F0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_7) == 0x000818, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_6) == 0x000840, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_27) == 0x000868, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_19) == 0x0008B0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_RandomPlayer_4) == 0x0008D0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_RandomPlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_18) == 0x000948, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_RandomPlayer_3) == 0x000968, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_RandomPlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_17) == 0x0009E0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_26) == 0x000A00, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpaceSampleResult_4) == 0x000A48, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpaceSampleResult_4' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_25) == 0x000A68, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpaceSampleResult_3) == 0x000AB0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpaceSampleResult_3' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_24) == 0x000AD0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpaceSampleResult_2) == 0x000B18, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpaceSampleResult_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_RandomPlayer_2) == 0x000B38, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_RandomPlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpaceSampleResult_1) == 0x000BB0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpaceSampleResult_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_23) == 0x000BD0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpaceSampleResult) == 0x000C18, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpaceSampleResult' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpaceGraph) == 0x000C38, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_16) == 0x000CA0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_RandomPlayer_1) == 0x000CC0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_RandomPlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_15) == 0x000D38, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_22) == 0x000D58, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_14) == 0x000DA0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_LocalRefPose_4) == 0x000DC0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_LocalRefPose_4' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendBoneByChannel_3) == 0x000DD0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendBoneByChannel_3' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_21) == 0x000E38, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_13) == 0x000E80, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_20) == 0x000EA0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_19) == 0x000EE8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_18) == 0x000F30, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_17) == 0x000F78, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_16) == 0x000FC0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_LocalRefPose_3) == 0x001008, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_LocalRefPose_3' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_15) == 0x001018, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_14) == 0x001060, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_13) == 0x0010A8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendListByEnum_1) == 0x0010F0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_12) == 0x001138, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_RandomPlayer) == 0x001158, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_11) == 0x0011D0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_12) == 0x0011F0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_10) == 0x001238, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_11) == 0x001258, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_9) == 0x0012A0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0012C0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_8) == 0x001330, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_LocalRefPose_2) == 0x001350, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_LocalRefPose_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendBoneByChannel_2) == 0x001360, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendBoneByChannel_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_10) == 0x0013C8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_7) == 0x001410, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_LocalRefPose_1) == 0x001430, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendBoneByChannel_1) == 0x001440, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendBoneByChannel_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_9) == 0x0014A8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_6) == 0x0014F0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_LocalRefPose) == 0x001510, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendBoneByChannel) == 0x001520, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendBoneByChannel' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_8) == 0x001588, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_5) == 0x0015D0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0015F0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_7) == 0x001660, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0016A8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendListByBool) == 0x001798, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendSpacePlayer) == 0x0017E0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_4) == 0x001850, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateMachine_1) == 0x001870, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_ModifyBone_3) == 0x001938, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_LocalToComponentSpace) == 0x001A60, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_ComponentToLocalSpace) == 0x001A80, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_ModifyBone_2) == 0x001AA0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_5) == 0x001BC8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_4) == 0x001BF0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_3) == 0x001C18, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_2) == 0x001C40, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult_1) == 0x001C68, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_TransitionResult) == 0x001C90, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_6) == 0x001CB8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_3) == 0x001D00, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_5) == 0x001D20, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_4) == 0x001D68, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_3) == 0x001DB0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_2) == 0x001DF8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_BlendListByEnum) == 0x001E40, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_2) == 0x001E88, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer_1) == 0x001EA8, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult_1) == 0x001EF0, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_SequencePlayer) == 0x001F10, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateResult) == 0x001F58, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_StateMachine) == 0x001F78, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_LayeredBoneBlend) == 0x002040, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_ModifyBone_1) == 0x002130, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, AnimGraphNode_ModifyBone) == 0x002258, "Member 'UABP_LowPolyAvatar_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsInAir) == 0x002380, "Member 'UABP_LowPolyAvatar_C::IsInAir' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsCrouched) == 0x002381, "Member 'UABP_LowPolyAvatar_C::IsCrouched' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, Speed) == 0x002388, "Member 'UABP_LowPolyAvatar_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, Sound) == 0x002390, "Member 'UABP_LowPolyAvatar_C::Sound' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, Location) == 0x002398, "Member 'UABP_LowPolyAvatar_C::Location' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, Direction) == 0x0023B0, "Member 'UABP_LowPolyAvatar_C::Direction' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsHoldingRifle) == 0x0023B4, "Member 'UABP_LowPolyAvatar_C::IsHoldingRifle' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsAiming) == 0x0023B5, "Member 'UABP_LowPolyAvatar_C::IsAiming' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsShootingRifle) == 0x0023B6, "Member 'UABP_LowPolyAvatar_C::IsShootingRifle' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, OnFootstep) == 0x0023B8, "Member 'UABP_LowPolyAvatar_C::OnFootstep' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, OverrideLookRotation) == 0x0023C8, "Member 'UABP_LowPolyAvatar_C::OverrideLookRotation' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, LookRotation) == 0x0023D0, "Member 'UABP_LowPolyAvatar_C::LookRotation' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, LookAround) == 0x0023E8, "Member 'UABP_LowPolyAvatar_C::LookAround' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, ItemEquipped) == 0x0023E9, "Member 'UABP_LowPolyAvatar_C::ItemEquipped' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, ItemFocused) == 0x0023EA, "Member 'UABP_LowPolyAvatar_C::ItemFocused' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsInSelfie) == 0x0023EB, "Member 'UABP_LowPolyAvatar_C::IsInSelfie' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsSpeaking) == 0x0023EC, "Member 'UABP_LowPolyAvatar_C::IsSpeaking' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, CurrentEmote) == 0x0023ED, "Member 'UABP_LowPolyAvatar_C::CurrentEmote' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsAfraid) == 0x0023EE, "Member 'UABP_LowPolyAvatar_C::IsAfraid' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsSitted) == 0x0023EF, "Member 'UABP_LowPolyAvatar_C::IsSitted' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, IsAttacking) == 0x0023F0, "Member 'UABP_LowPolyAvatar_C::IsAttacking' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, FootstepSounds) == 0x0023F8, "Member 'UABP_LowPolyAvatar_C::FootstepSounds' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, FootstepVolumeForSpeed) == 0x002448, "Member 'UABP_LowPolyAvatar_C::FootstepVolumeForSpeed' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, HeadScale) == 0x002450, "Member 'UABP_LowPolyAvatar_C::HeadScale' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, NeckOffset) == 0x002458, "Member 'UABP_LowPolyAvatar_C::NeckOffset' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, ClothSound) == 0x002470, "Member 'UABP_LowPolyAvatar_C::ClothSound' has a wrong offset!");
static_assert(offsetof(UABP_LowPolyAvatar_C, SurvivorState) == 0x002478, "Member 'UABP_LowPolyAvatar_C::SurvivorState' has a wrong offset!");

}

