#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_WeaponHolder

#include "Basic.hpp"

#include "BPI_WeaponHolder_classes.hpp"
#include "BPI_WeaponHolder_parameters.hpp"


namespace SDK
{

// Function BPI_WeaponHolder.BPI_WeaponHolder_C.CanShoot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_WeaponHolder_C::CanShoot(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_WeaponHolder_C", "CanShoot");

	Params::BPI_WeaponHolder_C_CanShoot Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPI_WeaponHolder.BPI_WeaponHolder_C.IsAiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Aiming                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_WeaponHolder_C::IsAiming(bool* Aiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_WeaponHolder_C", "IsAiming");

	Params::BPI_WeaponHolder_C_IsAiming Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Aiming != nullptr)
		*Aiming = Parms.Aiming;
}


// Function BPI_WeaponHolder.BPI_WeaponHolder_C.SetAiming
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_WeaponHolder_C::SetAiming(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_WeaponHolder_C", "SetAiming");

	Params::BPI_WeaponHolder_C_SetAiming Parms{};

	Parms.Value = Value;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_WeaponHolder.BPI_WeaponHolder_C.Shoot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_WeaponHolder_C::Shoot(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_WeaponHolder_C", "Shoot");

	Params::BPI_WeaponHolder_C_Shoot Parms{};

	Parms.TargetActor = TargetActor;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

