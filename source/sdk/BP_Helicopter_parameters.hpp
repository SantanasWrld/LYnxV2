#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Helicopter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Helicopter.BP_Helicopter_C.BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Helicopter_C_BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Helicopter.BP_Helicopter_C.Crash (Server)
// 0x0020 (0x0020 - 0x0000)
struct BP_Helicopter_C_Crash__Server_ final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Helicopter_C_Crash__Server_) == 0x000008, "Wrong alignment on BP_Helicopter_C_Crash__Server_");
static_assert(sizeof(BP_Helicopter_C_Crash__Server_) == 0x000020, "Wrong size on BP_Helicopter_C_Crash__Server_");
static_assert(offsetof(BP_Helicopter_C_Crash__Server_, Location) == 0x000000, "Member 'BP_Helicopter_C_Crash__Server_::Location' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_Crash__Server_, Intensity) == 0x000018, "Member 'BP_Helicopter_C_Crash__Server_::Intensity' has a wrong offset!");

// Function BP_Helicopter.BP_Helicopter_C.ExecuteUbergraph_BP_Helicopter
// 0x03D8 (0x03D8 - 0x0000)
struct BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0088(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_CustomEvent_Location_2;                     // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Intensity_1;                    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Intensity;                      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0210(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Killable_C>       K2Node_DynamicCast_AsBPI_Killable;                 // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead;                              // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Killable_C>       K2Node_DynamicCast_AsBPI_Killable_1;               // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0288(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Killable_C>       K2Node_DynamicCast_AsBPI_Killable_2;               // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_1;                            // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter) == 0x000008, "Wrong alignment on BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter");
static_assert(sizeof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter) == 0x0003D8, "Wrong size on BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, EntryPoint) == 0x000000, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_RandomUnitVector_ReturnValue) == 0x000008, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_Event_MyComp) == 0x000020, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_Event_Other) == 0x000028, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_Event_OtherComp) == 0x000030, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_Event_bSelfMoved) == 0x000038, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_Event_HitLocation) == 0x000040, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_Event_HitNormal) == 0x000058, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_Event_NormalImpulse) == 0x000070, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_Event_Hit) == 0x000088, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_CustomEvent_Location_2) == 0x000170, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_CustomEvent_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_CustomEvent_Intensity_1) == 0x000188, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_CustomEvent_Intensity_1' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000190, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_VSize_ReturnValue) == 0x0001A8, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0001B0, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, Temp_int_Array_Index_Variable) == 0x0001B8, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_HasAuthority_ReturnValue_1) == 0x0001BC, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_CustomEvent_Location_1) == 0x0001C0, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_CustomEvent_Location) == 0x0001D8, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_CustomEvent_Intensity) == 0x0001F0, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_CustomEvent_Intensity' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000200, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, Temp_int_Loop_Counter_Variable) == 0x000208, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000210, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Array_Get_Item) == 0x000220, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Array_Length_ReturnValue) == 0x000228, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_DynamicCast_AsBPI_Killable) == 0x000230, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_DynamicCast_AsBPI_Killable' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Less_IntInt_ReturnValue) == 0x000241, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_IsDead_Dead) == 0x000242, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_IsDead_Dead' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_DynamicCast_AsBPI_Killable_1) == 0x000248, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_DynamicCast_AsBPI_Killable_1' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Add_IntInt_ReturnValue) == 0x00025C, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_HasAuthority_ReturnValue_2) == 0x000260, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000268, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_ComponentBoundEvent_OtherActor) == 0x000270, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_ComponentBoundEvent_OtherComp) == 0x000278, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000280, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_ComponentBoundEvent_bFromSweep) == 0x000284, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_ComponentBoundEvent_SweepResult) == 0x000288, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000370, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_DynamicCast_AsBPI_Killable_2) == 0x000388, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_DynamicCast_AsBPI_Killable_2' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, K2Node_DynamicCast_bSuccess_2) == 0x000398, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0003A0, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_IsDead_Dead_1) == 0x0003B8, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_IsDead_Dead_1' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_IsOverlappingActor_ReturnValue) == 0x0003B9, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003C0, "Member 'BP_Helicopter_C_ExecuteUbergraph_BP_Helicopter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_Helicopter.BP_Helicopter_C.Explosion (All)
// 0x0020 (0x0020 - 0x0000)
struct BP_Helicopter_C_Explosion__All_ final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Helicopter_C_Explosion__All_) == 0x000008, "Wrong alignment on BP_Helicopter_C_Explosion__All_");
static_assert(sizeof(BP_Helicopter_C_Explosion__All_) == 0x000020, "Wrong size on BP_Helicopter_C_Explosion__All_");
static_assert(offsetof(BP_Helicopter_C_Explosion__All_, Location) == 0x000000, "Member 'BP_Helicopter_C_Explosion__All_::Location' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_Explosion__All_, Intensity) == 0x000018, "Member 'BP_Helicopter_C_Explosion__All_::Intensity' has a wrong offset!");

// Function BP_Helicopter.BP_Helicopter_C.MainCrash
// 0x0018 (0x0018 - 0x0000)
struct BP_Helicopter_C_MainCrash final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Helicopter_C_MainCrash) == 0x000008, "Wrong alignment on BP_Helicopter_C_MainCrash");
static_assert(sizeof(BP_Helicopter_C_MainCrash) == 0x000018, "Wrong size on BP_Helicopter_C_MainCrash");
static_assert(offsetof(BP_Helicopter_C_MainCrash, Location) == 0x000000, "Member 'BP_Helicopter_C_MainCrash::Location' has a wrong offset!");

// Function BP_Helicopter.BP_Helicopter_C.ReceiveHit
// 0x0150 (0x0150 - 0x0000)
struct BP_Helicopter_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Helicopter_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_Helicopter_C_ReceiveHit");
static_assert(sizeof(BP_Helicopter_C_ReceiveHit) == 0x000150, "Wrong size on BP_Helicopter_C_ReceiveHit");
static_assert(offsetof(BP_Helicopter_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_Helicopter_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ReceiveHit, Other) == 0x000008, "Member 'BP_Helicopter_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_Helicopter_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_Helicopter_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ReceiveHit, HitLocation) == 0x000020, "Member 'BP_Helicopter_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ReceiveHit, HitNormal) == 0x000038, "Member 'BP_Helicopter_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'BP_Helicopter_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Helicopter_C_ReceiveHit, Hit) == 0x000068, "Member 'BP_Helicopter_C_ReceiveHit::Hit' has a wrong offset!");

}

