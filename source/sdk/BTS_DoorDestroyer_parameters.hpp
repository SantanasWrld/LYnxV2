#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_DoorDestroyer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTS_DoorDestroyer.BTS_DoorDestroyer_C.ExecuteUbergraph_BTS_DoorDestroyer
// 0x0050 (0x0050 - 0x0000)
struct BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_InteractableDoor_C*                 CallFunc_GetDoor_Door;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UNavigationQueryFilter>     K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer) == 0x000008, "Wrong alignment on BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer");
static_assert(sizeof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer) == 0x000050, "Wrong size on BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, EntryPoint) == 0x000000, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, Temp_bool_Variable) == 0x000004, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, K2Node_Event_OwnerController_2) == 0x000008, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, K2Node_Event_OwnerController_1) == 0x000020, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, K2Node_Event_ControlledPawn_1) == 0x000028, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, CallFunc_GetDoor_Door) == 0x000030, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::CallFunc_GetDoor_Door' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, K2Node_Event_OwnerController) == 0x000038, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, K2Node_Event_ControlledPawn) == 0x000040, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer, K2Node_Select_Default) == 0x000048, "Member 'BTS_DoorDestroyer_C_ExecuteUbergraph_BTS_DoorDestroyer::K2Node_Select_Default' has a wrong offset!");

// Function BTS_DoorDestroyer.BTS_DoorDestroyer_C.GetDoor
// 0x0260 (0x0260 - 0x0000)
struct BTS_DoorDestroyer_C_GetDoor final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_InteractableDoor_C*                 Door;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTraceVector_Start;                     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTraceVector_End;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0090(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_InteractableDoor_C*                 K2Node_DynamicCast_AsBP_Interactable_Door;         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_DoorDestroyer_C_GetDoor) == 0x000008, "Wrong alignment on BTS_DoorDestroyer_C_GetDoor");
static_assert(sizeof(BTS_DoorDestroyer_C_GetDoor) == 0x000260, "Wrong size on BTS_DoorDestroyer_C_GetDoor");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, Pawn) == 0x000000, "Member 'BTS_DoorDestroyer_C_GetDoor::Pawn' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, Door) == 0x000008, "Member 'BTS_DoorDestroyer_C_GetDoor::Door' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000028, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_GetTraceVector_Start) == 0x000050, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_GetTraceVector_Start' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_GetTraceVector_End) == 0x000068, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_GetTraceVector_End' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, K2Node_MakeArray_Array) == 0x000080, "Member 'BTS_DoorDestroyer_C_GetDoor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_LineTraceSingle_OutHit) == 0x000090, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_LineTraceSingle_ReturnValue) == 0x000178, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_bBlockingHit) == 0x000179, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017A, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_Time) == 0x00017C, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_Distance) == 0x000180, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A0, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_Normal) == 0x0001B8, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D0, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_PhysMat) == 0x0001E8, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_HitActor) == 0x0001F0, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_HitComponent) == 0x0001F8, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_HitBoneName) == 0x000200, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_BoneName) == 0x000208, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_HitItem) == 0x000210, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_ElementIndex) == 0x000214, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_FaceIndex) == 0x000218, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_TraceStart) == 0x000220, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BreakHitResult_TraceEnd) == 0x000238, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, K2Node_DynamicCast_AsBP_Interactable_Door) == 0x000250, "Member 'BTS_DoorDestroyer_C_GetDoor::K2Node_DynamicCast_AsBP_Interactable_Door' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'BTS_DoorDestroyer_C_GetDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_Not_PreBool_ReturnValue) == 0x000259, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetDoor, CallFunc_BooleanAND_ReturnValue) == 0x00025A, "Member 'BTS_DoorDestroyer_C_GetDoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BTS_DoorDestroyer.BTS_DoorDestroyer_C.GetTraceVector
// 0x00D8 (0x00D8 - 0x0000)
struct BTS_DoorDestroyer_C_GetTraceVector final
{
public:
	struct FVector                                PawnLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_DoorDestroyer_C_GetTraceVector) == 0x000008, "Wrong alignment on BTS_DoorDestroyer_C_GetTraceVector");
static_assert(sizeof(BTS_DoorDestroyer_C_GetTraceVector) == 0x0000D8, "Wrong size on BTS_DoorDestroyer_C_GetTraceVector");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, PawnLocation) == 0x000000, "Member 'BTS_DoorDestroyer_C_GetTraceVector::PawnLocation' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, TargetLocation) == 0x000018, "Member 'BTS_DoorDestroyer_C_GetTraceVector::TargetLocation' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, Start) == 0x000030, "Member 'BTS_DoorDestroyer_C_GetTraceVector::Start' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, End) == 0x000048, "Member 'BTS_DoorDestroyer_C_GetTraceVector::End' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000060, "Member 'BTS_DoorDestroyer_C_GetTraceVector::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BTS_DoorDestroyer_C_GetTraceVector::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, CallFunc_Normal_ReturnValue) == 0x000090, "Member 'BTS_DoorDestroyer_C_GetTraceVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A8, "Member 'BTS_DoorDestroyer_C_GetTraceVector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_GetTraceVector, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'BTS_DoorDestroyer_C_GetTraceVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BTS_DoorDestroyer.BTS_DoorDestroyer_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_DoorDestroyer_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_DoorDestroyer_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTS_DoorDestroyer_C_ReceiveActivationAI");
static_assert(sizeof(BTS_DoorDestroyer_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTS_DoorDestroyer_C_ReceiveActivationAI");
static_assert(offsetof(BTS_DoorDestroyer_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTS_DoorDestroyer_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTS_DoorDestroyer_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_DoorDestroyer.BTS_DoorDestroyer_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTS_DoorDestroyer_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_DoorDestroyer_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on BTS_DoorDestroyer_C_ReceiveDeactivationAI");
static_assert(sizeof(BTS_DoorDestroyer_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on BTS_DoorDestroyer_C_ReceiveDeactivationAI");
static_assert(offsetof(BTS_DoorDestroyer_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'BTS_DoorDestroyer_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'BTS_DoorDestroyer_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

// Function BTS_DoorDestroyer.BTS_DoorDestroyer_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_DoorDestroyer_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_DoorDestroyer_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_DoorDestroyer_C_ReceiveTickAI");
static_assert(sizeof(BTS_DoorDestroyer_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_DoorDestroyer_C_ReceiveTickAI");
static_assert(offsetof(BTS_DoorDestroyer_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_DoorDestroyer_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_DoorDestroyer_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_DoorDestroyer_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_DoorDestroyer_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

