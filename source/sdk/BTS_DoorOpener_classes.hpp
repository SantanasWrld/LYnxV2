#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_DoorOpener

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_DoorOpener.BTS_DoorOpener_C
// 0x0020 (0x00B8 - 0x0098)
class UBTS_DoorOpener_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Radius;                                            // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UNavigationQueryFilter>     DoorFilterClass;                                   // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UNavigationQueryFilter>     DefaultFilterClass;                                // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_DoorOpener(int32 EntryPoint);
	void GetDoor(class APawn* Pawn, class ABP_InteractableDoor_C** Door);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveDeactivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_DoorOpener_C">();
	}
	static class UBTS_DoorOpener_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_DoorOpener_C>();
	}
};
static_assert(alignof(UBTS_DoorOpener_C) == 0x000008, "Wrong alignment on UBTS_DoorOpener_C");
static_assert(sizeof(UBTS_DoorOpener_C) == 0x0000B8, "Wrong size on UBTS_DoorOpener_C");
static_assert(offsetof(UBTS_DoorOpener_C, UberGraphFrame) == 0x000098, "Member 'UBTS_DoorOpener_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_DoorOpener_C, Radius) == 0x0000A0, "Member 'UBTS_DoorOpener_C::Radius' has a wrong offset!");
static_assert(offsetof(UBTS_DoorOpener_C, DoorFilterClass) == 0x0000A8, "Member 'UBTS_DoorOpener_C::DoorFilterClass' has a wrong offset!");
static_assert(offsetof(UBTS_DoorOpener_C, DefaultFilterClass) == 0x0000B0, "Member 'UBTS_DoorOpener_C::DefaultFilterClass' has a wrong offset!");

}

