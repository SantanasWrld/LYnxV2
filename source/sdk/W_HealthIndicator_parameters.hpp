#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HealthIndicator

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_HealthIndicator.W_HealthIndicator_C.ExecuteUbergraph_W_HealthIndicator
// 0x0088 (0x0088 - 0x0000)
struct W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator) == 0x000008, "Wrong alignment on W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator");
static_assert(sizeof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator) == 0x000088, "Wrong size on W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, EntryPoint) == 0x000000, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, K2Node_Event_MyGeometry) == 0x000010, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, K2Node_Event_InDeltaTime) == 0x000048, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000058, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'W_HealthIndicator_C_ExecuteUbergraph_W_HealthIndicator::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_HealthIndicator.W_HealthIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_HealthIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HealthIndicator_C_Tick) == 0x000004, "Wrong alignment on W_HealthIndicator_C_Tick");
static_assert(sizeof(W_HealthIndicator_C_Tick) == 0x00003C, "Wrong size on W_HealthIndicator_C_Tick");
static_assert(offsetof(W_HealthIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'W_HealthIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_HealthIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'W_HealthIndicator_C_Tick::InDeltaTime' has a wrong offset!");

}

