#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Cluby

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Cluby.ABP_Cluby_C
// 0x03A0 (0x06F0 - 0x0350)
class UABP_Cluby_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_BlendSpaceGraph;            // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0390(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x03B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x03E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0428(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0448(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_2;            // 0x0490(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04B0(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_1;            // 0x04F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0518(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult;              // 0x0560(0x0020)()
	struct FAnimNode_BlendSpaceGraph              AnimGraphNode_BlendSpaceGraph;                     // 0x0580(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05E8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0608(0x00C8)()
	class ABP_Cluby_C*                            Cluby;                                             // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x06E0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_Cluby(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Cluby_C">();
	}
	static class UABP_Cluby_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Cluby_C>();
	}
};
static_assert(alignof(UABP_Cluby_C) == 0x000010, "Wrong alignment on UABP_Cluby_C");
static_assert(sizeof(UABP_Cluby_C) == 0x0006F0, "Wrong size on UABP_Cluby_C");
static_assert(offsetof(UABP_Cluby_C, UberGraphFrame) == 0x000350, "Member 'UABP_Cluby_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UABP_Cluby_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimBlueprintExtension_BlendSpaceGraph) == 0x000360, "Member 'UABP_Cluby_C::AnimBlueprintExtension_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UABP_Cluby_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_Root) == 0x000370, "Member 'UABP_Cluby_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_TransitionResult_1) == 0x000390, "Member 'UABP_Cluby_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_TransitionResult) == 0x0003B8, "Member 'UABP_Cluby_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_SequencePlayer_3) == 0x0003E0, "Member 'UABP_Cluby_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_StateResult_1) == 0x000428, "Member 'UABP_Cluby_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_SequencePlayer_2) == 0x000448, "Member 'UABP_Cluby_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_BlendSpaceSampleResult_2) == 0x000490, "Member 'UABP_Cluby_C::AnimGraphNode_BlendSpaceSampleResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_SequencePlayer_1) == 0x0004B0, "Member 'UABP_Cluby_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_BlendSpaceSampleResult_1) == 0x0004F8, "Member 'UABP_Cluby_C::AnimGraphNode_BlendSpaceSampleResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_SequencePlayer) == 0x000518, "Member 'UABP_Cluby_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_BlendSpaceSampleResult) == 0x000560, "Member 'UABP_Cluby_C::AnimGraphNode_BlendSpaceSampleResult' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_BlendSpaceGraph) == 0x000580, "Member 'UABP_Cluby_C::AnimGraphNode_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_StateResult) == 0x0005E8, "Member 'UABP_Cluby_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, AnimGraphNode_StateMachine) == 0x000608, "Member 'UABP_Cluby_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, Cluby) == 0x0006D0, "Member 'UABP_Cluby_C::Cluby' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, Speed) == 0x0006D8, "Member 'UABP_Cluby_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Cluby_C, IsAttacking) == 0x0006E0, "Member 'UABP_Cluby_C::IsAttacking' has a wrong offset!");

}

