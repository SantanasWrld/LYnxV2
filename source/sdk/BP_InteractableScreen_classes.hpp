#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_InteractableActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InteractableScreen.BP_InteractableScreen_C
// 0x0020 (0x0300 - 0x02E0)
class ABP_InteractableScreen_C : public ABP_InteractableActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_InteractableScreen_C;            // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane;                                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Widget;                                            // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void Interacted(class ABP_UPPlayerCharacter_C* Player);
	void Interact(class ABP_UPPlayerCharacter_C* Player);
	void GetInteractDistance(double* Distance);
	void ExecuteUbergraph_BP_InteractableScreen(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InteractableScreen_C">();
	}
	static class ABP_InteractableScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteractableScreen_C>();
	}
};
static_assert(alignof(ABP_InteractableScreen_C) == 0x000008, "Wrong alignment on ABP_InteractableScreen_C");
static_assert(sizeof(ABP_InteractableScreen_C) == 0x000300, "Wrong size on ABP_InteractableScreen_C");
static_assert(offsetof(ABP_InteractableScreen_C, UberGraphFrame_BP_InteractableScreen_C) == 0x0002E0, "Member 'ABP_InteractableScreen_C::UberGraphFrame_BP_InteractableScreen_C' has a wrong offset!");
static_assert(offsetof(ABP_InteractableScreen_C, Plane) == 0x0002E8, "Member 'ABP_InteractableScreen_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_InteractableScreen_C, Camera) == 0x0002F0, "Member 'ABP_InteractableScreen_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_InteractableScreen_C, Widget) == 0x0002F8, "Member 'ABP_InteractableScreen_C::Widget' has a wrong offset!");

}

