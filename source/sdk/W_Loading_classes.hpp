#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loading

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loading.W_Loading_C
// 0x0158 (0x0418 - 0x02C0)
class UW_Loading_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOut;                                           // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BlackGradient;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber_0;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DangerLevelText;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           DifficultyBar;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MapImage;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MapText;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ObjectiveHBox;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ObjectiveLabel;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ObjectiveText;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PressCard0;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PressCard1;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PressCard2;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PressCardsHBox;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PressCardsLabel;                                   // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 MapName;                                           // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         Difficulty;                                        // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPoints;                                     // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Objective;                                         // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingDays;                                     // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FText>              MapNames;                                          // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class UTexture2D*>        MapTextures;                                       // 0x03B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 ResultsMapName;                                    // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Loading(int32 EntryPoint);
	float Get_Difficulty_Bar_Percent();
	void InitLoading(const class FString& MapName_0, int32 Difficulty_0, int32 CurrentPoints_0, int32 Objective_0, int32 RemainingDays_0);
	void SetPressCards(int32 CardsLeft);
	void StartHiding();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loading_C">();
	}
	static class UW_Loading_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loading_C>();
	}
};
static_assert(alignof(UW_Loading_C) == 0x000008, "Wrong alignment on UW_Loading_C");
static_assert(sizeof(UW_Loading_C) == 0x000418, "Wrong size on UW_Loading_C");
static_assert(offsetof(UW_Loading_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Loading_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, FadeOut) == 0x0002C8, "Member 'UW_Loading_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, FadeIn) == 0x0002D0, "Member 'UW_Loading_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, BlackGradient) == 0x0002D8, "Member 'UW_Loading_C::BlackGradient' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, CircularThrobber_0) == 0x0002E0, "Member 'UW_Loading_C::CircularThrobber_0' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, DangerLevelText) == 0x0002E8, "Member 'UW_Loading_C::DangerLevelText' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, DifficultyBar) == 0x0002F0, "Member 'UW_Loading_C::DifficultyBar' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, MapImage) == 0x0002F8, "Member 'UW_Loading_C::MapImage' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, MapText) == 0x000300, "Member 'UW_Loading_C::MapText' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, ObjectiveHBox) == 0x000308, "Member 'UW_Loading_C::ObjectiveHBox' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, ObjectiveLabel) == 0x000310, "Member 'UW_Loading_C::ObjectiveLabel' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, ObjectiveText) == 0x000318, "Member 'UW_Loading_C::ObjectiveText' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, PressCard0) == 0x000320, "Member 'UW_Loading_C::PressCard0' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, PressCard1) == 0x000328, "Member 'UW_Loading_C::PressCard1' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, PressCard2) == 0x000330, "Member 'UW_Loading_C::PressCard2' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, PressCardsHBox) == 0x000338, "Member 'UW_Loading_C::PressCardsHBox' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, PressCardsLabel) == 0x000340, "Member 'UW_Loading_C::PressCardsLabel' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, MapName) == 0x000348, "Member 'UW_Loading_C::MapName' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, Difficulty) == 0x000358, "Member 'UW_Loading_C::Difficulty' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, CurrentPoints) == 0x00035C, "Member 'UW_Loading_C::CurrentPoints' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, Objective) == 0x000360, "Member 'UW_Loading_C::Objective' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, RemainingDays) == 0x000364, "Member 'UW_Loading_C::RemainingDays' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, MapNames) == 0x000368, "Member 'UW_Loading_C::MapNames' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, MapTextures) == 0x0003B8, "Member 'UW_Loading_C::MapTextures' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, ResultsMapName) == 0x000408, "Member 'UW_Loading_C::ResultsMapName' has a wrong offset!");

}

