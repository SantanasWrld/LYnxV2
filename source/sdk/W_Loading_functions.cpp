#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loading

#include "Basic.hpp"

#include "W_Loading_classes.hpp"
#include "W_Loading_parameters.hpp"


namespace SDK
{

// Function W_Loading.W_Loading_C.ExecuteUbergraph_W_Loading
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loading_C::ExecuteUbergraph_W_Loading(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loading_C", "ExecuteUbergraph_W_Loading");

	Params::W_Loading_C_ExecuteUbergraph_W_Loading Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loading.W_Loading_C.Get Difficulty Bar Percent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UW_Loading_C::Get_Difficulty_Bar_Percent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loading_C", "Get Difficulty Bar Percent");

	Params::W_Loading_C_Get_Difficulty_Bar_Percent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Loading.W_Loading_C.InitLoading
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    MapName_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Difficulty_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentPoints_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Objective_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RemainingDays_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loading_C::InitLoading(const class FString& MapName_0, int32 Difficulty_0, int32 CurrentPoints_0, int32 Objective_0, int32 RemainingDays_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loading_C", "InitLoading");

	Params::W_Loading_C_InitLoading Parms{};

	Parms.MapName_0 = std::move(MapName_0);
	Parms.Difficulty_0 = Difficulty_0;
	Parms.CurrentPoints_0 = CurrentPoints_0;
	Parms.Objective_0 = Objective_0;
	Parms.RemainingDays_0 = RemainingDays_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loading.W_Loading_C.SetPressCards
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CardsLeft                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Loading_C::SetPressCards(int32 CardsLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loading_C", "SetPressCards");

	Params::W_Loading_C_SetPressCards Parms{};

	Parms.CardsLeft = CardsLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Loading.W_Loading_C.StartHiding
// (BlueprintCallable, BlueprintEvent)

void UW_Loading_C::StartHiding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Loading_C", "StartHiding");

	UObject::ProcessEvent(Func, nullptr);
}

}

