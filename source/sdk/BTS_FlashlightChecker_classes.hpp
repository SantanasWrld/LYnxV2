#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_FlashlightChecker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_FlashlightChecker.BTS_FlashlightChecker_C
// 0x0058 (0x00F0 - 0x0098)
class UBTS_FlashlightChecker_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 TargetKey;                                         // 0x00A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FBlackboardKeySelector                 TargetIsLightedByFlastlight;                       // 0x00C8(0x0028)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BTS_FlashlightChecker(int32 EntryPoint);
	void HasPlayerLightEnabled(class ABP_UPPlayerCharacter_C* Player, bool* Result);
	void IsLightedByPlayer(class ABP_UPPlayerCharacter_C* Player, class ABP_Shiny_C* Shiny, bool* Result);
	void IsLightedByPlayers(class ABP_Shiny_C* Shiny, bool* Result);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_FlashlightChecker_C">();
	}
	static class UBTS_FlashlightChecker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_FlashlightChecker_C>();
	}
};
static_assert(alignof(UBTS_FlashlightChecker_C) == 0x000008, "Wrong alignment on UBTS_FlashlightChecker_C");
static_assert(sizeof(UBTS_FlashlightChecker_C) == 0x0000F0, "Wrong size on UBTS_FlashlightChecker_C");
static_assert(offsetof(UBTS_FlashlightChecker_C, UberGraphFrame) == 0x000098, "Member 'UBTS_FlashlightChecker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_FlashlightChecker_C, TargetKey) == 0x0000A0, "Member 'UBTS_FlashlightChecker_C::TargetKey' has a wrong offset!");
static_assert(offsetof(UBTS_FlashlightChecker_C, TargetIsLightedByFlastlight) == 0x0000C8, "Member 'UBTS_FlashlightChecker_C::TargetIsLightedByFlastlight' has a wrong offset!");

}

