#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tormentor

#include "Basic.hpp"

#include "BP_Tormentor_classes.hpp"
#include "BP_Tormentor_parameters.hpp"


namespace SDK
{

// Function BP_Tormentor.BP_Tormentor_C.MergeMeshParts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Tormentor_C::MergeMeshParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "MergeMeshParts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tormentor.BP_Tormentor_C.FindSecondaryTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C**         Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::FindSecondaryTarget(class ABP_KillableCharacter_C** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "FindSecondaryTarget");

	Params::BP_Tormentor_C_FindSecondaryTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function BP_Tormentor.BP_Tormentor_C.GetThrowDirection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::GetThrowDirection(struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "GetThrowDirection");

	Params::BP_Tormentor_C_GetThrowDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BP_Tormentor.BP_Tormentor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Tormentor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tormentor.BP_Tormentor_C.OnRep_IsAttacking
// (BlueprintCallable, BlueprintEvent)

void ABP_Tormentor_C::OnRep_IsAttacking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "OnRep_IsAttacking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tormentor.BP_Tormentor_C.OnRep_DanceTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_Tormentor_C::OnRep_DanceTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "OnRep_DanceTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tormentor.BP_Tormentor_C.KnockOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::KnockOut(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "KnockOut");

	Params::BP_Tormentor_C_KnockOut Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tormentor.BP_Tormentor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "ReceiveTick");

	Params::BP_Tormentor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tormentor.BP_Tormentor_C.GrabTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::GrabTarget(class ABP_KillableCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "GrabTarget");

	Params::BP_Tormentor_C_GrabTarget Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tormentor.BP_Tormentor_C.ReleaseTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::ReleaseTarget(class ABP_KillableCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "ReleaseTarget");

	Params::BP_Tormentor_C_ReleaseTarget Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tormentor.BP_Tormentor_C.ThrowTarget
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::ThrowTarget(class ABP_KillableCharacter_C* Character, const struct FVector& Impulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "ThrowTarget");

	Params::BP_Tormentor_C_ThrowTarget Parms{};

	Parms.Character = Character;
	Parms.Impulse = std::move(Impulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tormentor.BP_Tormentor_C.UpdateSecondaryTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_Tormentor_C::UpdateSecondaryTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "UpdateSecondaryTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tormentor.BP_Tormentor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Tormentor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tormentor.BP_Tormentor_C.EnableRagdoll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::EnableRagdoll(const struct FVector& SourceLocation, double Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "EnableRagdoll");

	Params::BP_Tormentor_C_EnableRagdoll Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Tormentor.BP_Tormentor_C.DanceImpact
// (BlueprintCallable, BlueprintEvent)

void ABP_Tormentor_C::DanceImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "DanceImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tormentor.BP_Tormentor_C.StartDanceImpactCameraShake
// (BlueprintCallable, BlueprintEvent)

void ABP_Tormentor_C::StartDanceImpactCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "StartDanceImpactCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Tormentor.BP_Tormentor_C.ExecuteUbergraph_BP_Tormentor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Tormentor_C::ExecuteUbergraph_BP_Tormentor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Tormentor_C", "ExecuteUbergraph_BP_Tormentor");

	Params::BP_Tormentor_C_ExecuteUbergraph_BP_Tormentor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

