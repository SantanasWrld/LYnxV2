#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_PickDestination

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_PickDestination.BTT_PickDestination_C.ExecuteUbergraph_BTT_PickDestination
// 0x0090 (0x0090 - 0x0000)
struct BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Random_OutItem;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNotEmpty_IsNotEmpty;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         CallFunc_GetControllerNavData_NavData;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination) == 0x000008, "Wrong alignment on BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination");
static_assert(sizeof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination) == 0x000090, "Wrong size on BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, EntryPoint) == 0x000000, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_Array_Random_OutItem) == 0x000018, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_Array_Random_OutIndex) == 0x000020, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_IsNotEmpty_IsNotEmpty) == 0x000040, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_IsNotEmpty_IsNotEmpty' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, K2Node_Event_OwnerController) == 0x000048, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, K2Node_Event_ControlledPawn) == 0x000050, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_GetControllerNavData_NavData) == 0x000058, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_GetControllerNavData_NavData' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation) == 0x000060, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue) == 0x000078, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000080, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BTT_PickDestination_C_ExecuteUbergraph_BTT_PickDestination::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BTT_PickDestination.BTT_PickDestination_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_PickDestination_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_PickDestination_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_PickDestination_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_PickDestination_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_PickDestination_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_PickDestination_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_PickDestination_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_PickDestination_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_PickDestination_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

