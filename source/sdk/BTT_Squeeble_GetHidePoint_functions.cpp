#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_Squeeble_GetHidePoint

#include "Basic.hpp"

#include "BTT_Squeeble_GetHidePoint_classes.hpp"
#include "BTT_Squeeble_GetHidePoint_parameters.hpp"


namespace SDK
{

// Function BTT_Squeeble_GetHidePoint.BTT_Squeeble_GetHidePoint_C.ExecuteUbergraph_BTT_Squeeble_GetHidePoint
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_Squeeble_GetHidePoint_C::ExecuteUbergraph_BTT_Squeeble_GetHidePoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Squeeble_GetHidePoint_C", "ExecuteUbergraph_BTT_Squeeble_GetHidePoint");

	Params::BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_Squeeble_GetHidePoint.BTT_Squeeble_GetHidePoint_C.GetRandomHidePoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>&                 HidePoints                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FVector&                   SqueebleLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MinDistance_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         HidePoint                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_Squeeble_GetHidePoint_C::GetRandomHidePoint(TArray<struct FVector>& HidePoints, const struct FVector& SqueebleLocation, double MinDistance_0, struct FVector* HidePoint, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Squeeble_GetHidePoint_C", "GetRandomHidePoint");

	Params::BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint Parms{};

	Parms.HidePoints = std::move(HidePoints);
	Parms.SqueebleLocation = std::move(SqueebleLocation);
	Parms.MinDistance_0 = MinDistance_0;

	UObject::ProcessEvent(Func, &Parms);

	HidePoints = std::move(Parms.HidePoints);

	if (HidePoint != nullptr)
		*HidePoint = std::move(Parms.HidePoint);

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function BTT_Squeeble_GetHidePoint.BTT_Squeeble_GetHidePoint_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_Squeeble_GetHidePoint_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Squeeble_GetHidePoint_C", "ReceiveExecuteAI");

	Params::BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}

}

