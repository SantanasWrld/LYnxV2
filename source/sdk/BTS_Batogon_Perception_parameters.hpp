#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_Batogon_Perception

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.ExecuteUbergraph_BTS_Batogon_Perception
// 0x0268 (0x0268 - 0x0000)
struct BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class ABP_KillableCharacter_C*                K2Node_CustomEvent_Character;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Batogon_C*                          K2Node_DynamicCast_AsBP_Batogon;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGrawlInCooldown_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0088(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_173[0x1];                                      // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0248(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                CallFunc_GetPossibleTarget_Character;              // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception) == 0x000008, "Wrong alignment on BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception");
static_assert(sizeof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception) == 0x000268, "Wrong size on BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, EntryPoint) == 0x000000, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, K2Node_MakeArray_Array) == 0x000008, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, K2Node_CustomEvent_Character) == 0x000018, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, K2Node_Event_OwnerController) == 0x000020, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, K2Node_Event_ControlledPawn) == 0x000028, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, K2Node_DynamicCast_AsBP_Batogon) == 0x000038, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::K2Node_DynamicCast_AsBP_Batogon' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_IsGrawlInCooldown_ReturnValue) == 0x000041, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_IsGrawlInCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, K2Node_MakeArray_Array_1) == 0x000078, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_LineTraceSingle_OutHit) == 0x000088, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_LineTraceSingle_ReturnValue) == 0x000170, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_bBlockingHit) == 0x000171, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_bInitialOverlap) == 0x000172, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_Time) == 0x000174, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_Distance) == 0x000178, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_Location) == 0x000180, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_ImpactPoint) == 0x000198, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_Normal) == 0x0001B0, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C8, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_PhysMat) == 0x0001E0, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_HitActor) == 0x0001E8, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_HitComponent) == 0x0001F0, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_HitBoneName) == 0x0001F8, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_BoneName) == 0x000200, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_HitItem) == 0x000208, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_ElementIndex) == 0x00020C, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_FaceIndex) == 0x000210, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_TraceStart) == 0x000218, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_BreakHitResult_TraceEnd) == 0x000230, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_SphereOverlapActors_OutActors) == 0x000248, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_SphereOverlapActors_ReturnValue) == 0x000258, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception, CallFunc_GetPossibleTarget_Character) == 0x000260, "Member 'BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception::CallFunc_GetPossibleTarget_Character' has a wrong offset!");

// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.GetPossibleTarget
// 0x0050 (0x0050 - 0x0000)
struct BTS_Batogon_Perception_C_GetPossibleTarget final
{
public:
	class ABP_Batogon_C*                          Batogon;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABP_KillableCharacter_C*                Character;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPossibleTarget_Result;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                CallFunc_IsPossibleTarget_Character;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Batogon_Perception_C_GetPossibleTarget) == 0x000008, "Wrong alignment on BTS_Batogon_Perception_C_GetPossibleTarget");
static_assert(sizeof(BTS_Batogon_Perception_C_GetPossibleTarget) == 0x000050, "Wrong size on BTS_Batogon_Perception_C_GetPossibleTarget");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, Batogon) == 0x000000, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::Batogon' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, Actors) == 0x000008, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::Actors' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, Character) == 0x000018, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::Character' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, CallFunc_Array_Get_Item) == 0x000028, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, CallFunc_IsPossibleTarget_Result) == 0x000030, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::CallFunc_IsPossibleTarget_Result' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, CallFunc_IsPossibleTarget_Character) == 0x000038, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::CallFunc_IsPossibleTarget_Character' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_GetPossibleTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BTS_Batogon_Perception_C_GetPossibleTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.IsPossibleTarget
// 0x0030 (0x0030 - 0x0000)
struct BTS_Batogon_Perception_C_IsPossibleTarget final
{
public:
	class ABP_Batogon_C*                          Batogon;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                Character;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                K2Node_DynamicCast_AsBP_Killable_Character;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAffinity_Affinity;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Batogon_Perception_C_IsPossibleTarget) == 0x000008, "Wrong alignment on BTS_Batogon_Perception_C_IsPossibleTarget");
static_assert(sizeof(BTS_Batogon_Perception_C_IsPossibleTarget) == 0x000030, "Wrong size on BTS_Batogon_Perception_C_IsPossibleTarget");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, Batogon) == 0x000000, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::Batogon' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, Actor) == 0x000008, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::Actor' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, Result) == 0x000010, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::Result' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, Character) == 0x000018, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::Character' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, K2Node_DynamicCast_AsBP_Killable_Character) == 0x000020, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::K2Node_DynamicCast_AsBP_Killable_Character' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, CallFunc_GetAffinity_Affinity) == 0x000029, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::CallFunc_GetAffinity_Affinity' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_IsPossibleTarget, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BTS_Batogon_Perception_C_IsPossibleTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_Batogon_Perception_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Batogon_Perception_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_Batogon_Perception_C_ReceiveTickAI");
static_assert(sizeof(BTS_Batogon_Perception_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_Batogon_Perception_C_ReceiveTickAI");
static_assert(offsetof(BTS_Batogon_Perception_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_Batogon_Perception_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_Batogon_Perception_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_Batogon_Perception_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_Batogon_Perception_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.SetTarget
// 0x0008 (0x0008 - 0x0000)
struct BTS_Batogon_Perception_C_SetTarget final
{
public:
	class ABP_KillableCharacter_C*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_Batogon_Perception_C_SetTarget) == 0x000008, "Wrong alignment on BTS_Batogon_Perception_C_SetTarget");
static_assert(sizeof(BTS_Batogon_Perception_C_SetTarget) == 0x000008, "Wrong size on BTS_Batogon_Perception_C_SetTarget");
static_assert(offsetof(BTS_Batogon_Perception_C_SetTarget, Character) == 0x000000, "Member 'BTS_Batogon_Perception_C_SetTarget::Character' has a wrong offset!");

}

