#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Mine.BP_Mine_C.BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Mine_C_BndEvt__BP_Mine_MineRadius_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Mine.BP_Mine_C.BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Mine_C_BndEvt__BP_Mine_SphereCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Mine.BP_Mine_C.ExecuteUbergraph_BP_Mine
// 0x0210 (0x0210 - 0x0000)
struct BP_Mine_C_ExecuteUbergraph_BP_Mine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MineExplosion_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00C0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsTriggerActor_Result;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTriggerActor_Result_1;                  // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0200(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCloseToPlayers_CloseToPlayers;          // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x1];                                      // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mine_C_ExecuteUbergraph_BP_Mine) == 0x000010, "Wrong alignment on BP_Mine_C_ExecuteUbergraph_BP_Mine");
static_assert(sizeof(BP_Mine_C_ExecuteUbergraph_BP_Mine) == 0x000210, "Wrong size on BP_Mine_C_ExecuteUbergraph_BP_Mine");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, EntryPoint) == 0x000000, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000080, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000088, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000090, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000098, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000A0, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_OtherActor) == 0x0000A8, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_OtherComp) == 0x0000B0, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000B8, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000BC, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_ComponentBoundEvent_SweepResult) == 0x0000C0, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_IsTriggerActor_Result) == 0x0001A8, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_IsTriggerActor_Result' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_IsTriggerActor_Result_1) == 0x0001A9, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_IsTriggerActor_Result_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001B0, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001C8, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_HasAuthority_ReturnValue) == 0x0001E0, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_BooleanAND_ReturnValue) == 0x0001E1, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_Not_PreBool_ReturnValue) == 0x0001E2, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_HasAuthority_ReturnValue_1) == 0x0001E3, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E4, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_BooleanAND_ReturnValue_2) == 0x0001E5, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, K2Node_CreateDelegate_OutputDelegate) == 0x0001E8, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001F8, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000200, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_BooleanAND_ReturnValue_3) == 0x000208, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_BooleanAND_ReturnValue_4) == 0x000209, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_IsCloseToPlayers_CloseToPlayers) == 0x00020A, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_IsCloseToPlayers_CloseToPlayers' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_ExecuteUbergraph_BP_Mine, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00020C, "Member 'BP_Mine_C_ExecuteUbergraph_BP_Mine::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_Mine.BP_Mine_C.IsTriggerActor
// 0x0010 (0x0010 - 0x0000)
struct BP_Mine_C_IsTriggerActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAffinity_Affinity;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mine_C_IsTriggerActor) == 0x000008, "Wrong alignment on BP_Mine_C_IsTriggerActor");
static_assert(sizeof(BP_Mine_C_IsTriggerActor) == 0x000010, "Wrong size on BP_Mine_C_IsTriggerActor");
static_assert(offsetof(BP_Mine_C_IsTriggerActor, Actor) == 0x000000, "Member 'BP_Mine_C_IsTriggerActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_IsTriggerActor, Result) == 0x000008, "Member 'BP_Mine_C_IsTriggerActor::Result' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_IsTriggerActor, CallFunc_ObjectIsA_ReturnValue) == 0x000009, "Member 'BP_Mine_C_IsTriggerActor::CallFunc_ObjectIsA_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_IsTriggerActor, CallFunc_GetAffinity_Affinity) == 0x00000A, "Member 'BP_Mine_C_IsTriggerActor::CallFunc_GetAffinity_Affinity' has a wrong offset!");
static_assert(offsetof(BP_Mine_C_IsTriggerActor, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'BP_Mine_C_IsTriggerActor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

