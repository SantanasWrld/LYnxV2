#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_Squeeble_GetHidePoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_Squeeble_GetHidePoint.BTT_Squeeble_GetHidePoint_C.ExecuteUbergraph_BTT_Squeeble_GetHidePoint
// 0x0068 (0x0068 - 0x0000)
struct BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Squeeble_C*                         K2Node_DynamicCast_AsBP_Squeeble;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRandomHidePoint_HidePoint;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRandomHidePoint_Found;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint) == 0x000008, "Wrong alignment on BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint");
static_assert(sizeof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint) == 0x000068, "Wrong size on BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, EntryPoint) == 0x000000, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, K2Node_DynamicCast_AsBP_Squeeble) == 0x000018, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::K2Node_DynamicCast_AsBP_Squeeble' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000040, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, CallFunc_GetRandomHidePoint_HidePoint) == 0x000048, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::CallFunc_GetRandomHidePoint_HidePoint' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint, CallFunc_GetRandomHidePoint_Found) == 0x000060, "Member 'BTT_Squeeble_GetHidePoint_C_ExecuteUbergraph_BTT_Squeeble_GetHidePoint::CallFunc_GetRandomHidePoint_Found' has a wrong offset!");

// Function BTT_Squeeble_GetHidePoint.BTT_Squeeble_GetHidePoint_C.GetRandomHidePoint
// 0x00A0 (0x00A0 - 0x0000)
struct BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint final
{
public:
	TArray<struct FVector>                        HidePoints;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                SqueebleLocation;                                  // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDistance_0;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HidePoint;                                         // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        _HidePoints;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint) == 0x000008, "Wrong alignment on BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint");
static_assert(sizeof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint) == 0x0000A0, "Wrong size on BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, HidePoints) == 0x000000, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::HidePoints' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, SqueebleLocation) == 0x000010, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::SqueebleLocation' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, MinDistance_0) == 0x000028, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::MinDistance_0' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, HidePoint) == 0x000030, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::HidePoint' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, Found) == 0x000048, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::Found' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, _HidePoints) == 0x000050, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::_HidePoints' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, CallFunc_Array_Get_Item) == 0x000070, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, CallFunc_Vector_Distance_ReturnValue) == 0x000090, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'BTT_Squeeble_GetHidePoint_C_GetRandomHidePoint::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BTT_Squeeble_GetHidePoint.BTT_Squeeble_GetHidePoint_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_Squeeble_GetHidePoint_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

