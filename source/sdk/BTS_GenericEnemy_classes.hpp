#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_GenericEnemy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_GenericEnemy.BTS_GenericEnemy_C
// 0x00F8 (0x0190 - 0x0098)
class UBTS_GenericEnemy_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 IsSleepingKey;                                     // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 PatrolSpeedKey;                                    // 0x00C8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 EscapeSpeedKey;                                    // 0x00F0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 WarningSpeedKey;                                   // 0x0118(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 PursuitSpeedKey;                                   // 0x0140(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 TargetLostSpeedKey;                                // 0x0168(0x0028)(Edit, BlueprintVisible)

public:
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ExecuteUbergraph_BTS_GenericEnemy(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_GenericEnemy_C">();
	}
	static class UBTS_GenericEnemy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_GenericEnemy_C>();
	}
};
static_assert(alignof(UBTS_GenericEnemy_C) == 0x000008, "Wrong alignment on UBTS_GenericEnemy_C");
static_assert(sizeof(UBTS_GenericEnemy_C) == 0x000190, "Wrong size on UBTS_GenericEnemy_C");
static_assert(offsetof(UBTS_GenericEnemy_C, UberGraphFrame) == 0x000098, "Member 'UBTS_GenericEnemy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_GenericEnemy_C, IsSleepingKey) == 0x0000A0, "Member 'UBTS_GenericEnemy_C::IsSleepingKey' has a wrong offset!");
static_assert(offsetof(UBTS_GenericEnemy_C, PatrolSpeedKey) == 0x0000C8, "Member 'UBTS_GenericEnemy_C::PatrolSpeedKey' has a wrong offset!");
static_assert(offsetof(UBTS_GenericEnemy_C, EscapeSpeedKey) == 0x0000F0, "Member 'UBTS_GenericEnemy_C::EscapeSpeedKey' has a wrong offset!");
static_assert(offsetof(UBTS_GenericEnemy_C, WarningSpeedKey) == 0x000118, "Member 'UBTS_GenericEnemy_C::WarningSpeedKey' has a wrong offset!");
static_assert(offsetof(UBTS_GenericEnemy_C, PursuitSpeedKey) == 0x000140, "Member 'UBTS_GenericEnemy_C::PursuitSpeedKey' has a wrong offset!");
static_assert(offsetof(UBTS_GenericEnemy_C, TargetLostSpeedKey) == 0x000168, "Member 'UBTS_GenericEnemy_C::TargetLostSpeedKey' has a wrong offset!");

}

