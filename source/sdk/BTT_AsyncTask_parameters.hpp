#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AsyncTask

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTT_AsyncTask.BTT_AsyncTask_C.AbortTask
// 0x0010 (0x0010 - 0x0000)
struct BTT_AsyncTask_C_AbortTask final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AsyncTask_C_AbortTask) == 0x000008, "Wrong alignment on BTT_AsyncTask_C_AbortTask");
static_assert(sizeof(BTT_AsyncTask_C_AbortTask) == 0x000010, "Wrong size on BTT_AsyncTask_C_AbortTask");
static_assert(offsetof(BTT_AsyncTask_C_AbortTask, OwnerController) == 0x000000, "Member 'BTT_AsyncTask_C_AbortTask::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_AbortTask, ControlledPawn) == 0x000008, "Member 'BTT_AsyncTask_C_AbortTask::ControlledPawn' has a wrong offset!");

// Function BTT_AsyncTask.BTT_AsyncTask_C.EndTask
// 0x0010 (0x0010 - 0x0000)
struct BTT_AsyncTask_C_EndTask final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AsyncTask_C_EndTask) == 0x000008, "Wrong alignment on BTT_AsyncTask_C_EndTask");
static_assert(sizeof(BTT_AsyncTask_C_EndTask) == 0x000010, "Wrong size on BTT_AsyncTask_C_EndTask");
static_assert(offsetof(BTT_AsyncTask_C_EndTask, OwnerController) == 0x000000, "Member 'BTT_AsyncTask_C_EndTask::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_EndTask, ControlledPawn) == 0x000008, "Member 'BTT_AsyncTask_C_EndTask::ControlledPawn' has a wrong offset!");

// Function BTT_AsyncTask.BTT_AsyncTask_C.ExecuteUbergraph_BTT_AsyncTask
// 0x0048 (0x0048 - 0x0000)
struct BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartTask_Success;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartTask_InstantFinish;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask) == 0x000008, "Wrong alignment on BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask");
static_assert(sizeof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask) == 0x000048, "Wrong size on BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, EntryPoint) == 0x000000, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, K2Node_Event_OwnerController_1) == 0x000018, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, K2Node_Event_ControlledPawn_1) == 0x000020, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, CallFunc_TryStartTask_Success) == 0x000040, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::CallFunc_TryStartTask_Success' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, CallFunc_TryStartTask_InstantFinish) == 0x000041, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::CallFunc_TryStartTask_InstantFinish' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000044, "Member 'BTT_AsyncTask_C_ExecuteUbergraph_BTT_AsyncTask::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BTT_AsyncTask.BTT_AsyncTask_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_AsyncTask_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AsyncTask_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_AsyncTask_C_ReceiveAbortAI");
static_assert(sizeof(BTT_AsyncTask_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_AsyncTask_C_ReceiveAbortAI");
static_assert(offsetof(BTT_AsyncTask_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_AsyncTask_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_AsyncTask_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_AsyncTask.BTT_AsyncTask_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_AsyncTask_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AsyncTask_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_AsyncTask_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_AsyncTask_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_AsyncTask_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_AsyncTask_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_AsyncTask_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_AsyncTask_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_AsyncTask.BTT_AsyncTask_C.TryStartTask
// 0x0018 (0x0018 - 0x0000)
struct BTT_AsyncTask_C_TryStartTask final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InstantFinish;                                     // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_AsyncTask_C_TryStartTask) == 0x000008, "Wrong alignment on BTT_AsyncTask_C_TryStartTask");
static_assert(sizeof(BTT_AsyncTask_C_TryStartTask) == 0x000018, "Wrong size on BTT_AsyncTask_C_TryStartTask");
static_assert(offsetof(BTT_AsyncTask_C_TryStartTask, OwnerController) == 0x000000, "Member 'BTT_AsyncTask_C_TryStartTask::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_TryStartTask, ControlledPawn) == 0x000008, "Member 'BTT_AsyncTask_C_TryStartTask::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_TryStartTask, Success) == 0x000010, "Member 'BTT_AsyncTask_C_TryStartTask::Success' has a wrong offset!");
static_assert(offsetof(BTT_AsyncTask_C_TryStartTask, InstantFinish) == 0x000011, "Member 'BTT_AsyncTask_C_TryStartTask::InstantFinish' has a wrong offset!");

}

