#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Parasite

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_Parasite_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Parasite.ABP_Parasite_C
// 0x02F0 (0x0640 - 0x0350)
class UABP_Parasite_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Parasite::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                 // 0x0358(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0390(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x03E0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0408(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0450(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0470(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x04B8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x04D8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0548(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0568(0x00C8)()
	float                                         Speed;                                             // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x0634(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsArmed;                                           // 0x0635(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_636[0x2];                                      // 0x0636(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Parasite_C*                         Parasite;                                          // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Parasite_AnimGraphNode_TransitionResult_162B6AF9442E8527C2421AB720DAA51B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Parasite_AnimGraphNode_TransitionResult_D197ADF746ECE8C1D2E2639B3CE79CAE();
	void ExecuteUbergraph_ABP_Parasite(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Parasite_C">();
	}
	static class UABP_Parasite_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Parasite_C>();
	}
};
static_assert(alignof(UABP_Parasite_C) == 0x000010, "Wrong alignment on UABP_Parasite_C");
static_assert(sizeof(UABP_Parasite_C) == 0x000640, "Wrong size on UABP_Parasite_C");
static_assert(offsetof(UABP_Parasite_C, UberGraphFrame) == 0x000350, "Member 'UABP_Parasite_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_Parasite_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimBlueprintExtension_PropertyAccess) == 0x000360, "Member 'UABP_Parasite_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UABP_Parasite_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_Root) == 0x000370, "Member 'UABP_Parasite_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_TransitionResult_2) == 0x000390, "Member 'UABP_Parasite_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_TransitionResult_1) == 0x0003B8, "Member 'UABP_Parasite_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_TransitionResult) == 0x0003E0, "Member 'UABP_Parasite_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_SequencePlayer_1) == 0x000408, "Member 'UABP_Parasite_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_StateResult_2) == 0x000450, "Member 'UABP_Parasite_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_SequencePlayer) == 0x000470, "Member 'UABP_Parasite_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_StateResult_1) == 0x0004B8, "Member 'UABP_Parasite_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_BlendSpacePlayer) == 0x0004D8, "Member 'UABP_Parasite_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_StateResult) == 0x000548, "Member 'UABP_Parasite_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, AnimGraphNode_StateMachine) == 0x000568, "Member 'UABP_Parasite_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, Speed) == 0x000630, "Member 'UABP_Parasite_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, IsAttacking) == 0x000634, "Member 'UABP_Parasite_C::IsAttacking' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, IsArmed) == 0x000635, "Member 'UABP_Parasite_C::IsArmed' has a wrong offset!");
static_assert(offsetof(UABP_Parasite_C, Parasite) == 0x000638, "Member 'UABP_Parasite_C::Parasite' has a wrong offset!");

}

