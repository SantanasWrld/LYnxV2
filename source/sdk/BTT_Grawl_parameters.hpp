#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_Grawl

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTT_Grawl.BTT_Grawl_C.AbortTask
// 0x0028 (0x0028 - 0x0000)
struct BTT_Grawl_C_AbortTask final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Parent_Enemy_C*                     K2Node_DynamicCast_AsBP_Parent_Enemy;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_Grawl_C_AbortTask) == 0x000008, "Wrong alignment on BTT_Grawl_C_AbortTask");
static_assert(sizeof(BTT_Grawl_C_AbortTask) == 0x000028, "Wrong size on BTT_Grawl_C_AbortTask");
static_assert(offsetof(BTT_Grawl_C_AbortTask, OwnerController) == 0x000000, "Member 'BTT_Grawl_C_AbortTask::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_AbortTask, ControlledPawn) == 0x000008, "Member 'BTT_Grawl_C_AbortTask::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_AbortTask, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BTT_Grawl_C_AbortTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_AbortTask, K2Node_DynamicCast_AsBP_Parent_Enemy) == 0x000018, "Member 'BTT_Grawl_C_AbortTask::K2Node_DynamicCast_AsBP_Parent_Enemy' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_AbortTask, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_Grawl_C_AbortTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTT_Grawl.BTT_Grawl_C.EndTask
// 0x0028 (0x0028 - 0x0000)
struct BTT_Grawl_C_EndTask final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Parent_Enemy_C*                     K2Node_DynamicCast_AsBP_Parent_Enemy;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_Grawl_C_EndTask) == 0x000008, "Wrong alignment on BTT_Grawl_C_EndTask");
static_assert(sizeof(BTT_Grawl_C_EndTask) == 0x000028, "Wrong size on BTT_Grawl_C_EndTask");
static_assert(offsetof(BTT_Grawl_C_EndTask, OwnerController) == 0x000000, "Member 'BTT_Grawl_C_EndTask::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_EndTask, ControlledPawn) == 0x000008, "Member 'BTT_Grawl_C_EndTask::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_EndTask, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BTT_Grawl_C_EndTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_EndTask, K2Node_DynamicCast_AsBP_Parent_Enemy) == 0x000018, "Member 'BTT_Grawl_C_EndTask::K2Node_DynamicCast_AsBP_Parent_Enemy' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_EndTask, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_Grawl_C_EndTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTT_Grawl.BTT_Grawl_C.TryStartTask
// 0x0028 (0x0028 - 0x0000)
struct BTT_Grawl_C_TryStartTask final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InstantFinish;                                     // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Parent_Enemy_C*                     K2Node_DynamicCast_AsBP_Parent_Enemy;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGrawlInCooldown_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_Grawl_C_TryStartTask) == 0x000008, "Wrong alignment on BTT_Grawl_C_TryStartTask");
static_assert(sizeof(BTT_Grawl_C_TryStartTask) == 0x000028, "Wrong size on BTT_Grawl_C_TryStartTask");
static_assert(offsetof(BTT_Grawl_C_TryStartTask, OwnerController) == 0x000000, "Member 'BTT_Grawl_C_TryStartTask::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_TryStartTask, ControlledPawn) == 0x000008, "Member 'BTT_Grawl_C_TryStartTask::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_TryStartTask, Success) == 0x000010, "Member 'BTT_Grawl_C_TryStartTask::Success' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_TryStartTask, InstantFinish) == 0x000011, "Member 'BTT_Grawl_C_TryStartTask::InstantFinish' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_TryStartTask, K2Node_DynamicCast_AsBP_Parent_Enemy) == 0x000018, "Member 'BTT_Grawl_C_TryStartTask::K2Node_DynamicCast_AsBP_Parent_Enemy' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_TryStartTask, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_Grawl_C_TryStartTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_TryStartTask, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BTT_Grawl_C_TryStartTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_Grawl_C_TryStartTask, CallFunc_IsGrawlInCooldown_ReturnValue) == 0x000022, "Member 'BTT_Grawl_C_TryStartTask::CallFunc_IsGrawlInCooldown_ReturnValue' has a wrong offset!");

}

