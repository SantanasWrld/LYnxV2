#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_CameroidFilm

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPC_CameroidFilm.BPC_CameroidFilm_C.CreateSave
// 0x0010 (0x0010 - 0x0000)
struct BPC_CameroidFilm_C_CreateSave final
{
public:
	class USaveGame*                              Save;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CameroidFilmSave_C*                 CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CameroidFilm_C_CreateSave) == 0x000008, "Wrong alignment on BPC_CameroidFilm_C_CreateSave");
static_assert(sizeof(BPC_CameroidFilm_C_CreateSave) == 0x000010, "Wrong size on BPC_CameroidFilm_C_CreateSave");
static_assert(offsetof(BPC_CameroidFilm_C_CreateSave, Save) == 0x000000, "Member 'BPC_CameroidFilm_C_CreateSave::Save' has a wrong offset!");
static_assert(offsetof(BPC_CameroidFilm_C_CreateSave, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000008, "Member 'BPC_CameroidFilm_C_CreateSave::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function BPC_CameroidFilm.BPC_CameroidFilm_C.GetCapturesLeft
// 0x000C (0x000C - 0x0000)
struct BPC_CameroidFilm_C_GetCapturesLeft final
{
public:
	int32                                         CapturesLeft;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CameroidFilm_C_GetCapturesLeft) == 0x000004, "Wrong alignment on BPC_CameroidFilm_C_GetCapturesLeft");
static_assert(sizeof(BPC_CameroidFilm_C_GetCapturesLeft) == 0x00000C, "Wrong size on BPC_CameroidFilm_C_GetCapturesLeft");
static_assert(offsetof(BPC_CameroidFilm_C_GetCapturesLeft, CapturesLeft) == 0x000000, "Member 'BPC_CameroidFilm_C_GetCapturesLeft::CapturesLeft' has a wrong offset!");
static_assert(offsetof(BPC_CameroidFilm_C_GetCapturesLeft, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BPC_CameroidFilm_C_GetCapturesLeft::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CameroidFilm_C_GetCapturesLeft, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BPC_CameroidFilm_C_GetCapturesLeft::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_CameroidFilm.BPC_CameroidFilm_C.IsEmpty
// 0x0002 (0x0002 - 0x0000)
struct BPC_CameroidFilm_C_IsEmpty final
{
public:
	bool                                          Empty;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CameroidFilm_C_IsEmpty) == 0x000001, "Wrong alignment on BPC_CameroidFilm_C_IsEmpty");
static_assert(sizeof(BPC_CameroidFilm_C_IsEmpty) == 0x000002, "Wrong size on BPC_CameroidFilm_C_IsEmpty");
static_assert(offsetof(BPC_CameroidFilm_C_IsEmpty, Empty) == 0x000000, "Member 'BPC_CameroidFilm_C_IsEmpty::Empty' has a wrong offset!");
static_assert(offsetof(BPC_CameroidFilm_C_IsEmpty, CallFunc_Array_IsEmpty_ReturnValue) == 0x000001, "Member 'BPC_CameroidFilm_C_IsEmpty::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function BPC_CameroidFilm.BPC_CameroidFilm_C.LoadSave
// 0x0018 (0x0018 - 0x0000)
struct BPC_CameroidFilm_C_LoadSave final
{
public:
	class USaveGame*                              Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CameroidFilmSave_C*                 K2Node_DynamicCast_AsBP_Cameroid_Film_Save;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CameroidFilm_C_LoadSave) == 0x000008, "Wrong alignment on BPC_CameroidFilm_C_LoadSave");
static_assert(sizeof(BPC_CameroidFilm_C_LoadSave) == 0x000018, "Wrong size on BPC_CameroidFilm_C_LoadSave");
static_assert(offsetof(BPC_CameroidFilm_C_LoadSave, Save) == 0x000000, "Member 'BPC_CameroidFilm_C_LoadSave::Save' has a wrong offset!");
static_assert(offsetof(BPC_CameroidFilm_C_LoadSave, K2Node_DynamicCast_AsBP_Cameroid_Film_Save) == 0x000008, "Member 'BPC_CameroidFilm_C_LoadSave::K2Node_DynamicCast_AsBP_Cameroid_Film_Save' has a wrong offset!");
static_assert(offsetof(BPC_CameroidFilm_C_LoadSave, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BPC_CameroidFilm_C_LoadSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_CameroidFilm_C_LoadSave, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BPC_CameroidFilm_C_LoadSave::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

