#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_Stalker_AngerUpdater

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_Stalker_AngerUpdater.BTS_Stalker_AngerUpdater_C
// 0x0060 (0x00F8 - 0x0098)
class UBTS_Stalker_AngerUpdater_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 AngerKey;                                          // 0x00A0(0x0028)(Edit, BlueprintVisible)
	double                                        AngerPerSec;                                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 LineOfSightKey;                                    // 0x00D0(0x0028)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BTS_Stalker_AngerUpdater(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_Stalker_AngerUpdater_C">();
	}
	static class UBTS_Stalker_AngerUpdater_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_Stalker_AngerUpdater_C>();
	}
};
static_assert(alignof(UBTS_Stalker_AngerUpdater_C) == 0x000008, "Wrong alignment on UBTS_Stalker_AngerUpdater_C");
static_assert(sizeof(UBTS_Stalker_AngerUpdater_C) == 0x0000F8, "Wrong size on UBTS_Stalker_AngerUpdater_C");
static_assert(offsetof(UBTS_Stalker_AngerUpdater_C, UberGraphFrame) == 0x000098, "Member 'UBTS_Stalker_AngerUpdater_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_Stalker_AngerUpdater_C, AngerKey) == 0x0000A0, "Member 'UBTS_Stalker_AngerUpdater_C::AngerKey' has a wrong offset!");
static_assert(offsetof(UBTS_Stalker_AngerUpdater_C, AngerPerSec) == 0x0000C8, "Member 'UBTS_Stalker_AngerUpdater_C::AngerPerSec' has a wrong offset!");
static_assert(offsetof(UBTS_Stalker_AngerUpdater_C, LineOfSightKey) == 0x0000D0, "Member 'UBTS_Stalker_AngerUpdater_C::LineOfSightKey' has a wrong offset!");

}

