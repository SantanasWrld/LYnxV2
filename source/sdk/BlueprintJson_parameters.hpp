#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintJson

#include "Basic.hpp"

#include "BlueprintJson_structs.hpp"


namespace SDK::Params
{

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonObjectToJsonValue
// 0x0030 (0x0030 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonObjectToJsonValue final
{
public:
	struct FBlueprintJsonObject                   JsonObject;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 FieldName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlueprintJsonValue                    ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonObjectToJsonValue) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonObjectToJsonValue");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonObjectToJsonValue) == 0x000030, "Wrong size on BlueprintJsonLibrary_Conv_JsonObjectToJsonValue");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonObjectToJsonValue, JsonObject) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonObjectToJsonValue::JsonObject' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonObjectToJsonValue, FieldName) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonObjectToJsonValue::FieldName' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonObjectToJsonValue, ReturnValue) == 0x000020, "Member 'BlueprintJsonLibrary_Conv_JsonObjectToJsonValue::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonObjectToPrettyString
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonObjectToPrettyString final
{
public:
	struct FBlueprintJsonObject                   JsonObject;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonObjectToPrettyString) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonObjectToPrettyString");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonObjectToPrettyString) == 0x000020, "Wrong size on BlueprintJsonLibrary_Conv_JsonObjectToPrettyString");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonObjectToPrettyString, JsonObject) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonObjectToPrettyString::JsonObject' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonObjectToPrettyString, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonObjectToPrettyString::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonObjectToString
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonObjectToString final
{
public:
	struct FBlueprintJsonObject                   JsonObject;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonObjectToString) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonObjectToString");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonObjectToString) == 0x000020, "Wrong size on BlueprintJsonLibrary_Conv_JsonObjectToString");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonObjectToString, JsonObject) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonObjectToString::JsonObject' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonObjectToString, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonObjectToString::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonValueToArray
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonValueToArray final
{
public:
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FBlueprintJsonValue>            ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonValueToArray) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonValueToArray");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonValueToArray) == 0x000020, "Wrong size on BlueprintJsonLibrary_Conv_JsonValueToArray");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToArray, JsonValue) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonValueToArray::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToArray, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonValueToArray::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonValueToBool
// 0x0018 (0x0018 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonValueToBool final
{
public:
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonValueToBool) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonValueToBool");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonValueToBool) == 0x000018, "Wrong size on BlueprintJsonLibrary_Conv_JsonValueToBool");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToBool, JsonValue) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonValueToBool::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToBool, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonValueToBool::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonValueToFloat
// 0x0018 (0x0018 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonValueToFloat final
{
public:
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonValueToFloat) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonValueToFloat");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonValueToFloat) == 0x000018, "Wrong size on BlueprintJsonLibrary_Conv_JsonValueToFloat");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToFloat, JsonValue) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonValueToFloat::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToFloat, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonValueToFloat::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonValueToInteger
// 0x0018 (0x0018 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonValueToInteger final
{
public:
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonValueToInteger) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonValueToInteger");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonValueToInteger) == 0x000018, "Wrong size on BlueprintJsonLibrary_Conv_JsonValueToInteger");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToInteger, JsonValue) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonValueToInteger::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToInteger, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonValueToInteger::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonValueToObject
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonValueToObject final
{
public:
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FBlueprintJsonObject                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonValueToObject) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonValueToObject");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonValueToObject) == 0x000020, "Wrong size on BlueprintJsonLibrary_Conv_JsonValueToObject");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToObject, JsonValue) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonValueToObject::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToObject, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonValueToObject::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_JsonValueToString
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_Conv_JsonValueToString final
{
public:
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_Conv_JsonValueToString) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_JsonValueToString");
static_assert(sizeof(BlueprintJsonLibrary_Conv_JsonValueToString) == 0x000020, "Wrong size on BlueprintJsonLibrary_Conv_JsonValueToString");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToString, JsonValue) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_JsonValueToString::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_JsonValueToString, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_JsonValueToString::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.Conv_StringToJsonObject
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_Conv_StringToJsonObject final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlueprintJsonObject                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_Conv_StringToJsonObject) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_Conv_StringToJsonObject");
static_assert(sizeof(BlueprintJsonLibrary_Conv_StringToJsonObject) == 0x000020, "Wrong size on BlueprintJsonLibrary_Conv_StringToJsonObject");
static_assert(offsetof(BlueprintJsonLibrary_Conv_StringToJsonObject, JsonString) == 0x000000, "Member 'BlueprintJsonLibrary_Conv_StringToJsonObject::JsonString' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_Conv_StringToJsonObject, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_Conv_StringToJsonObject::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.EquaEqual_JsonValue
// 0x0028 (0x0028 - 0x0000)
struct BlueprintJsonLibrary_EquaEqual_JsonValue final
{
public:
	struct FBlueprintJsonValue                    A;                                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FBlueprintJsonValue                    B;                                                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_EquaEqual_JsonValue) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_EquaEqual_JsonValue");
static_assert(sizeof(BlueprintJsonLibrary_EquaEqual_JsonValue) == 0x000028, "Wrong size on BlueprintJsonLibrary_EquaEqual_JsonValue");
static_assert(offsetof(BlueprintJsonLibrary_EquaEqual_JsonValue, A) == 0x000000, "Member 'BlueprintJsonLibrary_EquaEqual_JsonValue::A' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_EquaEqual_JsonValue, B) == 0x000010, "Member 'BlueprintJsonLibrary_EquaEqual_JsonValue::B' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_EquaEqual_JsonValue, ReturnValue) == 0x000020, "Member 'BlueprintJsonLibrary_EquaEqual_JsonValue::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonHasField
// 0x0028 (0x0028 - 0x0000)
struct BlueprintJsonLibrary_JsonHasField final
{
public:
	struct FBlueprintJsonObject                   JsonObject;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 FieldName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_JsonHasField) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonHasField");
static_assert(sizeof(BlueprintJsonLibrary_JsonHasField) == 0x000028, "Wrong size on BlueprintJsonLibrary_JsonHasField");
static_assert(offsetof(BlueprintJsonLibrary_JsonHasField, JsonObject) == 0x000000, "Member 'BlueprintJsonLibrary_JsonHasField::JsonObject' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonHasField, FieldName) == 0x000010, "Member 'BlueprintJsonLibrary_JsonHasField::FieldName' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonHasField, ReturnValue) == 0x000020, "Member 'BlueprintJsonLibrary_JsonHasField::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonHasTypedField
// 0x0028 (0x0028 - 0x0000)
struct BlueprintJsonLibrary_JsonHasTypedField final
{
public:
	struct FBlueprintJsonObject                   JsonObject;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 FieldName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJsonType                                     Type;                                              // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_JsonHasTypedField) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonHasTypedField");
static_assert(sizeof(BlueprintJsonLibrary_JsonHasTypedField) == 0x000028, "Wrong size on BlueprintJsonLibrary_JsonHasTypedField");
static_assert(offsetof(BlueprintJsonLibrary_JsonHasTypedField, JsonObject) == 0x000000, "Member 'BlueprintJsonLibrary_JsonHasTypedField::JsonObject' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonHasTypedField, FieldName) == 0x000010, "Member 'BlueprintJsonLibrary_JsonHasTypedField::FieldName' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonHasTypedField, Type) == 0x000020, "Member 'BlueprintJsonLibrary_JsonHasTypedField::Type' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonHasTypedField, ReturnValue) == 0x000021, "Member 'BlueprintJsonLibrary_JsonHasTypedField::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonIsNull
// 0x0018 (0x0018 - 0x0000)
struct BlueprintJsonLibrary_JsonIsNull final
{
public:
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_JsonIsNull) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonIsNull");
static_assert(sizeof(BlueprintJsonLibrary_JsonIsNull) == 0x000018, "Wrong size on BlueprintJsonLibrary_JsonIsNull");
static_assert(offsetof(BlueprintJsonLibrary_JsonIsNull, JsonValue) == 0x000000, "Member 'BlueprintJsonLibrary_JsonIsNull::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonIsNull, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_JsonIsNull::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMake
// 0x0010 (0x0010 - 0x0000)
struct BlueprintJsonLibrary_JsonMake final
{
public:
	struct FBlueprintJsonObject                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMake) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMake");
static_assert(sizeof(BlueprintJsonLibrary_JsonMake) == 0x000010, "Wrong size on BlueprintJsonLibrary_JsonMake");
static_assert(offsetof(BlueprintJsonLibrary_JsonMake, ReturnValue) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMake::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMakeArray
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_JsonMakeArray final
{
public:
	TArray<struct FBlueprintJsonValue>            Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FBlueprintJsonValue                    ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMakeArray) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMakeArray");
static_assert(sizeof(BlueprintJsonLibrary_JsonMakeArray) == 0x000020, "Wrong size on BlueprintJsonLibrary_JsonMakeArray");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeArray, Value) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMakeArray::Value' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeArray, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_JsonMakeArray::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMakeBool
// 0x0018 (0x0018 - 0x0000)
struct BlueprintJsonLibrary_JsonMakeBool final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonValue                    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMakeBool) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMakeBool");
static_assert(sizeof(BlueprintJsonLibrary_JsonMakeBool) == 0x000018, "Wrong size on BlueprintJsonLibrary_JsonMakeBool");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeBool, Value) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMakeBool::Value' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeBool, ReturnValue) == 0x000008, "Member 'BlueprintJsonLibrary_JsonMakeBool::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMakeField
// 0x0040 (0x0040 - 0x0000)
struct BlueprintJsonLibrary_JsonMakeField final
{
public:
	struct FBlueprintJsonObject                   JsonObject;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 FieldName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlueprintJsonValue                    Value;                                             // 0x0020(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FBlueprintJsonObject                   ReturnValue;                                       // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMakeField) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMakeField");
static_assert(sizeof(BlueprintJsonLibrary_JsonMakeField) == 0x000040, "Wrong size on BlueprintJsonLibrary_JsonMakeField");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeField, JsonObject) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMakeField::JsonObject' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeField, FieldName) == 0x000010, "Member 'BlueprintJsonLibrary_JsonMakeField::FieldName' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeField, Value) == 0x000020, "Member 'BlueprintJsonLibrary_JsonMakeField::Value' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeField, ReturnValue) == 0x000030, "Member 'BlueprintJsonLibrary_JsonMakeField::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMakeFloat
// 0x0018 (0x0018 - 0x0000)
struct BlueprintJsonLibrary_JsonMakeFloat final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonValue                    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMakeFloat) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMakeFloat");
static_assert(sizeof(BlueprintJsonLibrary_JsonMakeFloat) == 0x000018, "Wrong size on BlueprintJsonLibrary_JsonMakeFloat");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeFloat, Value) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMakeFloat::Value' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeFloat, ReturnValue) == 0x000008, "Member 'BlueprintJsonLibrary_JsonMakeFloat::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMakeInt
// 0x0018 (0x0018 - 0x0000)
struct BlueprintJsonLibrary_JsonMakeInt final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintJsonValue                    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMakeInt) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMakeInt");
static_assert(sizeof(BlueprintJsonLibrary_JsonMakeInt) == 0x000018, "Wrong size on BlueprintJsonLibrary_JsonMakeInt");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeInt, Value) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMakeInt::Value' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeInt, ReturnValue) == 0x000008, "Member 'BlueprintJsonLibrary_JsonMakeInt::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMakeNull
// 0x0010 (0x0010 - 0x0000)
struct BlueprintJsonLibrary_JsonMakeNull final
{
public:
	struct FBlueprintJsonValue                    ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMakeNull) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMakeNull");
static_assert(sizeof(BlueprintJsonLibrary_JsonMakeNull) == 0x000010, "Wrong size on BlueprintJsonLibrary_JsonMakeNull");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeNull, ReturnValue) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMakeNull::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMakeObject
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_JsonMakeObject final
{
public:
	struct FBlueprintJsonObject                   Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FBlueprintJsonValue                    ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMakeObject) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMakeObject");
static_assert(sizeof(BlueprintJsonLibrary_JsonMakeObject) == 0x000020, "Wrong size on BlueprintJsonLibrary_JsonMakeObject");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeObject, Value) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMakeObject::Value' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeObject, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_JsonMakeObject::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonMakeString
// 0x0020 (0x0020 - 0x0000)
struct BlueprintJsonLibrary_JsonMakeString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlueprintJsonValue                    ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonMakeString) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonMakeString");
static_assert(sizeof(BlueprintJsonLibrary_JsonMakeString) == 0x000020, "Wrong size on BlueprintJsonLibrary_JsonMakeString");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeString, Value) == 0x000000, "Member 'BlueprintJsonLibrary_JsonMakeString::Value' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonMakeString, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_JsonMakeString::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonRemoveField
// 0x0030 (0x0030 - 0x0000)
struct BlueprintJsonLibrary_JsonRemoveField final
{
public:
	struct FBlueprintJsonObject                   JsonObject;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 FieldName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlueprintJsonObject                   ReturnValue;                                       // 0x0020(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonRemoveField) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonRemoveField");
static_assert(sizeof(BlueprintJsonLibrary_JsonRemoveField) == 0x000030, "Wrong size on BlueprintJsonLibrary_JsonRemoveField");
static_assert(offsetof(BlueprintJsonLibrary_JsonRemoveField, JsonObject) == 0x000000, "Member 'BlueprintJsonLibrary_JsonRemoveField::JsonObject' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonRemoveField, FieldName) == 0x000010, "Member 'BlueprintJsonLibrary_JsonRemoveField::FieldName' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonRemoveField, ReturnValue) == 0x000020, "Member 'BlueprintJsonLibrary_JsonRemoveField::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonSetField
// 0x0040 (0x0040 - 0x0000)
struct BlueprintJsonLibrary_JsonSetField final
{
public:
	struct FBlueprintJsonObject                   JsonObject;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 FieldName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FBlueprintJsonObject                   ReturnValue;                                       // 0x0030(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintJsonLibrary_JsonSetField) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonSetField");
static_assert(sizeof(BlueprintJsonLibrary_JsonSetField) == 0x000040, "Wrong size on BlueprintJsonLibrary_JsonSetField");
static_assert(offsetof(BlueprintJsonLibrary_JsonSetField, JsonObject) == 0x000000, "Member 'BlueprintJsonLibrary_JsonSetField::JsonObject' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonSetField, FieldName) == 0x000010, "Member 'BlueprintJsonLibrary_JsonSetField::FieldName' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonSetField, JsonValue) == 0x000020, "Member 'BlueprintJsonLibrary_JsonSetField::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonSetField, ReturnValue) == 0x000030, "Member 'BlueprintJsonLibrary_JsonSetField::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.JsonType
// 0x0018 (0x0018 - 0x0000)
struct BlueprintJsonLibrary_JsonType final
{
public:
	struct FBlueprintJsonValue                    JsonValue;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EJsonType                                     ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_JsonType) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_JsonType");
static_assert(sizeof(BlueprintJsonLibrary_JsonType) == 0x000018, "Wrong size on BlueprintJsonLibrary_JsonType");
static_assert(offsetof(BlueprintJsonLibrary_JsonType, JsonValue) == 0x000000, "Member 'BlueprintJsonLibrary_JsonType::JsonValue' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_JsonType, ReturnValue) == 0x000010, "Member 'BlueprintJsonLibrary_JsonType::ReturnValue' has a wrong offset!");

// Function BlueprintJson.BlueprintJsonLibrary.NotEqual_JsonValue
// 0x0028 (0x0028 - 0x0000)
struct BlueprintJsonLibrary_NotEqual_JsonValue final
{
public:
	struct FBlueprintJsonValue                    A;                                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FBlueprintJsonValue                    B;                                                 // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BlueprintJsonLibrary_NotEqual_JsonValue) == 0x000008, "Wrong alignment on BlueprintJsonLibrary_NotEqual_JsonValue");
static_assert(sizeof(BlueprintJsonLibrary_NotEqual_JsonValue) == 0x000028, "Wrong size on BlueprintJsonLibrary_NotEqual_JsonValue");
static_assert(offsetof(BlueprintJsonLibrary_NotEqual_JsonValue, A) == 0x000000, "Member 'BlueprintJsonLibrary_NotEqual_JsonValue::A' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_NotEqual_JsonValue, B) == 0x000010, "Member 'BlueprintJsonLibrary_NotEqual_JsonValue::B' has a wrong offset!");
static_assert(offsetof(BlueprintJsonLibrary_NotEqual_JsonValue, ReturnValue) == 0x000020, "Member 'BlueprintJsonLibrary_NotEqual_JsonValue::ReturnValue' has a wrong offset!");

}

