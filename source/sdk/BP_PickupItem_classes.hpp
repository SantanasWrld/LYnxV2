#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PickupItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_InventoryItem_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PickupItem.BP_PickupItem_C
// 0x0048 (0x02E0 - 0x0298)
class ABP_PickupItem_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_InventoryItem                               InventoryItem;                                     // 0x02B0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemId;                                            // 0x02B4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   InteractText;                                      // 0x02B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        InteractDistance;                                  // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              GrabSound;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void GetInteractDuration(double* Duration);
	void GetInteractDistance(double* Distance);
	void GetInteractText(class FText* Text);
	void GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange);
	void LoadSaveObject(class USaveGame** Save);
	void InteractionStarted();
	void InteractionStopped();
	void Interact(class ABP_UPPlayerCharacter_C* Player);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_PickupItem(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PickupItem_C">();
	}
	static class ABP_PickupItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PickupItem_C>();
	}
};
static_assert(alignof(ABP_PickupItem_C) == 0x000008, "Wrong alignment on ABP_PickupItem_C");
static_assert(sizeof(ABP_PickupItem_C) == 0x0002E0, "Wrong size on ABP_PickupItem_C");
static_assert(offsetof(ABP_PickupItem_C, UberGraphFrame) == 0x000298, "Member 'ABP_PickupItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PickupItem_C, Sphere) == 0x0002A0, "Member 'ABP_PickupItem_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_PickupItem_C, Mesh) == 0x0002A8, "Member 'ABP_PickupItem_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_PickupItem_C, InventoryItem) == 0x0002B0, "Member 'ABP_PickupItem_C::InventoryItem' has a wrong offset!");
static_assert(offsetof(ABP_PickupItem_C, ItemId) == 0x0002B4, "Member 'ABP_PickupItem_C::ItemId' has a wrong offset!");
static_assert(offsetof(ABP_PickupItem_C, InteractText) == 0x0002B8, "Member 'ABP_PickupItem_C::InteractText' has a wrong offset!");
static_assert(offsetof(ABP_PickupItem_C, InteractDistance) == 0x0002D0, "Member 'ABP_PickupItem_C::InteractDistance' has a wrong offset!");
static_assert(offsetof(ABP_PickupItem_C, GrabSound) == 0x0002D8, "Member 'ABP_PickupItem_C::GrabSound' has a wrong offset!");

}

