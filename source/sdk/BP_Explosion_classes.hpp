#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Explosion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_Dismemberment_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Explosion.BP_Explosion_C
// 0x0088 (0x0320 - 0x0298)
class ABP_Explosion_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_ScoringComponent_C*                Explosion_Scoring;                                 // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Explosion_Scoring_Box;                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PersistentEffects;                                 // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       KillingSphere;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      ExplosionParticles;                                // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ExplosionEffects;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialForceComponent*                  RadialForce;                                       // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              ExplosionSound;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoExplode;                                       // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        KillingForce;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exploded;                                          // 0x0304(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraShakeRadiusMultiplier;                       // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UCameraShakeBase>           CameraShake;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_Dismemberment                               Dismemberment;                                     // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetActorsInDanger(TArray<class AActor*>* ActorsInDanger);
	void ReceiveBeginPlay();
	void Explode__Server_();
	void OnRep_Exploded();
	void ExplosionCameraShake();
	void ExecuteUbergraph_BP_Explosion(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Explosion_C">();
	}
	static class ABP_Explosion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Explosion_C>();
	}
};
static_assert(alignof(ABP_Explosion_C) == 0x000008, "Wrong alignment on ABP_Explosion_C");
static_assert(sizeof(ABP_Explosion_C) == 0x000320, "Wrong size on ABP_Explosion_C");
static_assert(offsetof(ABP_Explosion_C, UberGraphFrame) == 0x000298, "Member 'ABP_Explosion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, Explosion_Scoring) == 0x0002A0, "Member 'ABP_Explosion_C::Explosion_Scoring' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, Explosion_Scoring_Box) == 0x0002A8, "Member 'ABP_Explosion_C::Explosion_Scoring_Box' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, Decal) == 0x0002B0, "Member 'ABP_Explosion_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, PersistentEffects) == 0x0002B8, "Member 'ABP_Explosion_C::PersistentEffects' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, KillingSphere) == 0x0002C0, "Member 'ABP_Explosion_C::KillingSphere' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ExplosionParticles) == 0x0002C8, "Member 'ABP_Explosion_C::ExplosionParticles' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ExplosionEffects) == 0x0002D0, "Member 'ABP_Explosion_C::ExplosionEffects' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, RadialForce) == 0x0002D8, "Member 'ABP_Explosion_C::RadialForce' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_Explosion_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ExplosionSound) == 0x0002E8, "Member 'ABP_Explosion_C::ExplosionSound' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, AutoExplode) == 0x0002F0, "Member 'ABP_Explosion_C::AutoExplode' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, KillingForce) == 0x0002F8, "Member 'ABP_Explosion_C::KillingForce' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, Damage) == 0x000300, "Member 'ABP_Explosion_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, Exploded) == 0x000304, "Member 'ABP_Explosion_C::Exploded' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, CameraShakeRadiusMultiplier) == 0x000308, "Member 'ABP_Explosion_C::CameraShakeRadiusMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, CameraShake) == 0x000310, "Member 'ABP_Explosion_C::CameraShake' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, Dismemberment) == 0x000318, "Member 'ABP_Explosion_C::Dismemberment' has a wrong offset!");

}

