#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReplicatedCapture

#include "Basic.hpp"

#include "BP_ReplicatedCapture_classes.hpp"
#include "BP_ReplicatedCapture_parameters.hpp"


namespace SDK
{

// Function BP_ReplicatedCapture.BP_ReplicatedCapture_C.CheckIfReady
// (BlueprintCallable, BlueprintEvent)

void ABP_ReplicatedCapture_C::CheckIfReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReplicatedCapture_C", "CheckIfReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReplicatedCapture.BP_ReplicatedCapture_C.ExecuteUbergraph_BP_ReplicatedCapture
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReplicatedCapture_C::ExecuteUbergraph_BP_ReplicatedCapture(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReplicatedCapture_C", "ExecuteUbergraph_BP_ReplicatedCapture");

	Params::BP_ReplicatedCapture_C_ExecuteUbergraph_BP_ReplicatedCapture Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReplicatedCapture.BP_ReplicatedCapture_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ReplicatedCapture_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReplicatedCapture_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ReplicatedCapture.BP_ReplicatedCapture_C.SetCaptureId
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CaptureId_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ReplicatedCapture_C::SetCaptureId(int32 CaptureId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReplicatedCapture_C", "SetCaptureId");

	Params::BP_ReplicatedCapture_C_SetCaptureId Parms{};

	Parms.CaptureId_0 = CaptureId_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ReplicatedCapture.BP_ReplicatedCapture_C.SetCompressedData
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<uint8>&                    CompressedData_0                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_ReplicatedCapture_C::SetCompressedData(const TArray<uint8>& CompressedData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ReplicatedCapture_C", "SetCompressedData");

	Params::BP_ReplicatedCapture_C_SetCompressedData Parms{};

	Parms.CompressedData_0 = std::move(CompressedData_0);

	UObject::ProcessEvent(Func, &Parms);
}

}

