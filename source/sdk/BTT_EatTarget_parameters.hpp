#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_EatTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_EatTarget.BTT_EatTarget_C.CalculateFutureTargetLocation
// 0x00E8 (0x00E8 - 0x0000)
struct BTT_EatTarget_C_CalculateFutureTargetLocation final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_EatTarget_C_CalculateFutureTargetLocation) == 0x000008, "Wrong alignment on BTT_EatTarget_C_CalculateFutureTargetLocation");
static_assert(sizeof(BTT_EatTarget_C_CalculateFutureTargetLocation) == 0x0000E8, "Wrong size on BTT_EatTarget_C_CalculateFutureTargetLocation");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, Target) == 0x000000, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::Target' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, Time) == 0x000008, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::Time' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, Location) == 0x000010, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000028, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000040, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, CallFunc_GetVelocity_ReturnValue) == 0x000070, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000A0, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000B8, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_CalculateFutureTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BTT_EatTarget_C_CalculateFutureTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BTT_EatTarget.BTT_EatTarget_C.ExecuteUbergraph_BTT_EatTarget
// 0x0040 (0x0040 - 0x0000)
struct BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Velociralien_C*                     K2Node_DynamicCast_AsBP_Velociralien;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                K2Node_DynamicCast_AsBP_Killable_Character;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget) == 0x000008, "Wrong alignment on BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget");
static_assert(sizeof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget) == 0x000040, "Wrong size on BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget");
static_assert(offsetof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget, EntryPoint) == 0x000000, "Member 'BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000018, "Member 'BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget, K2Node_DynamicCast_AsBP_Velociralien) == 0x000020, "Member 'BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget::K2Node_DynamicCast_AsBP_Velociralien' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget, K2Node_DynamicCast_AsBP_Killable_Character) == 0x000030, "Member 'BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget::K2Node_DynamicCast_AsBP_Killable_Character' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BTT_EatTarget_C_ExecuteUbergraph_BTT_EatTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BTT_EatTarget.BTT_EatTarget_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_EatTarget_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_EatTarget_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_EatTarget_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_EatTarget_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_EatTarget_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_EatTarget_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_EatTarget_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_EatTarget_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_EatTarget_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

