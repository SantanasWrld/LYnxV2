#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerAvatarOption

#include "Basic.hpp"

#include "E_PlayerAvatar_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PlayerAvatarOption.W_PlayerAvatarOption_C.ExecuteUbergraph_W_PlayerAvatarOption
// 0x0048 (0x0048 - 0x0000)
struct W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSelected;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerAvatar                                K2Node_CustomEvent_Avatar;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0034(0x0014)()
};
static_assert(alignof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption) == 0x000008, "Wrong alignment on W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption");
static_assert(sizeof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption) == 0x000048, "Wrong size on W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption");
static_assert(offsetof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption, EntryPoint) == 0x000000, "Member 'W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption, K2Node_CustomEvent_IsSelected) == 0x000010, "Member 'W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption::K2Node_CustomEvent_IsSelected' has a wrong offset!");
static_assert(offsetof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption, K2Node_CustomEvent_Avatar) == 0x000011, "Member 'W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption::K2Node_CustomEvent_Avatar' has a wrong offset!");
static_assert(offsetof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption, CallFunc_Map_Find_Value) == 0x000018, "Member 'W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption, CallFunc_SelectColor_ReturnValue) == 0x000024, "Member 'W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption, K2Node_MakeStruct_SlateColor) == 0x000034, "Member 'W_PlayerAvatarOption_C_ExecuteUbergraph_W_PlayerAvatarOption::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_PlayerAvatarOption.W_PlayerAvatarOption_C.InitAvatarOption
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerAvatarOption_C_InitAvatarOption final
{
public:
	E_PlayerAvatar                                Avatar;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerAvatarOption_C_InitAvatarOption) == 0x000001, "Wrong alignment on W_PlayerAvatarOption_C_InitAvatarOption");
static_assert(sizeof(W_PlayerAvatarOption_C_InitAvatarOption) == 0x000001, "Wrong size on W_PlayerAvatarOption_C_InitAvatarOption");
static_assert(offsetof(W_PlayerAvatarOption_C_InitAvatarOption, Avatar) == 0x000000, "Member 'W_PlayerAvatarOption_C_InitAvatarOption::Avatar' has a wrong offset!");

// Function W_PlayerAvatarOption.W_PlayerAvatarOption_C.UpdateSelected
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerAvatarOption_C_UpdateSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerAvatarOption_C_UpdateSelected) == 0x000001, "Wrong alignment on W_PlayerAvatarOption_C_UpdateSelected");
static_assert(sizeof(W_PlayerAvatarOption_C_UpdateSelected) == 0x000001, "Wrong size on W_PlayerAvatarOption_C_UpdateSelected");
static_assert(offsetof(W_PlayerAvatarOption_C_UpdateSelected, IsSelected) == 0x000000, "Member 'W_PlayerAvatarOption_C_UpdateSelected::IsSelected' has a wrong offset!");

}

