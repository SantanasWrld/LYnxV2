#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LimbItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LimbItem.BP_LimbItem_C.ExecuteUbergraph_BP_LimbItem
// 0x01B0 (0x01B0 - 0x0000)
struct BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Limb_C*                             K2Node_CustomEvent_Limb;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetThrowOriginLocation_ReturnValue;       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetThrowImpulseVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x00A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem) == 0x000008, "Wrong alignment on BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem");
static_assert(sizeof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem) == 0x0001B0, "Wrong size on BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, EntryPoint) == 0x000000, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, K2Node_Event_EndPlayReason) == 0x000020, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, K2Node_CustomEvent_Limb) == 0x000028, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::K2Node_CustomEvent_Limb' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_HasAuthority_ReturnValue_1) == 0x000031, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_GetThrowOriginLocation_ReturnValue) == 0x000038, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_GetThrowOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_GetThrowImpulseVector_ReturnValue) == 0x000050, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_GetThrowImpulseVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000A0, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x0000A8, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000190, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem, CallFunc_IsValid_ReturnValue_1) == 0x0001A8, "Member 'BP_LimbItem_C_ExecuteUbergraph_BP_LimbItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_LimbItem.BP_LimbItem_C.GetThrowImpulseVector
// 0x0068 (0x0068 - 0x0000)
struct BP_LimbItem_C_GetThrowImpulseVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LimbItem_C_GetThrowImpulseVector) == 0x000008, "Wrong alignment on BP_LimbItem_C_GetThrowImpulseVector");
static_assert(sizeof(BP_LimbItem_C_GetThrowImpulseVector) == 0x000068, "Wrong size on BP_LimbItem_C_GetThrowImpulseVector");
static_assert(offsetof(BP_LimbItem_C_GetThrowImpulseVector, ReturnValue) == 0x000000, "Member 'BP_LimbItem_C_GetThrowImpulseVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowImpulseVector, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'BP_LimbItem_C_GetThrowImpulseVector::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowImpulseVector, CallFunc_GetForwardVector_ReturnValue) == 0x000030, "Member 'BP_LimbItem_C_GetThrowImpulseVector::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowImpulseVector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000048, "Member 'BP_LimbItem_C_GetThrowImpulseVector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowImpulseVector, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000060, "Member 'BP_LimbItem_C_GetThrowImpulseVector::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_LimbItem.BP_LimbItem_C.GetThrowOriginLocation
// 0x0090 (0x0090 - 0x0000)
struct BP_LimbItem_C_GetThrowOriginLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LimbItem_C_GetThrowOriginLocation) == 0x000008, "Wrong alignment on BP_LimbItem_C_GetThrowOriginLocation");
static_assert(sizeof(BP_LimbItem_C_GetThrowOriginLocation) == 0x000090, "Wrong size on BP_LimbItem_C_GetThrowOriginLocation");
static_assert(offsetof(BP_LimbItem_C_GetThrowOriginLocation, ReturnValue) == 0x000000, "Member 'BP_LimbItem_C_GetThrowOriginLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowOriginLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'BP_LimbItem_C_GetThrowOriginLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowOriginLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'BP_LimbItem_C_GetThrowOriginLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowOriginLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BP_LimbItem_C_GetThrowOriginLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowOriginLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000060, "Member 'BP_LimbItem_C_GetThrowOriginLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LimbItem_C_GetThrowOriginLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BP_LimbItem_C_GetThrowOriginLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_LimbItem.BP_LimbItem_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_LimbItem_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LimbItem_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_LimbItem_C_ReceiveEndPlay");
static_assert(sizeof(BP_LimbItem_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_LimbItem_C_ReceiveEndPlay");
static_assert(offsetof(BP_LimbItem_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_LimbItem_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_LimbItem.BP_LimbItem_C.SetLimb
// 0x0008 (0x0008 - 0x0000)
struct BP_LimbItem_C_SetLimb final
{
public:
	class ABP_Limb_C*                             Limb_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LimbItem_C_SetLimb) == 0x000008, "Wrong alignment on BP_LimbItem_C_SetLimb");
static_assert(sizeof(BP_LimbItem_C_SetLimb) == 0x000008, "Wrong size on BP_LimbItem_C_SetLimb");
static_assert(offsetof(BP_LimbItem_C_SetLimb, Limb_0) == 0x000000, "Member 'BP_LimbItem_C_SetLimb::Limb_0' has a wrong offset!");

}

