#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Flashlight

#include "Basic.hpp"

#include "BP_InventoryItem_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Flashlight.BP_Flashlight_C
// 0x0030 (0x03A0 - 0x0370)
class ABP_Flashlight_C : public ABP_InventoryItem_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Flashlight_C;                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Bulb;                                              // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Battery;                                           // 0x0388(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BatteryDuration;                                   // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasLightEnabled;                                   // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CreateSaveObject(class USaveGame** Save);
	void IsBatteryEmpty(bool* Empty);
	void OnRep_IsInUse();
	void UpdateLightVisibility();
	void OnRep_IsEquipped();
	void ReceiveTick(float DeltaSeconds);
	void CheckEmptyBattery();
	void LoadSaveData(class USaveGame* Save);
	void ExecuteUbergraph_BP_Flashlight(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Flashlight_C">();
	}
	static class ABP_Flashlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Flashlight_C>();
	}
};
static_assert(alignof(ABP_Flashlight_C) == 0x000008, "Wrong alignment on ABP_Flashlight_C");
static_assert(sizeof(ABP_Flashlight_C) == 0x0003A0, "Wrong size on ABP_Flashlight_C");
static_assert(offsetof(ABP_Flashlight_C, UberGraphFrame_BP_Flashlight_C) == 0x000370, "Member 'ABP_Flashlight_C::UberGraphFrame_BP_Flashlight_C' has a wrong offset!");
static_assert(offsetof(ABP_Flashlight_C, Bulb) == 0x000378, "Member 'ABP_Flashlight_C::Bulb' has a wrong offset!");
static_assert(offsetof(ABP_Flashlight_C, SpotLight) == 0x000380, "Member 'ABP_Flashlight_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Flashlight_C, Battery) == 0x000388, "Member 'ABP_Flashlight_C::Battery' has a wrong offset!");
static_assert(offsetof(ABP_Flashlight_C, BatteryDuration) == 0x000390, "Member 'ABP_Flashlight_C::BatteryDuration' has a wrong offset!");
static_assert(offsetof(ABP_Flashlight_C, WasLightEnabled) == 0x000398, "Member 'ABP_Flashlight_C::WasLightEnabled' has a wrong offset!");

}

