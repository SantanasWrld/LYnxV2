#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Rocket

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Rocket.BP_Rocket_C
// 0x0048 (0x02E0 - 0x0298)
class ABP_Rocket_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_ScoringComponent_C*                Scoring;                                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SC_PassbyRocket;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RocketMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara1;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Exploded;                                          // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 BuildingExplosion;                                 // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RocketExplosion;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void SpawnExplosion(class AActor* HitActor, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_Rocket(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Rocket_C">();
	}
	static class ABP_Rocket_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Rocket_C>();
	}
};
static_assert(alignof(ABP_Rocket_C) == 0x000008, "Wrong alignment on ABP_Rocket_C");
static_assert(sizeof(ABP_Rocket_C) == 0x0002E0, "Wrong size on ABP_Rocket_C");
static_assert(offsetof(ABP_Rocket_C, UberGraphFrame) == 0x000298, "Member 'ABP_Rocket_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Rocket_C, Scoring) == 0x0002A0, "Member 'ABP_Rocket_C::Scoring' has a wrong offset!");
static_assert(offsetof(ABP_Rocket_C, SC_PassbyRocket) == 0x0002A8, "Member 'ABP_Rocket_C::SC_PassbyRocket' has a wrong offset!");
static_assert(offsetof(ABP_Rocket_C, RocketMesh) == 0x0002B0, "Member 'ABP_Rocket_C::RocketMesh' has a wrong offset!");
static_assert(offsetof(ABP_Rocket_C, Niagara1) == 0x0002B8, "Member 'ABP_Rocket_C::Niagara1' has a wrong offset!");
static_assert(offsetof(ABP_Rocket_C, Niagara) == 0x0002C0, "Member 'ABP_Rocket_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_Rocket_C, Exploded) == 0x0002C8, "Member 'ABP_Rocket_C::Exploded' has a wrong offset!");
static_assert(offsetof(ABP_Rocket_C, BuildingExplosion) == 0x0002D0, "Member 'ABP_Rocket_C::BuildingExplosion' has a wrong offset!");
static_assert(offsetof(ABP_Rocket_C, RocketExplosion) == 0x0002D8, "Member 'ABP_Rocket_C::RocketExplosion' has a wrong offset!");

}

