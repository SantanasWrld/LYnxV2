#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_AIOptimizer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_AIOptimizer.BPC_AIOptimizer_C
// 0x0030 (0x00D0 - 0x00A0)
class UBPC_AIOptimizer_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AAIController*                          Controller;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                Pawn;                                              // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_InteriorVolume_C*                   InteriorVolume;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSleeping;                                        // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UPGameInstance_C*                   GameInstance;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ShouldSleep(bool* Result);
	void ReceiveBeginPlay();
	void UpdateSleepState();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BPC_AIOptimizer(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_AIOptimizer_C">();
	}
	static class UBPC_AIOptimizer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_AIOptimizer_C>();
	}
};
static_assert(alignof(UBPC_AIOptimizer_C) == 0x000008, "Wrong alignment on UBPC_AIOptimizer_C");
static_assert(sizeof(UBPC_AIOptimizer_C) == 0x0000D0, "Wrong size on UBPC_AIOptimizer_C");
static_assert(offsetof(UBPC_AIOptimizer_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_AIOptimizer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_AIOptimizer_C, Controller) == 0x0000A8, "Member 'UBPC_AIOptimizer_C::Controller' has a wrong offset!");
static_assert(offsetof(UBPC_AIOptimizer_C, Pawn) == 0x0000B0, "Member 'UBPC_AIOptimizer_C::Pawn' has a wrong offset!");
static_assert(offsetof(UBPC_AIOptimizer_C, InteriorVolume) == 0x0000B8, "Member 'UBPC_AIOptimizer_C::InteriorVolume' has a wrong offset!");
static_assert(offsetof(UBPC_AIOptimizer_C, IsSleeping) == 0x0000C0, "Member 'UBPC_AIOptimizer_C::IsSleeping' has a wrong offset!");
static_assert(offsetof(UBPC_AIOptimizer_C, GameInstance) == 0x0000C8, "Member 'UBPC_AIOptimizer_C::GameInstance' has a wrong offset!");

}

