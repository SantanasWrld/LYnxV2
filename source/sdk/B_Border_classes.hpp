#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Border

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_RulesBorder_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Border.B_Border_C
// 0x0218 (0x04B0 - 0x0298)
class AB_Border_C final : public AActor
{
public:
	class USplineComponent*                       SplineBorder;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SimpleBorder;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CornerBorder;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            EndBorder;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SplineCornerBorder;                                // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Type_Border;                                       // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LengthSplineCorner;                                // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Closed_Loop;                                       // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CornerConcaveBorder;                               // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPoint;                                      // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentDistance;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberSections;                                    // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Section;                                   // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Section_Length;                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                locationFirstPoint;                                // 0x0300(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                tangetFirstPoint;                                  // 0x0318(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                locationLastPoint;                                 // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                tangetLastPoint;                                   // 0x0348(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   TempSplineMesh;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_Integer;                                      // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Snap_Spline_Unit;                                  // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_RulesBorder>                BorderRules;                                       // 0x0370(0x0010)(Edit, BlueprintVisible)
	class UDataTable*                             OverwriteBorderRules__Table_;                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FST_RulesBorder                        TempBorderRules;                                   // 0x0388(0x0028)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  RightAngles;                                       // 0x03B0(0x0010)(Edit, BlueprintVisible, AdvancedDisplay)
	TArray<bool>                                  ConcaveAngles;                                     // 0x03C0(0x0010)(Edit, BlueprintVisible, AdvancedDisplay)
	TArray<double>                                Point_Angles;                                      // 0x03D0(0x0010)(Edit, BlueprintVisible)
	class UStaticMeshComponent*                   TempCornerMesh;                                    // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class UMaterialInterface*> OverwriteMaterialPerSlot;                         // 0x03E8(0x0050)(Edit, BlueprintVisible)
	TArray<class UStaticMeshComponent*>           MeshComponents;                                    // 0x0438(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class FString>                         SlotsMaterial;                                     // 0x0448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         IntTemp;                                           // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UMaterialInterface*> TempMap;                                          // 0x0460(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construction();
	void MaterialChanged();
	void MaterialPerSlotFunction(class UMeshComponent* MeshComponent);
	void RemoveUselessOverwriteMaterials();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Border_C">();
	}
	static class AB_Border_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Border_C>();
	}
};
static_assert(alignof(AB_Border_C) == 0x000008, "Wrong alignment on AB_Border_C");
static_assert(sizeof(AB_Border_C) == 0x0004B0, "Wrong size on AB_Border_C");
static_assert(offsetof(AB_Border_C, SplineBorder) == 0x000298, "Member 'AB_Border_C::SplineBorder' has a wrong offset!");
static_assert(offsetof(AB_Border_C, DefaultSceneRoot) == 0x0002A0, "Member 'AB_Border_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_Border_C, SimpleBorder) == 0x0002A8, "Member 'AB_Border_C::SimpleBorder' has a wrong offset!");
static_assert(offsetof(AB_Border_C, CornerBorder) == 0x0002B0, "Member 'AB_Border_C::CornerBorder' has a wrong offset!");
static_assert(offsetof(AB_Border_C, EndBorder) == 0x0002B8, "Member 'AB_Border_C::EndBorder' has a wrong offset!");
static_assert(offsetof(AB_Border_C, SplineCornerBorder) == 0x0002C0, "Member 'AB_Border_C::SplineCornerBorder' has a wrong offset!");
static_assert(offsetof(AB_Border_C, Type_Border) == 0x0002C8, "Member 'AB_Border_C::Type_Border' has a wrong offset!");
static_assert(offsetof(AB_Border_C, LengthSplineCorner) == 0x0002CC, "Member 'AB_Border_C::LengthSplineCorner' has a wrong offset!");
static_assert(offsetof(AB_Border_C, Closed_Loop) == 0x0002D0, "Member 'AB_Border_C::Closed_Loop' has a wrong offset!");
static_assert(offsetof(AB_Border_C, CornerConcaveBorder) == 0x0002D8, "Member 'AB_Border_C::CornerConcaveBorder' has a wrong offset!");
static_assert(offsetof(AB_Border_C, CurrentPoint) == 0x0002E0, "Member 'AB_Border_C::CurrentPoint' has a wrong offset!");
static_assert(offsetof(AB_Border_C, CurrentDistance) == 0x0002E8, "Member 'AB_Border_C::CurrentDistance' has a wrong offset!");
static_assert(offsetof(AB_Border_C, NumberSections) == 0x0002F0, "Member 'AB_Border_C::NumberSections' has a wrong offset!");
static_assert(offsetof(AB_Border_C, Current_Section) == 0x0002F4, "Member 'AB_Border_C::Current_Section' has a wrong offset!");
static_assert(offsetof(AB_Border_C, Real_Section_Length) == 0x0002F8, "Member 'AB_Border_C::Real_Section_Length' has a wrong offset!");
static_assert(offsetof(AB_Border_C, locationFirstPoint) == 0x000300, "Member 'AB_Border_C::locationFirstPoint' has a wrong offset!");
static_assert(offsetof(AB_Border_C, tangetFirstPoint) == 0x000318, "Member 'AB_Border_C::tangetFirstPoint' has a wrong offset!");
static_assert(offsetof(AB_Border_C, locationLastPoint) == 0x000330, "Member 'AB_Border_C::locationLastPoint' has a wrong offset!");
static_assert(offsetof(AB_Border_C, tangetLastPoint) == 0x000348, "Member 'AB_Border_C::tangetLastPoint' has a wrong offset!");
static_assert(offsetof(AB_Border_C, TempSplineMesh) == 0x000360, "Member 'AB_Border_C::TempSplineMesh' has a wrong offset!");
static_assert(offsetof(AB_Border_C, Temp_Integer) == 0x000368, "Member 'AB_Border_C::Temp_Integer' has a wrong offset!");
static_assert(offsetof(AB_Border_C, Snap_Spline_Unit) == 0x00036C, "Member 'AB_Border_C::Snap_Spline_Unit' has a wrong offset!");
static_assert(offsetof(AB_Border_C, BorderRules) == 0x000370, "Member 'AB_Border_C::BorderRules' has a wrong offset!");
static_assert(offsetof(AB_Border_C, OverwriteBorderRules__Table_) == 0x000380, "Member 'AB_Border_C::OverwriteBorderRules__Table_' has a wrong offset!");
static_assert(offsetof(AB_Border_C, TempBorderRules) == 0x000388, "Member 'AB_Border_C::TempBorderRules' has a wrong offset!");
static_assert(offsetof(AB_Border_C, RightAngles) == 0x0003B0, "Member 'AB_Border_C::RightAngles' has a wrong offset!");
static_assert(offsetof(AB_Border_C, ConcaveAngles) == 0x0003C0, "Member 'AB_Border_C::ConcaveAngles' has a wrong offset!");
static_assert(offsetof(AB_Border_C, Point_Angles) == 0x0003D0, "Member 'AB_Border_C::Point_Angles' has a wrong offset!");
static_assert(offsetof(AB_Border_C, TempCornerMesh) == 0x0003E0, "Member 'AB_Border_C::TempCornerMesh' has a wrong offset!");
static_assert(offsetof(AB_Border_C, OverwriteMaterialPerSlot) == 0x0003E8, "Member 'AB_Border_C::OverwriteMaterialPerSlot' has a wrong offset!");
static_assert(offsetof(AB_Border_C, MeshComponents) == 0x000438, "Member 'AB_Border_C::MeshComponents' has a wrong offset!");
static_assert(offsetof(AB_Border_C, SlotsMaterial) == 0x000448, "Member 'AB_Border_C::SlotsMaterial' has a wrong offset!");
static_assert(offsetof(AB_Border_C, IntTemp) == 0x000458, "Member 'AB_Border_C::IntTemp' has a wrong offset!");
static_assert(offsetof(AB_Border_C, TempMap) == 0x000460, "Member 'AB_Border_C::TempMap' has a wrong offset!");

}

