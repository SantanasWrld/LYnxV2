#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteriorLoader

#include "Basic.hpp"

#include "BP_InteriorLoader_classes.hpp"
#include "BP_InteriorLoader_parameters.hpp"


namespace SDK
{

// Function BP_InteriorLoader.BP_InteriorLoader_C.ExecuteUbergraph_BP_InteriorLoader
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorLoader_C::ExecuteUbergraph_BP_InteriorLoader(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "ExecuteUbergraph_BP_InteriorLoader");

	Params::BP_InteriorLoader_C_ExecuteUbergraph_BP_InteriorLoader Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.GetExteriorPortals
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Portal_C*>*            ExteriorPortals                                        (Parm, OutParm)

void ABP_InteriorLoader_C::GetExteriorPortals(TArray<class ABP_Portal_C*>* ExteriorPortals)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "GetExteriorPortals");

	Params::BP_InteriorLoader_C_GetExteriorPortals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ExteriorPortals != nullptr)
		*ExteriorPortals = std::move(Parms.ExteriorPortals);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.GetInteriorPortals
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Portal_C*>*            InteriorPortals                                        (Parm, OutParm)

void ABP_InteriorLoader_C::GetInteriorPortals(TArray<class ABP_Portal_C*>* InteriorPortals)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "GetInteriorPortals");

	Params::BP_InteriorLoader_C_GetInteriorPortals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InteriorPortals != nullptr)
		*InteriorPortals = std::move(Parms.InteriorPortals);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.GetPortal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Portal_C*>&            Portals                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Portal_C**                    Portal                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorLoader_C::GetPortal(TArray<class ABP_Portal_C*>& Portals, int32 Index_0, class ABP_Portal_C** Portal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "GetPortal");

	Params::BP_InteriorLoader_C_GetPortal Parms{};

	Parms.Portals = std::move(Portals);
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	Portals = std::move(Parms.Portals);

	if (Portal != nullptr)
		*Portal = Parms.Portal;
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.InitPortals
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class ABP_Portal_C*>&      ExteriorPortals                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ABP_Portal_C*>&            InteriorPortals                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_InteriorLoader_C::InitPortals(const TArray<class ABP_Portal_C*>& ExteriorPortals, TArray<class ABP_Portal_C*>& InteriorPortals)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "InitPortals");

	Params::BP_InteriorLoader_C_InitPortals Parms{};

	Parms.ExteriorPortals = std::move(ExteriorPortals);
	Parms.InteriorPortals = std::move(InteriorPortals);

	UObject::ProcessEvent(Func, &Parms);

	InteriorPortals = std::move(Parms.InteriorPortals);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.InitPortalsWhenLoaded
// (BlueprintCallable, BlueprintEvent)

void ABP_InteriorLoader_C::InitPortalsWhenLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "InitPortalsWhenLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.IsInteriorLoaded
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorLoader_C::IsInteriorLoaded(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "IsInteriorLoaded");

	Params::BP_InteriorLoader_C_IsInteriorLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.IsReadyToLoad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorLoader_C::IsReadyToLoad(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "IsReadyToLoad");

	Params::BP_InteriorLoader_C_IsReadyToLoad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.LoadInterior
// (BlueprintCallable, BlueprintEvent)

void ABP_InteriorLoader_C::LoadInterior()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "LoadInterior");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.OnRep_Interior
// (BlueprintCallable, BlueprintEvent)

void ABP_InteriorLoader_C::OnRep_Interior()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "OnRep_Interior");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.OnRep_InteriorInstanceId
// (BlueprintCallable, BlueprintEvent)

void ABP_InteriorLoader_C::OnRep_InteriorInstanceId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "OnRep_InteriorInstanceId");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_InteriorLoader_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.SelectInterior
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_InteriorLoader_C*>&    Loaders                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TSoftObjectPtr<class UWorld>*           Interior_0                                             (Parm, OutParm, HasGetValueTypeHash)

void ABP_InteriorLoader_C::SelectInterior(TArray<class ABP_InteriorLoader_C*>& Loaders, TSoftObjectPtr<class UWorld>* Interior_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "SelectInterior");

	Params::BP_InteriorLoader_C_SelectInterior Parms{};

	Parms.Loaders = std::move(Loaders);

	UObject::ProcessEvent(Func, &Parms);

	Loaders = std::move(Parms.Loaders);

	if (Interior_0 != nullptr)
		*Interior_0 = Parms.Interior_0;
}


// Function BP_InteriorLoader.BP_InteriorLoader_C.ToPortalsArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>&                  Actors                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ABP_Portal_C*>*            Portals                                                (Parm, OutParm)

void ABP_InteriorLoader_C::ToPortalsArray(TArray<class AActor*>& Actors, TArray<class ABP_Portal_C*>* Portals)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorLoader_C", "ToPortalsArray");

	Params::BP_InteriorLoader_C_ToPortalsArray Parms{};

	Parms.Actors = std::move(Actors);

	UObject::ProcessEvent(Func, &Parms);

	Actors = std::move(Parms.Actors);

	if (Portals != nullptr)
		*Portals = std::move(Parms.Portals);
}

}

