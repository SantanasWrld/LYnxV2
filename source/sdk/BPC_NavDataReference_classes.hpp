#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_NavDataReference

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_NavDataReference.BPC_NavDataReference_C
// 0x0010 (0x00B0 - 0x00A0)
class UBPC_NavDataReference_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ARecastNavMesh*                         NavData;                                           // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPC_NavDataReference(int32 EntryPoint);
	void FindNavData(const class FString& AgentName, class ARecastNavMesh** NavData_0);
	void GetAgentName(double AgentRadius, class FString* AgentName);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_NavDataReference_C">();
	}
	static class UBPC_NavDataReference_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_NavDataReference_C>();
	}
};
static_assert(alignof(UBPC_NavDataReference_C) == 0x000008, "Wrong alignment on UBPC_NavDataReference_C");
static_assert(sizeof(UBPC_NavDataReference_C) == 0x0000B0, "Wrong size on UBPC_NavDataReference_C");
static_assert(offsetof(UBPC_NavDataReference_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_NavDataReference_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_NavDataReference_C, NavData) == 0x0000A8, "Member 'UBPC_NavDataReference_C::NavData' has a wrong offset!");

}

