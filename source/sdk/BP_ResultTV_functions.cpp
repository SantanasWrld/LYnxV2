#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResultTV

#include "Basic.hpp"

#include "BP_ResultTV_classes.hpp"
#include "BP_ResultTV_parameters.hpp"


namespace SDK
{

// Function BP_ResultTV.BP_ResultTV_C.AreAllSessionPlayersConnected
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResultTV_C::AreAllSessionPlayersConnected(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "AreAllSessionPlayersConnected");

	Params::BP_ResultTV_C_AreAllSessionPlayersConnected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_ResultTV.BP_ResultTV_C.ExecuteUbergraph_BP_ResultTV
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResultTV_C::ExecuteUbergraph_BP_ResultTV(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "ExecuteUbergraph_BP_ResultTV");

	Params::BP_ResultTV_C_ExecuteUbergraph_BP_ResultTV Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResultTV.BP_ResultTV_C.FetchAllCaptures
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::FetchAllCaptures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "FetchAllCaptures");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.GetCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   CaptureIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_CameroidCapture*              Capture                                                (Parm, OutParm, HasGetValueTypeHash)

void ABP_ResultTV_C::GetCapture(int32 CaptureIndex, struct FS_CameroidCapture* Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "GetCapture");

	Params::BP_ResultTV_C_GetCapture Parms{};

	Parms.CaptureIndex = CaptureIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Capture != nullptr)
		*Capture = std::move(Parms.Capture);
}


// Function BP_ResultTV.BP_ResultTV_C.GetInteractDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResultTV_C::GetInteractDistance(double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "GetInteractDistance");

	Params::BP_ResultTV_C_GetInteractDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_ResultTV.BP_ResultTV_C.GetInteractDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResultTV_C::GetInteractDuration(double* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "GetInteractDuration");

	Params::BP_ResultTV_C_GetInteractDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_ResultTV.BP_ResultTV_C.GetInteractNoise
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoiseOnInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NoiseRange                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResultTV_C::GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "GetInteractNoise");

	Params::BP_ResultTV_C_GetInteractNoise Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoiseOnInteract != nullptr)
		*NoiseOnInteract = Parms.NoiseOnInteract;

	if (NoiseRange != nullptr)
		*NoiseRange = Parms.NoiseRange;
}


// Function BP_ResultTV.BP_ResultTV_C.GetInteractText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            Text                                                   (Parm, OutParm)

void ABP_ResultTV_C::GetInteractText(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "GetInteractText");

	Params::BP_ResultTV_C_GetInteractText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_ResultTV.BP_ResultTV_C.GetTotalPoints
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Points                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResultTV_C::GetTotalPoints(int32* Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "GetTotalPoints");

	Params::BP_ResultTV_C_GetTotalPoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Points != nullptr)
		*Points = Parms.Points;
}


// Function BP_ResultTV.BP_ResultTV_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResultTV_C::Interact(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "Interact");

	Params::BP_ResultTV_C_Interact Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResultTV.BP_ResultTV_C.InteractionStarted
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::InteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "InteractionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.InteractionStopped
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::InteractionStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "InteractionStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.NextPage
// (BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::NextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "NextPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.OnRep_MosaicEnabled
// (BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::OnRep_MosaicEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "OnRep_MosaicEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.OnRep_MosaicPage
// (BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::OnRep_MosaicPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "OnRep_MosaicPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.OnRep_MosaicSelectionCapture
// (BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::OnRep_MosaicSelectionCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "OnRep_MosaicSelectionCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.OnRep_RecapInProgress
// (BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::OnRep_RecapInProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "OnRep_RecapInProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.OnRep_ResultsPending
// (BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::OnRep_ResultsPending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "OnRep_ResultsPending");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.PrevPage
// (BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::PrevPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "PrevPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.RecapFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_ResultTV_C::RecapFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "RecapFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ResultTV_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResultTV.BP_ResultTV_C.SelectMosaicCapture
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CameroidCapture&        Capture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ResultTV_C::SelectMosaicCapture(const struct FS_CameroidCapture& Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "SelectMosaicCapture");

	Params::BP_ResultTV_C_SelectMosaicCapture Parms{};

	Parms.Capture = std::move(Capture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResultTV.BP_ResultTV_C.SetMosaicVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResultTV_C::SetMosaicVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResultTV_C", "SetMosaicVisibility");

	Params::BP_ResultTV_C_SetMosaicVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}

}

