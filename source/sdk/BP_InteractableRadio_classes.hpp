#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableRadio

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InteractableRadio.BP_InteractableRadio_C
// 0x0078 (0x0310 - 0x0298)
class ABP_InteractableRadio_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        RadioAudio;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   RadioLight;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   radio;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        InteractDistance;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   InteractText;                                      // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAudioComponent*                        SoundSpawned;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              OffClickSound;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              OnClickSound;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SoundIndex;                                        // 0x02F8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USoundCue*>                      MusicSounds;                                       // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetRadioLightEnabled(bool Enabled);
	void SetRadioAudioEnabled(bool Enable, double Delay);
	void OnRep_SoundIndex();
	void InteractionStopped();
	void InteractionStarted();
	void Interact(class ABP_UPPlayerCharacter_C* Player);
	void GetInteractText(class FText* Text);
	void GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange);
	void GetInteractDuration(double* Duration);
	void GetInteractDistance(double* Distance);
	void ExecuteUbergraph_BP_InteractableRadio(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InteractableRadio_C">();
	}
	static class ABP_InteractableRadio_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteractableRadio_C>();
	}
};
static_assert(alignof(ABP_InteractableRadio_C) == 0x000008, "Wrong alignment on ABP_InteractableRadio_C");
static_assert(sizeof(ABP_InteractableRadio_C) == 0x000310, "Wrong size on ABP_InteractableRadio_C");
static_assert(offsetof(ABP_InteractableRadio_C, UberGraphFrame) == 0x000298, "Member 'ABP_InteractableRadio_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, RadioAudio) == 0x0002A0, "Member 'ABP_InteractableRadio_C::RadioAudio' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, RadioLight) == 0x0002A8, "Member 'ABP_InteractableRadio_C::RadioLight' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, radio) == 0x0002B0, "Member 'ABP_InteractableRadio_C::radio' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_InteractableRadio_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, InteractDistance) == 0x0002C0, "Member 'ABP_InteractableRadio_C::InteractDistance' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, InteractText) == 0x0002C8, "Member 'ABP_InteractableRadio_C::InteractText' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, SoundSpawned) == 0x0002E0, "Member 'ABP_InteractableRadio_C::SoundSpawned' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, OffClickSound) == 0x0002E8, "Member 'ABP_InteractableRadio_C::OffClickSound' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, OnClickSound) == 0x0002F0, "Member 'ABP_InteractableRadio_C::OnClickSound' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, SoundIndex) == 0x0002F8, "Member 'ABP_InteractableRadio_C::SoundIndex' has a wrong offset!");
static_assert(offsetof(ABP_InteractableRadio_C, MusicSounds) == 0x000300, "Member 'ABP_InteractableRadio_C::MusicSounds' has a wrong offset!");

}

