#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoundMod

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class SoundMod.SoundMod
// 0x0038 (0x01A0 - 0x0168)
class USoundMod final : public USoundBase
{
public:
	uint8                                         bLooping : 1;                                      // 0x0168(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_169[0x37];                                     // 0x0169(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SoundMod">();
	}
	static class USoundMod* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundMod>();
	}
};
static_assert(alignof(USoundMod) == 0x000008, "Wrong alignment on USoundMod");
static_assert(sizeof(USoundMod) == 0x0001A0, "Wrong size on USoundMod");

// Class SoundMod.SoundModWave
// 0x0010 (0x0490 - 0x0480)
class alignas(0x10) USoundModWave final : public USoundWaveProcedural
{
public:
	class USoundMod*                              SoundMod;                                          // 0x0480(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SoundModWave">();
	}
	static class USoundModWave* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundModWave>();
	}
};
static_assert(alignof(USoundModWave) == 0x000010, "Wrong alignment on USoundModWave");
static_assert(sizeof(USoundModWave) == 0x000490, "Wrong size on USoundModWave");
static_assert(offsetof(USoundModWave, SoundMod) == 0x000480, "Member 'USoundModWave::SoundMod' has a wrong offset!");

// Class SoundMod.SoundNodeModPlayer
// 0x0038 (0x0080 - 0x0048)
class USoundNodeModPlayer final : public USoundNodeAssetReferencer
{
public:
	TSoftObjectPtr<class USoundMod>               SoundModAssetPtr;                                  // 0x0048(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundMod*                              SoundMod;                                          // 0x0070(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bLooping : 1;                                      // 0x0078(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SoundNodeModPlayer">();
	}
	static class USoundNodeModPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundNodeModPlayer>();
	}
};
static_assert(alignof(USoundNodeModPlayer) == 0x000008, "Wrong alignment on USoundNodeModPlayer");
static_assert(sizeof(USoundNodeModPlayer) == 0x000080, "Wrong size on USoundNodeModPlayer");
static_assert(offsetof(USoundNodeModPlayer, SoundModAssetPtr) == 0x000048, "Member 'USoundNodeModPlayer::SoundModAssetPtr' has a wrong offset!");
static_assert(offsetof(USoundNodeModPlayer, SoundMod) == 0x000070, "Member 'USoundNodeModPlayer::SoundMod' has a wrong offset!");

}

