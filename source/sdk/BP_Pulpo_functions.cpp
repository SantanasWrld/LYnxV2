#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pulpo

#include "Basic.hpp"

#include "BP_Pulpo_classes.hpp"
#include "BP_Pulpo_parameters.hpp"


namespace SDK
{

// Function BP_Pulpo.BP_Pulpo_C.GetInteractNoise
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoiseOnInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NoiseRange                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetInteractNoise");

	Params::BP_Pulpo_C_GetInteractNoise Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoiseOnInteract != nullptr)
		*NoiseOnInteract = Parms.NoiseOnInteract;

	if (NoiseRange != nullptr)
		*NoiseRange = Parms.NoiseRange;
}


// Function BP_Pulpo.BP_Pulpo_C.GetInteractText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            Text                                                   (Parm, OutParm)

void ABP_Pulpo_C::GetInteractText(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetInteractText");

	Params::BP_Pulpo_C_GetInteractText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_Pulpo.BP_Pulpo_C.GetInteractDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GetInteractDistance(double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetInteractDistance");

	Params::BP_Pulpo_C_GetInteractDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_Pulpo.BP_Pulpo_C.GetInteractDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GetInteractDuration(double* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetInteractDuration");

	Params::BP_Pulpo_C_GetInteractDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_Pulpo.BP_Pulpo_C.GetDefaultScoringState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ScoringActorState*                    State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GetDefaultScoringState(E_ScoringActorState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetDefaultScoringState");

	Params::BP_Pulpo_C_GetDefaultScoringState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_Pulpo.BP_Pulpo_C.CheckObstacles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         StopLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::CheckObstacles(const struct FVector& TargetLocation, struct FVector* StopLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "CheckObstacles");

	Params::BP_Pulpo_C_CheckObstacles Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (StopLocation != nullptr)
		*StopLocation = std::move(Parms.StopLocation);
}


// Function BP_Pulpo.BP_Pulpo_C.IsInStringTrap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          Killable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_StringTrap_C**                StringTrap                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::IsInStringTrap(class ABP_KillableCharacter_C* Killable, class ABP_StringTrap_C** StringTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "IsInStringTrap");

	Params::BP_Pulpo_C_IsInStringTrap Parms{};

	Parms.Killable = Killable;

	UObject::ProcessEvent(Func, &Parms);

	if (StringTrap != nullptr)
		*StringTrap = Parms.StringTrap;
}


// Function BP_Pulpo.BP_Pulpo_C.GetGrabbedTentacleLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         TargetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GetGrabbedTentacleLocation(struct FVector* TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetGrabbedTentacleLocation");

	Params::BP_Pulpo_C_GetGrabbedTentacleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetLocation != nullptr)
		*TargetLocation = std::move(Parms.TargetLocation);
}


// Function BP_Pulpo.BP_Pulpo_C.GetPredictedTentacleLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         TargetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GetPredictedTentacleLocation(struct FVector* TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetPredictedTentacleLocation");

	Params::BP_Pulpo_C_GetPredictedTentacleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetLocation != nullptr)
		*TargetLocation = std::move(Parms.TargetLocation);
}


// Function BP_Pulpo.BP_Pulpo_C.GetTargetTentacleLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         TargetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GetTargetTentacleLocation(struct FVector* TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetTargetTentacleLocation");

	Params::BP_Pulpo_C_GetTargetTentacleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetLocation != nullptr)
		*TargetLocation = std::move(Parms.TargetLocation);
}


// Function BP_Pulpo.BP_Pulpo_C.GetCurrentTentacleLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         CurrentLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GetCurrentTentacleLocation(struct FVector* CurrentLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GetCurrentTentacleLocation");

	Params::BP_Pulpo_C_GetCurrentTentacleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentLocation != nullptr)
		*CurrentLocation = std::move(Parms.CurrentLocation);
}


// Function BP_Pulpo.BP_Pulpo_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_Pulpo_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_Pulpo_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Pulpo_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.OnRep_IsAttacking
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::OnRep_IsAttacking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "OnRep_IsAttacking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.StartAttack
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::StartAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "StartAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.StopAttack
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::StopAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "StopAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.OnRep_GrabbedTarget
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::OnRep_GrabbedTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "OnRep_GrabbedTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "ReceiveTick");

	Params::BP_Pulpo_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pulpo.BP_Pulpo_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::Interact(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "Interact");

	Params::BP_Pulpo_C_Interact Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pulpo.BP_Pulpo_C.KnockedOutEffect
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::KnockedOutEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "KnockedOutEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.GrabEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::GrabEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GrabEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.TentacleAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   OriginLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAttack                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::TentacleAnimation(const struct FVector& OriginLocation, const struct FVector& TargetLocation, bool IsAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "TentacleAnimation");

	Params::BP_Pulpo_C_TentacleAnimation Parms{};

	Parms.OriginLocation = std::move(OriginLocation);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.IsAttack = IsAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pulpo.BP_Pulpo_C.GrabTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          Killable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::GrabTarget(class ABP_KillableCharacter_C* Killable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "GrabTarget");

	Params::BP_Pulpo_C_GrabTarget Parms{};

	Parms.Killable = Killable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pulpo.BP_Pulpo_C.UpdatePullingAudio
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::UpdatePullingAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "UpdatePullingAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.OnRep_IsInRagdoll
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::OnRep_IsInRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "OnRep_IsInRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.KnockOutRecoverEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::KnockOutRecoverEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "KnockOutRecoverEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.RegularImpulse
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::RegularImpulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "RegularImpulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.StopTentacleAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::StopTentacleAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "StopTentacleAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.EnableRagdoll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::EnableRagdoll(const struct FVector& SourceLocation, double Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "EnableRagdoll");

	Params::BP_Pulpo_C_EnableRagdoll Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pulpo.BP_Pulpo_C.Freedom
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::Freedom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "Freedom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.AttackTimerEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_Pulpo_C::AttackTimerEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "AttackTimerEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pulpo.BP_Pulpo_C.ExecuteUbergraph_BP_Pulpo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pulpo_C::ExecuteUbergraph_BP_Pulpo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pulpo_C", "ExecuteUbergraph_BP_Pulpo");

	Params::BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

