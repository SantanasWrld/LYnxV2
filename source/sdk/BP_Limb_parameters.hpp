#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Limb

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Limb.BP_Limb_C.BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Limb_C_BndEvt__BP_Limb_DynamicMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.ExecuteUbergraph_BP_Limb
// 0x04E0 (0x04E0 - 0x0000)
struct BP_Limb_C_ExecuteUbergraph_BP_Limb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_Event_Player;                               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_Success;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LimbItem_C*                         K2Node_DynamicCast_AsBP_Limb_Item;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0068(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0180(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                K2Node_DynamicCast_AsBP_Killable_Character;        // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x035C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0370(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0390(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0478(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                K2Node_DynamicCast_AsBP_Killable_Character_1;      // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x048B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Limb_C_ExecuteUbergraph_BP_Limb) == 0x000008, "Wrong alignment on BP_Limb_C_ExecuteUbergraph_BP_Limb");
static_assert(sizeof(BP_Limb_C_ExecuteUbergraph_BP_Limb) == 0x0004E0, "Wrong size on BP_Limb_C_ExecuteUbergraph_BP_Limb");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, EntryPoint) == 0x000000, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000005, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_Event_Player) == 0x000010, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_AddItem_Success) == 0x000018, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_AddItem_Success' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_DynamicCast_AsBP_Limb_Item) == 0x000020, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_DynamicCast_AsBP_Limb_Item' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_GetComponentBounds_Origin) == 0x000030, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_GetComponentBounds_BoxExtent) == 0x000048, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_GetComponentBounds_SphereRadius) == 0x000060, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000068, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_HitComponent) == 0x000150, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000158, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000160, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000168, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_Hit) == 0x000180, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_bBlockingHit) == 0x000268, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_bInitialOverlap) == 0x000269, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_Time) == 0x00026C, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_Distance) == 0x000270, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_Location) == 0x000278, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_ImpactPoint) == 0x000290, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_Normal) == 0x0002A8, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_ImpactNormal) == 0x0002C0, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_PhysMat) == 0x0002D8, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_HitActor) == 0x0002E0, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_HitComponent) == 0x0002E8, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_HitBoneName) == 0x0002F0, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_BoneName) == 0x0002F8, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_HitItem) == 0x000300, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_ElementIndex) == 0x000304, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_FaceIndex) == 0x000308, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_TraceStart) == 0x000310, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BreakHitResult_TraceEnd) == 0x000328, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_GetOwner_ReturnValue) == 0x000340, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_VSize_ReturnValue) == 0x000348, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_DynamicCast_AsBP_Killable_Character) == 0x000350, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_DynamicCast_AsBP_Killable_Character' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_DynamicCast_bSuccess_1) == 0x000358, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_IsValid_ReturnValue) == 0x000359, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_HasAuthority_ReturnValue_1) == 0x00035A, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_HasAuthority_ReturnValue_2) == 0x00035B, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_CreateDelegate_OutputDelegate) == 0x00035C, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000370, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_OtherActor) == 0x000378, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_OtherComp) == 0x000380, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000388, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_bFromSweep) == 0x00038C, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_ComponentBoundEvent_SweepResult) == 0x000390, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000478, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_DynamicCast_AsBP_Killable_Character_1) == 0x000480, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_DynamicCast_AsBP_Killable_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, K2Node_DynamicCast_bSuccess_2) == 0x000488, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000489, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_Not_PreBool_ReturnValue) == 0x00048A, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_BooleanAND_ReturnValue) == 0x00048B, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000490, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_VSize_ReturnValue_1) == 0x0004A8, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004B0, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0004C8, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_GetAttachParentActor_ReturnValue) == 0x0004D0, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_IsValid_ReturnValue_1) == 0x0004D8, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_ExecuteUbergraph_BP_Limb, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0004DC, "Member 'BP_Limb_C_ExecuteUbergraph_BP_Limb::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.GetInteractDistance
// 0x0018 (0x0018 - 0x0000)
struct BP_Limb_C_GetInteractDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Limb_C_GetInteractDistance) == 0x000008, "Wrong alignment on BP_Limb_C_GetInteractDistance");
static_assert(sizeof(BP_Limb_C_GetInteractDistance) == 0x000018, "Wrong size on BP_Limb_C_GetInteractDistance");
static_assert(offsetof(BP_Limb_C_GetInteractDistance, Distance) == 0x000000, "Member 'BP_Limb_C_GetInteractDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_GetInteractDistance, CallFunc_GetAttachParentActor_ReturnValue) == 0x000008, "Member 'BP_Limb_C_GetInteractDistance::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_GetInteractDistance, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Limb_C_GetInteractDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.GetInteractDuration
// 0x0008 (0x0008 - 0x0000)
struct BP_Limb_C_GetInteractDuration final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Limb_C_GetInteractDuration) == 0x000008, "Wrong alignment on BP_Limb_C_GetInteractDuration");
static_assert(sizeof(BP_Limb_C_GetInteractDuration) == 0x000008, "Wrong size on BP_Limb_C_GetInteractDuration");
static_assert(offsetof(BP_Limb_C_GetInteractDuration, Duration) == 0x000000, "Member 'BP_Limb_C_GetInteractDuration::Duration' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.GetInteractNoise
// 0x0010 (0x0010 - 0x0000)
struct BP_Limb_C_GetInteractNoise final
{
public:
	bool                                          NoiseOnInteract;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NoiseRange;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Limb_C_GetInteractNoise) == 0x000008, "Wrong alignment on BP_Limb_C_GetInteractNoise");
static_assert(sizeof(BP_Limb_C_GetInteractNoise) == 0x000010, "Wrong size on BP_Limb_C_GetInteractNoise");
static_assert(offsetof(BP_Limb_C_GetInteractNoise, NoiseOnInteract) == 0x000000, "Member 'BP_Limb_C_GetInteractNoise::NoiseOnInteract' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_GetInteractNoise, NoiseRange) == 0x000008, "Member 'BP_Limb_C_GetInteractNoise::NoiseRange' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.GetInteractText
// 0x0018 (0x0018 - 0x0000)
struct BP_Limb_C_GetInteractText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_Limb_C_GetInteractText) == 0x000008, "Wrong alignment on BP_Limb_C_GetInteractText");
static_assert(sizeof(BP_Limb_C_GetInteractText) == 0x000018, "Wrong size on BP_Limb_C_GetInteractText");
static_assert(offsetof(BP_Limb_C_GetInteractText, Text) == 0x000000, "Member 'BP_Limb_C_GetInteractText::Text' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.Interact
// 0x0008 (0x0008 - 0x0000)
struct BP_Limb_C_Interact final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Limb_C_Interact) == 0x000008, "Wrong alignment on BP_Limb_C_Interact");
static_assert(sizeof(BP_Limb_C_Interact) == 0x000008, "Wrong size on BP_Limb_C_Interact");
static_assert(offsetof(BP_Limb_C_Interact, Player) == 0x000000, "Member 'BP_Limb_C_Interact::Player' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Limb_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Limb_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Limb_C_ReceiveTick");
static_assert(sizeof(BP_Limb_C_ReceiveTick) == 0x000004, "Wrong size on BP_Limb_C_ReceiveTick");
static_assert(offsetof(BP_Limb_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Limb_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Limb.BP_Limb_C.TeleportMeshToLocation
// 0x0160 (0x0160 - 0x0000)
struct BP_Limb_C_TeleportMeshToLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Limb_C_TeleportMeshToLocation) == 0x000008, "Wrong alignment on BP_Limb_C_TeleportMeshToLocation");
static_assert(sizeof(BP_Limb_C_TeleportMeshToLocation) == 0x000160, "Wrong size on BP_Limb_C_TeleportMeshToLocation");
static_assert(offsetof(BP_Limb_C_TeleportMeshToLocation, Location) == 0x000000, "Member 'BP_Limb_C_TeleportMeshToLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_TeleportMeshToLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_Limb_C_TeleportMeshToLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_TeleportMeshToLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000030, "Member 'BP_Limb_C_TeleportMeshToLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_TeleportMeshToLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BP_Limb_C_TeleportMeshToLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_TeleportMeshToLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_Limb_C_TeleportMeshToLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Limb_C_TeleportMeshToLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000078, "Member 'BP_Limb_C_TeleportMeshToLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

}

