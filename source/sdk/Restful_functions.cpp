#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Restful

#include "Basic.hpp"

#include "Restful_classes.hpp"
#include "Restful_parameters.hpp"


namespace SDK
{

// Function Restful.RestfulFunctionLibrary.SendRestfulRequest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    verb                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Content                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&headers                                                (Parm, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResponseCode                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          Data                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>*     responseHeaders                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void URestfulFunctionLibrary::SendRestfulRequest(class UObject* WorldContextObject, bool* Success, const class FString& URL, const class FString& verb, const class FString& Content, const TMap<class FString, class FString>& headers, float Timeout, int32* ResponseCode, class FString* Data, TMap<class FString, class FString>* responseHeaders, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RestfulFunctionLibrary", "SendRestfulRequest");

	Params::RestfulFunctionLibrary_SendRestfulRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.URL = std::move(URL);
	Parms.verb = std::move(verb);
	Parms.Content = std::move(Content);
	Parms.headers = std::move(headers);
	Parms.Timeout = Timeout;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Success != nullptr)
		*Success = Parms.Success;

	if (ResponseCode != nullptr)
		*ResponseCode = Parms.ResponseCode;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	if (responseHeaders != nullptr)
		*responseHeaders = std::move(Parms.responseHeaders);
}


// Function Restful.RestfulFunctionLibrary.SendRestfulWithFileRequest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    verb                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&headers                                                (Parm, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  ResponseCode                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          Data                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>*     responseHeaders                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void URestfulFunctionLibrary::SendRestfulWithFileRequest(class UObject* WorldContextObject, bool* Success, const class FString& URL, const class FString& verb, const class FString& Filename, const TMap<class FString, class FString>& headers, float Timeout, int32* ResponseCode, class FString* Data, TMap<class FString, class FString>* responseHeaders, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RestfulFunctionLibrary", "SendRestfulWithFileRequest");

	Params::RestfulFunctionLibrary_SendRestfulWithFileRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.URL = std::move(URL);
	Parms.verb = std::move(verb);
	Parms.Filename = std::move(Filename);
	Parms.headers = std::move(headers);
	Parms.Timeout = Timeout;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Success != nullptr)
		*Success = Parms.Success;

	if (ResponseCode != nullptr)
		*ResponseCode = Parms.ResponseCode;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	if (responseHeaders != nullptr)
		*responseHeaders = std::move(Parms.responseHeaders);
}

}

