#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KillableCharacter

#include "Basic.hpp"

#include "BP_KillableCharacter_classes.hpp"
#include "BP_KillableCharacter_parameters.hpp"


namespace SDK
{

// Function BP_KillableCharacter.BP_KillableCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "ReceiveTick");

	Params::BP_KillableCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_KillableCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetEyesLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         EyesLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetEyesLocation(struct FVector* EyesLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetEyesLocation");

	Params::BP_KillableCharacter_C_GetEyesLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EyesLocation != nullptr)
		*EyesLocation = std::move(Parms.EyesLocation);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetDefaultScoringState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ScoringActorState*                    State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetDefaultScoringState(E_ScoringActorState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetDefaultScoringState");

	Params::BP_KillableCharacter_C_GetDefaultScoringState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.FreezeMovement
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::FreezeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "FreezeMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.UnfreezeMovement
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::UnfreezeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "UnfreezeMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.EnableRagdoll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::EnableRagdoll(const struct FVector& SourceLocation, double Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "EnableRagdoll");

	Params::BP_KillableCharacter_C_EnableRagdoll Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.DisableRagdoll
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::DisableRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "DisableRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.KnockOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::KnockOut(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "KnockOut");

	Params::BP_KillableCharacter_C_KnockOut Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetInteractNoise
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoiseOnInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NoiseRange                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetInteractNoise");

	Params::BP_KillableCharacter_C_GetInteractNoise Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoiseOnInteract != nullptr)
		*NoiseOnInteract = Parms.NoiseOnInteract;

	if (NoiseRange != nullptr)
		*NoiseRange = Parms.NoiseRange;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetInteractText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            Text                                                   (Parm, OutParm)

void ABP_KillableCharacter_C::GetInteractText(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetInteractText");

	Params::BP_KillableCharacter_C_GetInteractText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetInteractDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetInteractDistance(double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetInteractDistance");

	Params::BP_KillableCharacter_C_GetInteractDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetInteractDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetInteractDuration(double* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetInteractDuration");

	Params::BP_KillableCharacter_C_GetInteractDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.IsDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Dead_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::IsDead(bool* Dead_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "IsDead");

	Params::BP_KillableCharacter_C_IsDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead_0 != nullptr)
		*Dead_0 = Parms.Dead_0;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.ResetRagdollVelocities
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::ResetRagdollVelocities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "ResetRagdollVelocities");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.ShouldSyncRagdoll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_FrozenRagdoll&          Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::ShouldSyncRagdoll(const struct FS_FrozenRagdoll& Ragdoll, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "ShouldSyncRagdoll");

	Params::BP_KillableCharacter_C_ShouldSyncRagdoll Parms{};

	Parms.Ragdoll = std::move(Ragdoll);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetLightDismembermentBone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            BoneName                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetLightDismembermentBone(bool* Found, class FName* BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetLightDismembermentBone");

	Params::BP_KillableCharacter_C_GetLightDismembermentBone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (BoneName != nullptr)
		*BoneName = Parms.BoneName;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetEyesHeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 EyesHeight                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetEyesHeight(double* EyesHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetEyesHeight");

	Params::BP_KillableCharacter_C_GetEyesHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EyesHeight != nullptr)
		*EyesHeight = Parms.EyesHeight;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.CheckIfChased
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsChased_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::CheckIfChased(bool* IsChased_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "CheckIfChased");

	Params::BP_KillableCharacter_C_CheckIfChased Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsChased_0 != nullptr)
		*IsChased_0 = Parms.IsChased_0;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.PlaySkeletalAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimationAsset*                  Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bLooping                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::PlaySkeletalAnim(class UAnimationAsset* Anim, bool bLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "PlaySkeletalAnim");

	Params::BP_KillableCharacter_C_PlaySkeletalAnim Parms{};

	Parms.Anim = Anim;
	Parms.bLooping = bLooping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.SetOverlayMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::SetOverlayMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "SetOverlayMaterial");

	Params::BP_KillableCharacter_C_SetOverlayMaterial Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.SpawnBloodParticlesOnMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkinnedMeshComponent*            Mesh_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::SpawnBloodParticlesOnMesh(class FName BoneName, double Size, class USkinnedMeshComponent* Mesh_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "SpawnBloodParticlesOnMesh");

	Params::BP_KillableCharacter_C_SpawnBloodParticlesOnMesh Parms{};

	Parms.BoneName = BoneName;
	Parms.Size = Size;
	Parms.Mesh_0 = Mesh_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.SetCollisionsInternal
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CapsulePreset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MeshPreset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::SetCollisionsInternal(class FName CapsulePreset, class FName MeshPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "SetCollisionsInternal");

	Params::BP_KillableCharacter_C_SetCollisionsInternal Parms{};

	Parms.CapsulePreset = CapsulePreset;
	Parms.MeshPreset = MeshPreset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetRagdollBoneIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   BodyIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  BoneIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetRagdollBoneIndex(int32 BodyIndex, int32* BoneIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetRagdollBoneIndex");

	Params::BP_KillableCharacter_C_GetRagdollBoneIndex Parms{};

	Parms.BodyIndex = BodyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (BoneIndex != nullptr)
		*BoneIndex = Parms.BoneIndex;
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetRecoverLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         RecoverLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetRecoverLocation(struct FVector* RecoverLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetRecoverLocation");

	Params::BP_KillableCharacter_C_GetRecoverLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RecoverLocation != nullptr)
		*RecoverLocation = std::move(Parms.RecoverLocation);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.GetRagdollLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         RagdollLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::GetRagdollLocation(struct FVector* RagdollLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "GetRagdollLocation");

	Params::BP_KillableCharacter_C_GetRagdollLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RagdollLocation != nullptr)
		*RagdollLocation = std::move(Parms.RagdollLocation);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.SetRagdoll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_FrozenRagdoll&          Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_KillableCharacter_C::SetRagdoll(const struct FS_FrozenRagdoll& Ragdoll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "SetRagdoll");

	Params::BP_KillableCharacter_C_SetRagdoll Parms{};

	Parms.Ragdoll = std::move(Ragdoll);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.SaveAsRagdoll
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_FrozenRagdoll*                FrozenRagdoll                                          (Parm, OutParm, HasGetValueTypeHash)

void ABP_KillableCharacter_C::SaveAsRagdoll(struct FS_FrozenRagdoll* FrozenRagdoll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "SaveAsRagdoll");

	Params::BP_KillableCharacter_C_SaveAsRagdoll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FrozenRagdoll != nullptr)
		*FrozenRagdoll = std::move(Parms.FrozenRagdoll);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.PrepareRagdoll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::PrepareRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "PrepareRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.InteractionStarted
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::InteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "InteractionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.InteractionStopped
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::InteractionStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "InteractionStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.SetScoringState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ScoringActorState                     State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::SetScoringState(E_ScoringActorState State, double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "SetScoringState");

	Params::BP_KillableCharacter_C_SetScoringState Parms{};

	Parms.State = State;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.ScoringTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::ScoringTick(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "ScoringTick");

	Params::BP_KillableCharacter_C_ScoringTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.EndScoringStateOverwrite
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::EndScoringStateOverwrite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "EndScoringStateOverwrite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.SetCollisionProfiles
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CapsulePreset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MeshPreset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::SetCollisionProfiles(class FName CapsulePreset, class FName MeshPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "SetCollisionProfiles");

	Params::BP_KillableCharacter_C_SetCollisionProfiles Parms{};

	Parms.CapsulePreset = CapsulePreset;
	Parms.MeshPreset = MeshPreset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.StartDismemberment
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::StartDismemberment(E_Dismemberment Dismemberment, const struct FVector& SourceLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "StartDismemberment");

	Params::BP_KillableCharacter_C_StartDismemberment Parms{};

	Parms.Dismemberment = Dismemberment;
	Parms.SourceLocation = std::move(SourceLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.Killed (All)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DeathType                             DeathType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::Killed__All_(bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "Killed (All)");

	Params::BP_KillableCharacter_C_Killed__All_ Parms{};

	Parms.Ragdoll = Ragdoll;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;
	Parms.Dismemberment = Dismemberment;
	Parms.DeathType = DeathType;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.RagdollReplicated
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_FrozenRagdoll&          Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_KillableCharacter_C::RagdollReplicated(const struct FS_FrozenRagdoll& Ragdoll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "RagdollReplicated");

	Params::BP_KillableCharacter_C_RagdollReplicated Parms{};

	Parms.Ragdoll = std::move(Ragdoll);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.ReplicateRagdoll
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::ReplicateRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "ReplicateRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.Kill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DeathType                             DeathType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::Kill(bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "Kill");

	Params::BP_KillableCharacter_C_Kill Parms{};

	Parms.Ragdoll = Ragdoll;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;
	Parms.Dismemberment = Dismemberment;
	Parms.DeathType = DeathType;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.BrokenBone
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BloodSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::BrokenBone(class FName BoneName, double BloodSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "BrokenBone");

	Params::BP_KillableCharacter_C_BrokenBone Parms{};

	Parms.BoneName = BoneName;
	Parms.BloodSize = BloodSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.BreakBone
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::BreakBone(class FName BoneName, const struct FVector& SourceLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "BreakBone");

	Params::BP_KillableCharacter_C_BreakBone Parms{};

	Parms.BoneName = BoneName;
	Parms.SourceLocation = std::move(SourceLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.Electrocute
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::Electrocute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "Electrocute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.Burn (Server)
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::Burn__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "Burn (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.StartBurningFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::StartBurningFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "StartBurningFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.EndBurningFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::EndBurningFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "EndBurningFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_KillableCharacter_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "ReceiveHit");

	Params::BP_KillableCharacter_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_KillableCharacter_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "OnLanded");

	Params::BP_KillableCharacter_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.DeadlyLandingSFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::DeadlyLandingSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "DeadlyLandingSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.RagdollCollisionEffects
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::RagdollCollisionEffects(double Impulse, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "RagdollCollisionEffects");

	Params::BP_KillableCharacter_C_RagdollCollisionEffects Parms{};

	Parms.Impulse = Impulse;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.Harm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DeathType                             DeathType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::Harm(int32 Damage, bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "Harm");

	Params::BP_KillableCharacter_C_Harm Parms{};

	Parms.Damage = Damage;
	Parms.Ragdoll = Ragdoll;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;
	Parms.Dismemberment = Dismemberment;
	Parms.DeathType = DeathType;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.Harmed (All)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Dismemberment                         Dismemberment                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DeathType                             DeathType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::Harmed__All_(int32 Damage, bool Ragdoll, const struct FVector& SourceLocation, double Force, E_Dismemberment Dismemberment, E_DeathType DeathType, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "Harmed (All)");

	Params::BP_KillableCharacter_C_Harmed__All_ Parms{};

	Parms.Damage = Damage;
	Parms.Ragdoll = Ragdoll;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.Force = Force;
	Parms.Dismemberment = Dismemberment;
	Parms.DeathType = DeathType;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.OnRep_IsInRagdoll
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::OnRep_IsInRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "OnRep_IsInRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.Infected
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::Infected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "Infected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.MoveActorToRagdoll
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::MoveActorToRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "MoveActorToRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.LightDismemberment
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::LightDismemberment(const struct FVector& SourceLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "LightDismemberment");

	Params::BP_KillableCharacter_C_LightDismemberment Parms{};

	Parms.SourceLocation = std::move(SourceLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.BndEvt__BP_KillableCharacter_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_KillableCharacter_C::BndEvt__BP_KillableCharacter_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "BndEvt__BP_KillableCharacter_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_KillableCharacter_C_BndEvt__BP_KillableCharacter_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.BndEvt__BP_KillableCharacter_Mesh_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_KillableCharacter_C::BndEvt__BP_KillableCharacter_Mesh_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "BndEvt__BP_KillableCharacter_Mesh_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_KillableCharacter_C_BndEvt__BP_KillableCharacter_Mesh_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.RagdollCollisionEffects (Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::RagdollCollisionEffects__Multicast_(double Impulse, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "RagdollCollisionEffects (Multicast)");

	Params::BP_KillableCharacter_C_RagdollCollisionEffects__Multicast_ Parms{};

	Parms.Impulse = Impulse;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.DisableRagdollDelayed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::DisableRagdollDelayed(float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "DisableRagdollDelayed");

	Params::BP_KillableCharacter_C_DisableRagdollDelayed Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.FrozenDeath
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::FrozenDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "FrozenDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.UpdateChased
// (BlueprintCallable, BlueprintEvent)

void ABP_KillableCharacter_C::UpdateChased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "UpdateChased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::Interact(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "Interact");

	Params::BP_KillableCharacter_C_Interact Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.StartedBeingChased
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Parent_Enemy_C*               Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::StartedBeingChased(class ABP_Parent_Enemy_C* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "StartedBeingChased");

	Params::BP_KillableCharacter_C_StartedBeingChased Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.EnemyTargetChanegd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Parent_Enemy_C*               Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::EnemyTargetChanegd(class ABP_Parent_Enemy_C* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "EnemyTargetChanegd");

	Params::BP_KillableCharacter_C_EnemyTargetChanegd Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KillableCharacter.BP_KillableCharacter_C.ExecuteUbergraph_BP_KillableCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KillableCharacter_C::ExecuteUbergraph_BP_KillableCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KillableCharacter_C", "ExecuteUbergraph_BP_KillableCharacter");

	Params::BP_KillableCharacter_C_ExecuteUbergraph_BP_KillableCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

