#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Stalker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Stalker.ABP_Stalker_C
// 0x0820 (0x0B70 - 0x0350)
class UABP_Stalker_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_BlendSpaceGraph;            // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0390(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x03B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x03E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0428(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0448(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_13;           // 0x0490(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x04B0(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_12;           // 0x04F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0518(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_11;           // 0x0560(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0580(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_10;           // 0x05C8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x05E8(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_9;            // 0x0630(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0650(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_8;            // 0x0698(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x06B8(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_7;            // 0x0700(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0720(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_6;            // 0x0768(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0788(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_5;            // 0x07D0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x07F0(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_4;            // 0x0838(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0858(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_3;            // 0x08A0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x08C0(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_2;            // 0x0908(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0928(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult_1;            // 0x0970(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0990(0x0048)()
	struct FAnimNode_BlendSpaceSampleResult       AnimGraphNode_BlendSpaceSampleResult;              // 0x09D8(0x0020)()
	struct FAnimNode_BlendSpaceGraph              AnimGraphNode_BlendSpaceGraph;                     // 0x09F8(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0A60(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0A80(0x00C8)()
	class ABP_Stalker_C*                          Stalker;                                           // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x0B58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Direction;                                         // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_Stalker(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Stalker_C">();
	}
	static class UABP_Stalker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Stalker_C>();
	}
};
static_assert(alignof(UABP_Stalker_C) == 0x000010, "Wrong alignment on UABP_Stalker_C");
static_assert(sizeof(UABP_Stalker_C) == 0x000B70, "Wrong size on UABP_Stalker_C");
static_assert(offsetof(UABP_Stalker_C, UberGraphFrame) == 0x000350, "Member 'UABP_Stalker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UABP_Stalker_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimBlueprintExtension_BlendSpaceGraph) == 0x000360, "Member 'UABP_Stalker_C::AnimBlueprintExtension_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UABP_Stalker_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_Root) == 0x000370, "Member 'UABP_Stalker_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_TransitionResult_1) == 0x000390, "Member 'UABP_Stalker_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_TransitionResult) == 0x0003B8, "Member 'UABP_Stalker_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_14) == 0x0003E0, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_StateResult_1) == 0x000428, "Member 'UABP_Stalker_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_13) == 0x000448, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_13) == 0x000490, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_12) == 0x0004B0, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_12) == 0x0004F8, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_11) == 0x000518, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_11) == 0x000560, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_10) == 0x000580, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_10) == 0x0005C8, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_9) == 0x0005E8, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_9) == 0x000630, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_8) == 0x000650, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_8) == 0x000698, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_7) == 0x0006B8, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_7) == 0x000700, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_6) == 0x000720, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_6) == 0x000768, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_5) == 0x000788, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_5) == 0x0007D0, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_4) == 0x0007F0, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_4) == 0x000838, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_3) == 0x000858, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_3) == 0x0008A0, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_2) == 0x0008C0, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_2) == 0x000908, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer_1) == 0x000928, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult_1) == 0x000970, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_SequencePlayer) == 0x000990, "Member 'UABP_Stalker_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceSampleResult) == 0x0009D8, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceSampleResult' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_BlendSpaceGraph) == 0x0009F8, "Member 'UABP_Stalker_C::AnimGraphNode_BlendSpaceGraph' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_StateResult) == 0x000A60, "Member 'UABP_Stalker_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, AnimGraphNode_StateMachine) == 0x000A80, "Member 'UABP_Stalker_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, Stalker) == 0x000B48, "Member 'UABP_Stalker_C::Stalker' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, Speed) == 0x000B50, "Member 'UABP_Stalker_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, IsAttacking) == 0x000B58, "Member 'UABP_Stalker_C::IsAttacking' has a wrong offset!");
static_assert(offsetof(UABP_Stalker_C, Direction) == 0x000B60, "Member 'UABP_Stalker_C::Direction' has a wrong offset!");

}

