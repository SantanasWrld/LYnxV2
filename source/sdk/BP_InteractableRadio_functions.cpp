#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableRadio

#include "Basic.hpp"

#include "BP_InteractableRadio_classes.hpp"
#include "BP_InteractableRadio_parameters.hpp"


namespace SDK
{

// Function BP_InteractableRadio.BP_InteractableRadio_C.SetRadioLightEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableRadio_C::SetRadioLightEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "SetRadioLightEnabled");

	Params::BP_InteractableRadio_C_SetRadioLightEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.SetRadioAudioEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableRadio_C::SetRadioAudioEnabled(bool Enable, double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "SetRadioAudioEnabled");

	Params::BP_InteractableRadio_C_SetRadioAudioEnabled Parms{};

	Parms.Enable = Enable;
	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.OnRep_SoundIndex
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractableRadio_C::OnRep_SoundIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "OnRep_SoundIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.InteractionStopped
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractableRadio_C::InteractionStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "InteractionStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.InteractionStarted
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractableRadio_C::InteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "InteractionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableRadio_C::Interact(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "Interact");

	Params::BP_InteractableRadio_C_Interact Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.GetInteractText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            Text                                                   (Parm, OutParm)

void ABP_InteractableRadio_C::GetInteractText(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "GetInteractText");

	Params::BP_InteractableRadio_C_GetInteractText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.GetInteractNoise
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoiseOnInteract                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NoiseRange                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableRadio_C::GetInteractNoise(bool* NoiseOnInteract, double* NoiseRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "GetInteractNoise");

	Params::BP_InteractableRadio_C_GetInteractNoise Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoiseOnInteract != nullptr)
		*NoiseOnInteract = Parms.NoiseOnInteract;

	if (NoiseRange != nullptr)
		*NoiseRange = Parms.NoiseRange;
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.GetInteractDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableRadio_C::GetInteractDuration(double* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "GetInteractDuration");

	Params::BP_InteractableRadio_C_GetInteractDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.GetInteractDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableRadio_C::GetInteractDistance(double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "GetInteractDistance");

	Params::BP_InteractableRadio_C_GetInteractDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_InteractableRadio.BP_InteractableRadio_C.ExecuteUbergraph_BP_InteractableRadio
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableRadio_C::ExecuteUbergraph_BP_InteractableRadio(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableRadio_C", "ExecuteUbergraph_BP_InteractableRadio");

	Params::BP_InteractableRadio_C_ExecuteUbergraph_BP_InteractableRadio Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

