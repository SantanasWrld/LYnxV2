#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RHIManager

#include "Basic.hpp"

#include "RHIManager_structs.hpp"


namespace SDK::Params
{

// Function RHIManager.RHIManagerBPLibrary.GetCurrentGraphicsRHI
// 0x0001 (0x0001 - 0x0000)
struct RHIManagerBPLibrary_GetCurrentGraphicsRHI final
{
public:
	EGraphicsRHI                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RHIManagerBPLibrary_GetCurrentGraphicsRHI) == 0x000001, "Wrong alignment on RHIManagerBPLibrary_GetCurrentGraphicsRHI");
static_assert(sizeof(RHIManagerBPLibrary_GetCurrentGraphicsRHI) == 0x000001, "Wrong size on RHIManagerBPLibrary_GetCurrentGraphicsRHI");
static_assert(offsetof(RHIManagerBPLibrary_GetCurrentGraphicsRHI, ReturnValue) == 0x000000, "Member 'RHIManagerBPLibrary_GetCurrentGraphicsRHI::ReturnValue' has a wrong offset!");

// Function RHIManager.RHIManagerBPLibrary.RHIManagerSampleFunction
// 0x0008 (0x0008 - 0x0000)
struct RHIManagerBPLibrary_RHIManagerSampleFunction final
{
public:
	float                                         Param;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RHIManagerBPLibrary_RHIManagerSampleFunction) == 0x000004, "Wrong alignment on RHIManagerBPLibrary_RHIManagerSampleFunction");
static_assert(sizeof(RHIManagerBPLibrary_RHIManagerSampleFunction) == 0x000008, "Wrong size on RHIManagerBPLibrary_RHIManagerSampleFunction");
static_assert(offsetof(RHIManagerBPLibrary_RHIManagerSampleFunction, Param) == 0x000000, "Member 'RHIManagerBPLibrary_RHIManagerSampleFunction::Param' has a wrong offset!");
static_assert(offsetof(RHIManagerBPLibrary_RHIManagerSampleFunction, ReturnValue) == 0x000004, "Member 'RHIManagerBPLibrary_RHIManagerSampleFunction::ReturnValue' has a wrong offset!");

// Function RHIManager.RHIManagerBPLibrary.SetGraphicsRHI
// 0x0001 (0x0001 - 0x0000)
struct RHIManagerBPLibrary_SetGraphicsRHI final
{
public:
	EGraphicsRHI                                  GraphicsRHI;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RHIManagerBPLibrary_SetGraphicsRHI) == 0x000001, "Wrong alignment on RHIManagerBPLibrary_SetGraphicsRHI");
static_assert(sizeof(RHIManagerBPLibrary_SetGraphicsRHI) == 0x000001, "Wrong size on RHIManagerBPLibrary_SetGraphicsRHI");
static_assert(offsetof(RHIManagerBPLibrary_SetGraphicsRHI, GraphicsRHI) == 0x000000, "Member 'RHIManagerBPLibrary_SetGraphicsRHI::GraphicsRHI' has a wrong offset!");

}

