#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPGameViewportClient

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_UPGameViewportClient.BP_UPGameViewportClient_C.ExecuteUbergraph_BP_UPGameViewportClient
// 0x0088 (0x0088 - 0x0000)
struct BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_MaxHeight;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewParam;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Width;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Height;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient) == 0x000008, "Wrong alignment on BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient");
static_assert(sizeof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient) == 0x000088, "Wrong size on BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, EntryPoint) == 0x000000, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, K2Node_CustomEvent_MaxHeight) == 0x000008, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::K2Node_CustomEvent_MaxHeight' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, K2Node_CustomEvent_NewParam) == 0x000010, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, K2Node_Event_Width) == 0x000014, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::K2Node_Event_Width' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, K2Node_Event_Height) == 0x000018, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::K2Node_Event_Height' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000038, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000058, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_UPGameViewportClient_C_ExecuteUbergraph_BP_UPGameViewportClient::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_UPGameViewportClient.BP_UPGameViewportClient_C.SetScreenPercentage
// 0x0010 (0x0010 - 0x0000)
struct BP_UPGameViewportClient_C_SetScreenPercentage final
{
public:
	double                                        MaxHeight_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewParam;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameViewportClient_C_SetScreenPercentage) == 0x000008, "Wrong alignment on BP_UPGameViewportClient_C_SetScreenPercentage");
static_assert(sizeof(BP_UPGameViewportClient_C_SetScreenPercentage) == 0x000010, "Wrong size on BP_UPGameViewportClient_C_SetScreenPercentage");
static_assert(offsetof(BP_UPGameViewportClient_C_SetScreenPercentage, MaxHeight_0) == 0x000000, "Member 'BP_UPGameViewportClient_C_SetScreenPercentage::MaxHeight_0' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_SetScreenPercentage, NewParam) == 0x000008, "Member 'BP_UPGameViewportClient_C_SetScreenPercentage::NewParam' has a wrong offset!");

// Function BP_UPGameViewportClient.BP_UPGameViewportClient_C.ViewportSizeChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_UPGameViewportClient_C_ViewportSizeChanged final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPGameViewportClient_C_ViewportSizeChanged) == 0x000004, "Wrong alignment on BP_UPGameViewportClient_C_ViewportSizeChanged");
static_assert(sizeof(BP_UPGameViewportClient_C_ViewportSizeChanged) == 0x000008, "Wrong size on BP_UPGameViewportClient_C_ViewportSizeChanged");
static_assert(offsetof(BP_UPGameViewportClient_C_ViewportSizeChanged, Width) == 0x000000, "Member 'BP_UPGameViewportClient_C_ViewportSizeChanged::Width' has a wrong offset!");
static_assert(offsetof(BP_UPGameViewportClient_C_ViewportSizeChanged, Height) == 0x000004, "Member 'BP_UPGameViewportClient_C_ViewportSizeChanged::Height' has a wrong offset!");

}

