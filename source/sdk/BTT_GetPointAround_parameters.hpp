#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_GetPointAround

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_GetPointAround.BTT_GetPointAround_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_GetPointAround_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetPointAround_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_GetPointAround_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_GetPointAround_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_GetPointAround_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_GetPointAround_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_GetPointAround_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_GetPointAround_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_GetPointAround.BTT_GetPointAround_C.ExecuteUbergraph_BTT_GetPointAround
// 0x0070 (0x0070 - 0x0000)
struct BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARecastNavMesh*                         CallFunc_GetControllerNavData_NavData;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidAILocation_ReturnValue;            // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround) == 0x000008, "Wrong alignment on BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround");
static_assert(sizeof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround) == 0x000070, "Wrong size on BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, EntryPoint) == 0x000000, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_GetControllerNavData_NavData) == 0x000038, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_GetControllerNavData_NavData' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation) == 0x000048, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue) == 0x000060, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_IsValidAILocation_ReturnValue) == 0x000062, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_IsValidAILocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, Temp_int_Variable) == 0x000064, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BTT_GetPointAround_C_ExecuteUbergraph_BTT_GetPointAround::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

