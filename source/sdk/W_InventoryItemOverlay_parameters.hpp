#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InventoryItemOverlay

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_InventoryItemOverlay.W_InventoryItemOverlay_C.ExecuteUbergraph_W_InventoryItemOverlay
// 0x0070 (0x0070 - 0x0000)
struct W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_InventoryItem_C* Item, bool IsEquipped)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InventoryItem_C*                    K2Node_CustomEvent_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_InventoryItem_C*                    K2Node_CustomEvent_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEquipped;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x002C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay) == 0x000008, "Wrong alignment on W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay");
static_assert(sizeof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay) == 0x000070, "Wrong size on W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, EntryPoint) == 0x000000, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, K2Node_CustomEvent_Item_1) == 0x000018, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::K2Node_CustomEvent_Item_1' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, K2Node_CustomEvent_Item) == 0x000020, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, K2Node_CustomEvent_IsEquipped) == 0x000028, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::K2Node_CustomEvent_IsEquipped' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, K2Node_Event_MyGeometry) == 0x00002C, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, K2Node_Event_InDeltaTime) == 0x000064, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'W_InventoryItemOverlay_C_ExecuteUbergraph_W_InventoryItemOverlay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_InventoryItemOverlay.W_InventoryItemOverlay_C.Init
// 0x0008 (0x0008 - 0x0000)
struct W_InventoryItemOverlay_C_Init final
{
public:
	class ABP_InventoryItem_C*                    Item_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItemOverlay_C_Init) == 0x000008, "Wrong alignment on W_InventoryItemOverlay_C_Init");
static_assert(sizeof(W_InventoryItemOverlay_C_Init) == 0x000008, "Wrong size on W_InventoryItemOverlay_C_Init");
static_assert(offsetof(W_InventoryItemOverlay_C_Init, Item_0) == 0x000000, "Member 'W_InventoryItemOverlay_C_Init::Item_0' has a wrong offset!");

// Function W_InventoryItemOverlay.W_InventoryItemOverlay_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_InventoryItemOverlay_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItemOverlay_C_Tick) == 0x000004, "Wrong alignment on W_InventoryItemOverlay_C_Tick");
static_assert(sizeof(W_InventoryItemOverlay_C_Tick) == 0x00003C, "Wrong size on W_InventoryItemOverlay_C_Tick");
static_assert(offsetof(W_InventoryItemOverlay_C_Tick, MyGeometry) == 0x000000, "Member 'W_InventoryItemOverlay_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_Tick, InDeltaTime) == 0x000038, "Member 'W_InventoryItemOverlay_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_InventoryItemOverlay.W_InventoryItemOverlay_C.UpdateVisibility
// 0x0010 (0x0010 - 0x0000)
struct W_InventoryItemOverlay_C_UpdateVisibility final
{
public:
	class ABP_InventoryItem_C*                    Item_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipped;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItemOverlay_C_UpdateVisibility) == 0x000008, "Wrong alignment on W_InventoryItemOverlay_C_UpdateVisibility");
static_assert(sizeof(W_InventoryItemOverlay_C_UpdateVisibility) == 0x000010, "Wrong size on W_InventoryItemOverlay_C_UpdateVisibility");
static_assert(offsetof(W_InventoryItemOverlay_C_UpdateVisibility, Item_0) == 0x000000, "Member 'W_InventoryItemOverlay_C_UpdateVisibility::Item_0' has a wrong offset!");
static_assert(offsetof(W_InventoryItemOverlay_C_UpdateVisibility, IsEquipped) == 0x000008, "Member 'W_InventoryItemOverlay_C_UpdateVisibility::IsEquipped' has a wrong offset!");

}

