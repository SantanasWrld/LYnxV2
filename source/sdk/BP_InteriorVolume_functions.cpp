#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteriorVolume

#include "Basic.hpp"

#include "BP_InteriorVolume_classes.hpp"
#include "BP_InteriorVolume_parameters.hpp"


namespace SDK
{

// Function BP_InteriorVolume.BP_InteriorVolume_C.BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_InteriorVolume_C::BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.ChecksPlayerInside
// (BlueprintCallable, BlueprintEvent)

void ABP_InteriorVolume_C::ChecksPlayerInside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "ChecksPlayerInside");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.ExecuteUbergraph_BP_InteriorVolume
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::ExecuteUbergraph_BP_InteriorVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "ExecuteUbergraph_BP_InteriorVolume");

	Params::BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.GetFog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Fog_Session_C**               Fog_0                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::GetFog(class ABP_Fog_Session_C** Fog_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "GetFog");

	Params::BP_InteriorVolume_C_GetFog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Fog_0 != nullptr)
		*Fog_0 = Parms.Fog_0;
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.GetGameInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_UPGameInstance_C**            GameInstance_0                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::GetGameInstance(class UBP_UPGameInstance_C** GameInstance_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "GetGameInstance");

	Params::BP_InteriorVolume_C_GetGameInstance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GameInstance_0 != nullptr)
		*GameInstance_0 = Parms.GameInstance_0;
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.IsInVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::IsInVolume(const struct FVector& Location, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "IsInVolume");

	Params::BP_InteriorVolume_C_IsInVolume Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "ReceiveTick");

	Params::BP_InteriorVolume_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.SetLocalPlayerIsInInterior
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInInterior                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::SetLocalPlayerIsInInterior(bool IsInInterior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "SetLocalPlayerIsInInterior");

	Params::BP_InteriorVolume_C_SetLocalPlayerIsInInterior Parms{};

	Parms.IsInInterior = IsInInterior;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.SpawnDoors
// (BlueprintCallable, BlueprintEvent)

void ABP_InteriorVolume_C::SpawnDoors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "SpawnDoors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.UpdateFogLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInInterior                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::UpdateFogLocation(bool IsInInterior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "UpdateFogLocation");

	Params::BP_InteriorVolume_C_UpdateFogLocation Parms{};

	Parms.IsInInterior = IsInInterior;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteriorVolume.BP_InteriorVolume_C.UpdateSkyboxVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInInterior                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteriorVolume_C::UpdateSkyboxVisibility(bool IsInInterior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteriorVolume_C", "UpdateSkyboxVisibility");

	Params::BP_InteriorVolume_C_UpdateSkyboxVisibility Parms{};

	Parms.IsInInterior = IsInInterior;

	UObject::ProcessEvent(Func, &Parms);
}

}

