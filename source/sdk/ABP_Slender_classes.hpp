#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Slender

#include "Basic.hpp"

#include "ABP_Slender_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Slender.ABP_Slender_C
// 0x0470 (0x07C0 - 0x0350)
class UABP_Slender_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Slender::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                  // 0x0358(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0368(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0370(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0378(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0410(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0438(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0480(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0570(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x05B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x05D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0620(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0640(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x06B0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x06D0(0x00C8)()
	double                                        Speed;                                             // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x07A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGrawling;                                        // 0x07A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A2[0x6];                                      // 0x07A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Slender_C*                          Slender;                                           // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Direction;                                         // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_Slender(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Slender_C">();
	}
	static class UABP_Slender_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Slender_C>();
	}
};
static_assert(alignof(UABP_Slender_C) == 0x000010, "Wrong alignment on UABP_Slender_C");
static_assert(sizeof(UABP_Slender_C) == 0x0007C0, "Wrong size on UABP_Slender_C");
static_assert(offsetof(UABP_Slender_C, UberGraphFrame) == 0x000350, "Member 'UABP_Slender_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_Slender_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimBlueprintExtension_PropertyAccess) == 0x000368, "Member 'UABP_Slender_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimBlueprintExtension_Base) == 0x000370, "Member 'UABP_Slender_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_Root) == 0x000378, "Member 'UABP_Slender_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_TransitionResult_3) == 0x000398, "Member 'UABP_Slender_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_TransitionResult_2) == 0x0003C0, "Member 'UABP_Slender_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_TransitionResult_1) == 0x0003E8, "Member 'UABP_Slender_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_TransitionResult) == 0x000410, "Member 'UABP_Slender_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_SequencePlayer_2) == 0x000438, "Member 'UABP_Slender_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_LayeredBoneBlend) == 0x000480, "Member 'UABP_Slender_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_SequencePlayer_1) == 0x000570, "Member 'UABP_Slender_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_StateResult_2) == 0x0005B8, "Member 'UABP_Slender_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_SequencePlayer) == 0x0005D8, "Member 'UABP_Slender_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_StateResult_1) == 0x000620, "Member 'UABP_Slender_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_BlendSpacePlayer) == 0x000640, "Member 'UABP_Slender_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_StateResult) == 0x0006B0, "Member 'UABP_Slender_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, AnimGraphNode_StateMachine) == 0x0006D0, "Member 'UABP_Slender_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, Speed) == 0x000798, "Member 'UABP_Slender_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, IsAttacking) == 0x0007A0, "Member 'UABP_Slender_C::IsAttacking' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, IsGrawling) == 0x0007A1, "Member 'UABP_Slender_C::IsGrawling' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, Slender) == 0x0007A8, "Member 'UABP_Slender_C::Slender' has a wrong offset!");
static_assert(offsetof(UABP_Slender_C, Direction) == 0x0007B0, "Member 'UABP_Slender_C::Direction' has a wrong offset!");

}

