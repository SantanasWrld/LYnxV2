#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pulpo

#include "Basic.hpp"

#include "E_ScoringActorState_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Pulpo.BP_Pulpo_C.GetInteractNoise
// 0x0020 (0x0020 - 0x0000)
struct BP_Pulpo_C_GetInteractNoise final
{
public:
	bool                                          NoiseOnInteract;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NoiseRange;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInteractNoise_NoiseOnInteract;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetInteractNoise_NoiseRange;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GetInteractNoise) == 0x000008, "Wrong alignment on BP_Pulpo_C_GetInteractNoise");
static_assert(sizeof(BP_Pulpo_C_GetInteractNoise) == 0x000020, "Wrong size on BP_Pulpo_C_GetInteractNoise");
static_assert(offsetof(BP_Pulpo_C_GetInteractNoise, NoiseOnInteract) == 0x000000, "Member 'BP_Pulpo_C_GetInteractNoise::NoiseOnInteract' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetInteractNoise, NoiseRange) == 0x000008, "Member 'BP_Pulpo_C_GetInteractNoise::NoiseRange' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetInteractNoise, CallFunc_GetInteractNoise_NoiseOnInteract) == 0x000010, "Member 'BP_Pulpo_C_GetInteractNoise::CallFunc_GetInteractNoise_NoiseOnInteract' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetInteractNoise, CallFunc_GetInteractNoise_NoiseRange) == 0x000018, "Member 'BP_Pulpo_C_GetInteractNoise::CallFunc_GetInteractNoise_NoiseRange' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GetInteractText
// 0x0030 (0x0030 - 0x0000)
struct BP_Pulpo_C_GetInteractText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetInteractText_Text;                     // 0x0018(0x0018)()
};
static_assert(alignof(BP_Pulpo_C_GetInteractText) == 0x000008, "Wrong alignment on BP_Pulpo_C_GetInteractText");
static_assert(sizeof(BP_Pulpo_C_GetInteractText) == 0x000030, "Wrong size on BP_Pulpo_C_GetInteractText");
static_assert(offsetof(BP_Pulpo_C_GetInteractText, Text) == 0x000000, "Member 'BP_Pulpo_C_GetInteractText::Text' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetInteractText, CallFunc_GetInteractText_Text) == 0x000018, "Member 'BP_Pulpo_C_GetInteractText::CallFunc_GetInteractText_Text' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GetInteractDistance
// 0x0010 (0x0010 - 0x0000)
struct BP_Pulpo_C_GetInteractDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInteractDistance_Distance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GetInteractDistance) == 0x000008, "Wrong alignment on BP_Pulpo_C_GetInteractDistance");
static_assert(sizeof(BP_Pulpo_C_GetInteractDistance) == 0x000010, "Wrong size on BP_Pulpo_C_GetInteractDistance");
static_assert(offsetof(BP_Pulpo_C_GetInteractDistance, Distance) == 0x000000, "Member 'BP_Pulpo_C_GetInteractDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetInteractDistance, CallFunc_GetInteractDistance_Distance) == 0x000008, "Member 'BP_Pulpo_C_GetInteractDistance::CallFunc_GetInteractDistance_Distance' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GetInteractDuration
// 0x0010 (0x0010 - 0x0000)
struct BP_Pulpo_C_GetInteractDuration final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInteractDuration_Duration;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GetInteractDuration) == 0x000008, "Wrong alignment on BP_Pulpo_C_GetInteractDuration");
static_assert(sizeof(BP_Pulpo_C_GetInteractDuration) == 0x000010, "Wrong size on BP_Pulpo_C_GetInteractDuration");
static_assert(offsetof(BP_Pulpo_C_GetInteractDuration, Duration) == 0x000000, "Member 'BP_Pulpo_C_GetInteractDuration::Duration' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetInteractDuration, CallFunc_GetInteractDuration_Duration) == 0x000008, "Member 'BP_Pulpo_C_GetInteractDuration::CallFunc_GetInteractDuration_Duration' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GetDefaultScoringState
// 0x0003 (0x0003 - 0x0000)
struct BP_Pulpo_C_GetDefaultScoringState final
{
public:
	E_ScoringActorState                           State;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ScoringActorState                           CallFunc_GetDefaultScoringState_State;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GetDefaultScoringState) == 0x000001, "Wrong alignment on BP_Pulpo_C_GetDefaultScoringState");
static_assert(sizeof(BP_Pulpo_C_GetDefaultScoringState) == 0x000003, "Wrong size on BP_Pulpo_C_GetDefaultScoringState");
static_assert(offsetof(BP_Pulpo_C_GetDefaultScoringState, State) == 0x000000, "Member 'BP_Pulpo_C_GetDefaultScoringState::State' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetDefaultScoringState, CallFunc_GetDefaultScoringState_State) == 0x000001, "Member 'BP_Pulpo_C_GetDefaultScoringState::CallFunc_GetDefaultScoringState_State' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetDefaultScoringState, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_Pulpo_C_GetDefaultScoringState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.CheckObstacles
// 0x0218 (0x0218 - 0x0000)
struct BP_Pulpo_C_CheckObstacles final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StopLocation;                                      // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_CheckObstacles) == 0x000008, "Wrong alignment on BP_Pulpo_C_CheckObstacles");
static_assert(sizeof(BP_Pulpo_C_CheckObstacles) == 0x000218, "Wrong size on BP_Pulpo_C_CheckObstacles");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, TargetLocation) == 0x000000, "Member 'BP_Pulpo_C_CheckObstacles::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, StopLocation) == 0x000018, "Member 'BP_Pulpo_C_CheckObstacles::StopLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_Pulpo_C_CheckObstacles::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_SphereTraceSingle_OutHit) == 0x000058, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_SphereTraceSingle_ReturnValue) == 0x000140, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_bBlockingHit) == 0x000141, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_bInitialOverlap) == 0x000142, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_Time) == 0x000144, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_Distance) == 0x000148, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_Location) == 0x000150, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_ImpactPoint) == 0x000168, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_Normal) == 0x000180, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_ImpactNormal) == 0x000198, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_PhysMat) == 0x0001B0, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_HitActor) == 0x0001B8, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_HitComponent) == 0x0001C0, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_HitBoneName) == 0x0001C8, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_BoneName) == 0x0001D0, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_ElementIndex) == 0x0001DC, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_FaceIndex) == 0x0001E0, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_TraceStart) == 0x0001E8, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_CheckObstacles, CallFunc_BreakHitResult_TraceEnd) == 0x000200, "Member 'BP_Pulpo_C_CheckObstacles::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.IsInStringTrap
// 0x0048 (0x0048 - 0x0000)
struct BP_Pulpo_C_IsInStringTrap final
{
public:
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_StringTrap_C*                       StringTrap;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_StringTrap_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StringTrap_C*                       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_IsInStringTrap) == 0x000008, "Wrong alignment on BP_Pulpo_C_IsInStringTrap");
static_assert(sizeof(BP_Pulpo_C_IsInStringTrap) == 0x000048, "Wrong size on BP_Pulpo_C_IsInStringTrap");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, Killable) == 0x000000, "Member 'BP_Pulpo_C_IsInStringTrap::Killable' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, StringTrap) == 0x000008, "Member 'BP_Pulpo_C_IsInStringTrap::StringTrap' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Pulpo_C_IsInStringTrap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_Pulpo_C_IsInStringTrap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_Pulpo_C_IsInStringTrap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_Pulpo_C_IsInStringTrap::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Pulpo_C_IsInStringTrap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Pulpo_C_IsInStringTrap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_Pulpo_C_IsInStringTrap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_IsInStringTrap, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'BP_Pulpo_C_IsInStringTrap::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GetGrabbedTentacleLocation
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Pulpo_C_GetGrabbedTentacleLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransform_ReturnValue;             // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GetGrabbedTentacleLocation) == 0x000010, "Wrong alignment on BP_Pulpo_C_GetGrabbedTentacleLocation");
static_assert(sizeof(BP_Pulpo_C_GetGrabbedTentacleLocation) == 0x0000D0, "Wrong size on BP_Pulpo_C_GetGrabbedTentacleLocation");
static_assert(offsetof(BP_Pulpo_C_GetGrabbedTentacleLocation, TargetLocation) == 0x000000, "Member 'BP_Pulpo_C_GetGrabbedTentacleLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetGrabbedTentacleLocation, CallFunc_GetBoneTransform_ReturnValue) == 0x000020, "Member 'BP_Pulpo_C_GetGrabbedTentacleLocation::CallFunc_GetBoneTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetGrabbedTentacleLocation, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_Pulpo_C_GetGrabbedTentacleLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetGrabbedTentacleLocation, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'BP_Pulpo_C_GetGrabbedTentacleLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetGrabbedTentacleLocation, CallFunc_BreakTransform_Scale) == 0x0000B0, "Member 'BP_Pulpo_C_GetGrabbedTentacleLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GetPredictedTentacleLocation
// 0x0120 (0x0120 - 0x0000)
struct BP_Pulpo_C_GetPredictedTentacleLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetBoneTransform_ReturnValue;             // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GetPredictedTentacleLocation) == 0x000010, "Wrong alignment on BP_Pulpo_C_GetPredictedTentacleLocation");
static_assert(sizeof(BP_Pulpo_C_GetPredictedTentacleLocation) == 0x000120, "Wrong size on BP_Pulpo_C_GetPredictedTentacleLocation");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, TargetLocation) == 0x000000, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, CallFunc_GetVelocity_ReturnValue) == 0x000030, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000048, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, CallFunc_GetBoneTransform_ReturnValue) == 0x000060, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::CallFunc_GetBoneTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, CallFunc_BreakTransform_Scale) == 0x0000F0, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetPredictedTentacleLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'BP_Pulpo_C_GetPredictedTentacleLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GetTargetTentacleLocation
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Pulpo_C_GetTargetTentacleLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransform_ReturnValue;             // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GetTargetTentacleLocation) == 0x000010, "Wrong alignment on BP_Pulpo_C_GetTargetTentacleLocation");
static_assert(sizeof(BP_Pulpo_C_GetTargetTentacleLocation) == 0x0000D0, "Wrong size on BP_Pulpo_C_GetTargetTentacleLocation");
static_assert(offsetof(BP_Pulpo_C_GetTargetTentacleLocation, TargetLocation) == 0x000000, "Member 'BP_Pulpo_C_GetTargetTentacleLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetTargetTentacleLocation, CallFunc_GetBoneTransform_ReturnValue) == 0x000020, "Member 'BP_Pulpo_C_GetTargetTentacleLocation::CallFunc_GetBoneTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetTargetTentacleLocation, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_Pulpo_C_GetTargetTentacleLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetTargetTentacleLocation, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'BP_Pulpo_C_GetTargetTentacleLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetTargetTentacleLocation, CallFunc_BreakTransform_Scale) == 0x0000B0, "Member 'BP_Pulpo_C_GetTargetTentacleLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GetCurrentTentacleLocation
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Pulpo_C_GetCurrentTentacleLocation final
{
public:
	struct FVector                                CurrentLocation;                                   // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransform_ReturnValue;             // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GetCurrentTentacleLocation) == 0x000010, "Wrong alignment on BP_Pulpo_C_GetCurrentTentacleLocation");
static_assert(sizeof(BP_Pulpo_C_GetCurrentTentacleLocation) == 0x0000D0, "Wrong size on BP_Pulpo_C_GetCurrentTentacleLocation");
static_assert(offsetof(BP_Pulpo_C_GetCurrentTentacleLocation, CurrentLocation) == 0x000000, "Member 'BP_Pulpo_C_GetCurrentTentacleLocation::CurrentLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetCurrentTentacleLocation, CallFunc_GetBoneTransform_ReturnValue) == 0x000020, "Member 'BP_Pulpo_C_GetCurrentTentacleLocation::CallFunc_GetBoneTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetCurrentTentacleLocation, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_Pulpo_C_GetCurrentTentacleLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetCurrentTentacleLocation, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'BP_Pulpo_C_GetCurrentTentacleLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_GetCurrentTentacleLocation, CallFunc_BreakTransform_Scale) == 0x0000B0, "Member 'BP_Pulpo_C_GetCurrentTentacleLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Pulpo_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Pulpo_C_ReceiveTick");
static_assert(sizeof(BP_Pulpo_C_ReceiveTick) == 0x000004, "Wrong size on BP_Pulpo_C_ReceiveTick");
static_assert(offsetof(BP_Pulpo_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Pulpo_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.Interact
// 0x0008 (0x0008 - 0x0000)
struct BP_Pulpo_C_Interact final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_Interact) == 0x000008, "Wrong alignment on BP_Pulpo_C_Interact");
static_assert(sizeof(BP_Pulpo_C_Interact) == 0x000008, "Wrong size on BP_Pulpo_C_Interact");
static_assert(offsetof(BP_Pulpo_C_Interact, Player) == 0x000000, "Member 'BP_Pulpo_C_Interact::Player' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.TentacleAnimation
// 0x0038 (0x0038 - 0x0000)
struct BP_Pulpo_C_TentacleAnimation final
{
public:
	struct FVector                                OriginLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttack;                                          // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_TentacleAnimation) == 0x000008, "Wrong alignment on BP_Pulpo_C_TentacleAnimation");
static_assert(sizeof(BP_Pulpo_C_TentacleAnimation) == 0x000038, "Wrong size on BP_Pulpo_C_TentacleAnimation");
static_assert(offsetof(BP_Pulpo_C_TentacleAnimation, OriginLocation) == 0x000000, "Member 'BP_Pulpo_C_TentacleAnimation::OriginLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_TentacleAnimation, TargetLocation) == 0x000018, "Member 'BP_Pulpo_C_TentacleAnimation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_TentacleAnimation, IsAttack) == 0x000030, "Member 'BP_Pulpo_C_TentacleAnimation::IsAttack' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.GrabTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_Pulpo_C_GrabTarget final
{
public:
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_GrabTarget) == 0x000008, "Wrong alignment on BP_Pulpo_C_GrabTarget");
static_assert(sizeof(BP_Pulpo_C_GrabTarget) == 0x000008, "Wrong size on BP_Pulpo_C_GrabTarget");
static_assert(offsetof(BP_Pulpo_C_GrabTarget, Killable) == 0x000000, "Member 'BP_Pulpo_C_GrabTarget::Killable' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.EnableRagdoll
// 0x0020 (0x0020 - 0x0000)
struct BP_Pulpo_C_EnableRagdoll final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Force;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_EnableRagdoll) == 0x000008, "Wrong alignment on BP_Pulpo_C_EnableRagdoll");
static_assert(sizeof(BP_Pulpo_C_EnableRagdoll) == 0x000020, "Wrong size on BP_Pulpo_C_EnableRagdoll");
static_assert(offsetof(BP_Pulpo_C_EnableRagdoll, SourceLocation) == 0x000000, "Member 'BP_Pulpo_C_EnableRagdoll::SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_EnableRagdoll, Force) == 0x000018, "Member 'BP_Pulpo_C_EnableRagdoll::Force' has a wrong offset!");

// Function BP_Pulpo.BP_Pulpo_C.ExecuteUbergraph_BP_Pulpo
// 0x0510 (0x0510 - 0x0000)
struct BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGrabbedTentacleLocation_TargetLocation; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_Event_Player;                               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_OriginLocation;                 // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TargetLocation;                 // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsAttack;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                K2Node_CustomEvent_Killable;                       // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_StringTrap_C*                       CallFunc_IsInStringTrap_StringTrap;                // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentTentacleLocation_CurrentLocation; // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentTentacleLocation_CurrentLocation_1; // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Zero_ReturnValue;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPredictedTentacleLocation_TargetLocation; // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CheckObstacles_StopLocation;              // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetTentacleLocation_TargetLocation; // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_SourceLocation;                       // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Force;                                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SetAudioAttachedEnabled_OutAudio;         // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0218(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0238(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetTentacleLocation_TargetLocation_1; // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0358(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0468(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0490(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo) == 0x000008, "Wrong alignment on BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo");
static_assert(sizeof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo) == 0x000510, "Wrong size on BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, EntryPoint) == 0x000000, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_GetGrabbedTentacleLocation_TargetLocation) == 0x000030, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_GetGrabbedTentacleLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000048, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_Event_Player) == 0x000060, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_HasAuthority_ReturnValue) == 0x000068, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000069, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_CustomEvent_OriginLocation) == 0x000090, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_CustomEvent_OriginLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_CustomEvent_TargetLocation) == 0x0000A8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_CustomEvent_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_CustomEvent_IsAttack) == 0x0000C0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_CustomEvent_IsAttack' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_Event_DeltaSeconds) == 0x0000C4, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_2) == 0x0000C9, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_3) == 0x0000CA, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_CustomEvent_Killable) == 0x0000D0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_CustomEvent_Killable' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsInStringTrap_StringTrap) == 0x0000D8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsInStringTrap_StringTrap' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_4) == 0x0000E0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_GetCurrentTentacleLocation_CurrentLocation) == 0x0000E8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_GetCurrentTentacleLocation_CurrentLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_GetCurrentTentacleLocation_CurrentLocation_1) == 0x000100, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_GetCurrentTentacleLocation_CurrentLocation_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_5) == 0x000118, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Vector_Zero_ReturnValue) == 0x000120, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Vector_Zero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000138, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_6) == 0x000139, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_RandomUnitVector_ReturnValue) == 0x000140, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_GetPredictedTentacleLocation_TargetLocation) == 0x000158, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_GetPredictedTentacleLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000170, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_CheckObstacles_StopLocation) == 0x000188, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_CheckObstacles_StopLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001A0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_GetTargetTentacleLocation_TargetLocation) == 0x0001B8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_GetTargetTentacleLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_HasAuthority_ReturnValue_1) == 0x0001D0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_HasAuthority_ReturnValue_2) == 0x0001D1, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_BooleanAND_ReturnValue) == 0x0001D2, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_HasAuthority_ReturnValue_3) == 0x0001D3, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_Event_SourceLocation) == 0x0001D8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_Event_SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_Event_Force) == 0x0001F0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_HasAuthority_ReturnValue_4) == 0x0001F8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_7) == 0x0001F9, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000200, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_SetAudioAttachedEnabled_OutAudio) == 0x000210, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_SetAudioAttachedEnabled_OutAudio' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000218, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000220, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000238, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_MakeVector_ReturnValue) == 0x000320, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_8) == 0x000338, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_GetTargetTentacleLocation_TargetLocation_1) == 0x000340, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_GetTargetTentacleLocation_TargetLocation_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000358, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Vector_Distance_ReturnValue) == 0x000440, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000448, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_HasAuthority_ReturnValue_5) == 0x000449, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_VLerp_ReturnValue) == 0x000450, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000468, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Add_VectorVector_ReturnValue) == 0x000478, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000490, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000498, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Normal_ReturnValue) == 0x0004B0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Vector_Distance_ReturnValue_1) == 0x0004C8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0004D0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0004E8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_IsValid_ReturnValue_9) == 0x0004E9, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0004F0, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0004F8, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_MakeVector_Z_ImplicitCast) == 0x000500, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x000508, "Member 'BP_Pulpo_C_ExecuteUbergraph_BP_Pulpo::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");

}

