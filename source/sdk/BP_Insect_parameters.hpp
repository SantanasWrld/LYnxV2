#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Insect

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Insect.BP_Insect_C.IsAttachedToLocalPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_Insect_C_IsAttachedToLocalPlayer final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_IsAttachedToLocalPlayer) == 0x000008, "Wrong alignment on BP_Insect_C_IsAttachedToLocalPlayer");
static_assert(sizeof(BP_Insect_C_IsAttachedToLocalPlayer) == 0x000020, "Wrong size on BP_Insect_C_IsAttachedToLocalPlayer");
static_assert(offsetof(BP_Insect_C_IsAttachedToLocalPlayer, Result) == 0x000000, "Member 'BP_Insect_C_IsAttachedToLocalPlayer::Result' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_IsAttachedToLocalPlayer, CallFunc_GetAttachParentActor_ReturnValue) == 0x000008, "Member 'BP_Insect_C_IsAttachedToLocalPlayer::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_IsAttachedToLocalPlayer, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x000010, "Member 'BP_Insect_C_IsAttachedToLocalPlayer::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_IsAttachedToLocalPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Insect_C_IsAttachedToLocalPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_IsAttachedToLocalPlayer, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_Insect_C_IsAttachedToLocalPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.CanPlayerKillInsect
// 0x0020 (0x0020 - 0x0000)
struct BP_Insect_C_CanPlayerKillInsect final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_CanPlayerKillInsect) == 0x000008, "Wrong alignment on BP_Insect_C_CanPlayerKillInsect");
static_assert(sizeof(BP_Insect_C_CanPlayerKillInsect) == 0x000020, "Wrong size on BP_Insect_C_CanPlayerKillInsect");
static_assert(offsetof(BP_Insect_C_CanPlayerKillInsect, Player) == 0x000000, "Member 'BP_Insect_C_CanPlayerKillInsect::Player' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_CanPlayerKillInsect, Result) == 0x000008, "Member 'BP_Insect_C_CanPlayerKillInsect::Result' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_CanPlayerKillInsect, CallFunc_GetAttachParentActor_ReturnValue) == 0x000010, "Member 'BP_Insect_C_CanPlayerKillInsect::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_CanPlayerKillInsect, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_Insect_C_CanPlayerKillInsect::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_CanPlayerKillInsect, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'BP_Insect_C_CanPlayerKillInsect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.GetInteractDuration
// 0x0010 (0x0010 - 0x0000)
struct BP_Insect_C_GetInteractDuration final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInteractDuration_Duration;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_GetInteractDuration) == 0x000008, "Wrong alignment on BP_Insect_C_GetInteractDuration");
static_assert(sizeof(BP_Insect_C_GetInteractDuration) == 0x000010, "Wrong size on BP_Insect_C_GetInteractDuration");
static_assert(offsetof(BP_Insect_C_GetInteractDuration, Duration) == 0x000000, "Member 'BP_Insect_C_GetInteractDuration::Duration' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_GetInteractDuration, CallFunc_GetInteractDuration_Duration) == 0x000008, "Member 'BP_Insect_C_GetInteractDuration::CallFunc_GetInteractDuration_Duration' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.GetInteractDistance
// 0x0018 (0x0018 - 0x0000)
struct BP_Insect_C_GetInteractDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAttachedToLocalPlayer_Result;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetInteractDistance_Distance;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_GetInteractDistance) == 0x000008, "Wrong alignment on BP_Insect_C_GetInteractDistance");
static_assert(sizeof(BP_Insect_C_GetInteractDistance) == 0x000018, "Wrong size on BP_Insect_C_GetInteractDistance");
static_assert(offsetof(BP_Insect_C_GetInteractDistance, Distance) == 0x000000, "Member 'BP_Insect_C_GetInteractDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_GetInteractDistance, CallFunc_IsAttachedToLocalPlayer_Result) == 0x000008, "Member 'BP_Insect_C_GetInteractDistance::CallFunc_IsAttachedToLocalPlayer_Result' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_GetInteractDistance, CallFunc_GetInteractDistance_Distance) == 0x000010, "Member 'BP_Insect_C_GetInteractDistance::CallFunc_GetInteractDistance_Distance' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.GetInteractText
// 0x0030 (0x0030 - 0x0000)
struct BP_Insect_C_GetInteractText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetInteractText_Text;                     // 0x0018(0x0018)()
};
static_assert(alignof(BP_Insect_C_GetInteractText) == 0x000008, "Wrong alignment on BP_Insect_C_GetInteractText");
static_assert(sizeof(BP_Insect_C_GetInteractText) == 0x000030, "Wrong size on BP_Insect_C_GetInteractText");
static_assert(offsetof(BP_Insect_C_GetInteractText, Text) == 0x000000, "Member 'BP_Insect_C_GetInteractText::Text' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_GetInteractText, CallFunc_GetInteractText_Text) == 0x000018, "Member 'BP_Insect_C_GetInteractText::CallFunc_GetInteractText_Text' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.GetInteractNoise
// 0x0010 (0x0010 - 0x0000)
struct BP_Insect_C_GetInteractNoise final
{
public:
	bool                                          NoiseOnInteract;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NoiseRange;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_GetInteractNoise) == 0x000008, "Wrong alignment on BP_Insect_C_GetInteractNoise");
static_assert(sizeof(BP_Insect_C_GetInteractNoise) == 0x000010, "Wrong size on BP_Insect_C_GetInteractNoise");
static_assert(offsetof(BP_Insect_C_GetInteractNoise, NoiseOnInteract) == 0x000000, "Member 'BP_Insect_C_GetInteractNoise::NoiseOnInteract' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_GetInteractNoise, NoiseRange) == 0x000008, "Member 'BP_Insect_C_GetInteractNoise::NoiseRange' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.JumpOnTarget
// 0x0018 (0x0018 - 0x0000)
struct BP_Insect_C_JumpOnTarget final
{
public:
	struct FVector                                LaunchVelocity;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_JumpOnTarget) == 0x000008, "Wrong alignment on BP_Insect_C_JumpOnTarget");
static_assert(sizeof(BP_Insect_C_JumpOnTarget) == 0x000018, "Wrong size on BP_Insect_C_JumpOnTarget");
static_assert(offsetof(BP_Insect_C_JumpOnTarget, LaunchVelocity) == 0x000000, "Member 'BP_Insect_C_JumpOnTarget::LaunchVelocity' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.AttachToCharacter
// 0x0010 (0x0010 - 0x0000)
struct BP_Insect_C_AttachToCharacter final
{
public:
	class ABP_KillableCharacter_C*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_AttachToCharacter) == 0x000008, "Wrong alignment on BP_Insect_C_AttachToCharacter");
static_assert(sizeof(BP_Insect_C_AttachToCharacter) == 0x000010, "Wrong size on BP_Insect_C_AttachToCharacter");
static_assert(offsetof(BP_Insect_C_AttachToCharacter, Character) == 0x000000, "Member 'BP_Insect_C_AttachToCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_AttachToCharacter, BoneName) == 0x000008, "Member 'BP_Insect_C_AttachToCharacter::BoneName' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.Interact
// 0x0008 (0x0008 - 0x0000)
struct BP_Insect_C_Interact final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_Interact) == 0x000008, "Wrong alignment on BP_Insect_C_Interact");
static_assert(sizeof(BP_Insect_C_Interact) == 0x000008, "Wrong size on BP_Insect_C_Interact");
static_assert(offsetof(BP_Insect_C_Interact, Player) == 0x000000, "Member 'BP_Insect_C_Interact::Player' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.Killed (Server)
// 0x0010 (0x0010 - 0x0000)
struct BP_Insect_C_Killed__Server_ final
{
public:
	class ABP_KillableCharacter_C*                KilledCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_Killed__Server_) == 0x000008, "Wrong alignment on BP_Insect_C_Killed__Server_");
static_assert(sizeof(BP_Insect_C_Killed__Server_) == 0x000010, "Wrong size on BP_Insect_C_Killed__Server_");
static_assert(offsetof(BP_Insect_C_Killed__Server_, KilledCharacter) == 0x000000, "Member 'BP_Insect_C_Killed__Server_::KilledCharacter' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_Killed__Server_, Killer) == 0x000008, "Member 'BP_Insect_C_Killed__Server_::Killer' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.StopCameraShakeWhenDead
// 0x0010 (0x0010 - 0x0000)
struct BP_Insect_C_StopCameraShakeWhenDead final
{
public:
	class ABP_UPPlayerController_C*               PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CameraShakeIndex;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_StopCameraShakeWhenDead) == 0x000008, "Wrong alignment on BP_Insect_C_StopCameraShakeWhenDead");
static_assert(sizeof(BP_Insect_C_StopCameraShakeWhenDead) == 0x000010, "Wrong size on BP_Insect_C_StopCameraShakeWhenDead");
static_assert(offsetof(BP_Insect_C_StopCameraShakeWhenDead, PlayerController) == 0x000000, "Member 'BP_Insect_C_StopCameraShakeWhenDead::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_StopCameraShakeWhenDead, CameraShakeIndex) == 0x000008, "Member 'BP_Insect_C_StopCameraShakeWhenDead::CameraShakeIndex' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.InfectTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_Insect_C_InfectTarget final
{
public:
	class ABP_KillableCharacter_C*                Killable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_InfectTarget) == 0x000008, "Wrong alignment on BP_Insect_C_InfectTarget");
static_assert(sizeof(BP_Insect_C_InfectTarget) == 0x000008, "Wrong size on BP_Insect_C_InfectTarget");
static_assert(offsetof(BP_Insect_C_InfectTarget, Killable) == 0x000000, "Member 'BP_Insect_C_InfectTarget::Killable' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Insect_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Insect_C_ReceiveTick");
static_assert(sizeof(BP_Insect_C_ReceiveTick) == 0x000004, "Wrong size on BP_Insect_C_ReceiveTick");
static_assert(offsetof(BP_Insect_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Insect_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Insect.BP_Insect_C.ExecuteUbergraph_BP_Insect
// 0x01F0 (0x01F0 - 0x0000)
struct BP_Insect_C_ExecuteUbergraph_BP_Insect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                K2Node_Event_KilledCharacter;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Killer;                               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerController_C*               K2Node_CustomEvent_PlayerController;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CameraShakeIndex;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_Event_Player;                               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerKillInsect_Result;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_KillableCharacter_C*                K2Node_CustomEvent_Killable;                       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Infected_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_KillableCharacter_C*                K2Node_Event_Character;                            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_LaunchVelocity;                 // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerController_C*               CallFunc_GetPlayerController_PlayerController;     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_StartCameraShake__Server__CameraShakeIndex; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_StartCameraShake__Server__CameraShakeIndex_1; // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SetAudioAttachedEnabled_OutAudio;         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SetAudioAttachedEnabled_OutAudio_1;       // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Insect_C_ExecuteUbergraph_BP_Insect) == 0x000010, "Wrong alignment on BP_Insect_C_ExecuteUbergraph_BP_Insect");
static_assert(sizeof(BP_Insect_C_ExecuteUbergraph_BP_Insect) == 0x0001F0, "Wrong size on BP_Insect_C_ExecuteUbergraph_BP_Insect");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, EntryPoint) == 0x000000, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_Event_KilledCharacter) == 0x000020, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_Event_KilledCharacter' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_Event_Killer) == 0x000028, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_Event_Killer' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_CustomEvent_PlayerController) == 0x000030, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_CustomEvent_CameraShakeIndex) == 0x000038, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_CustomEvent_CameraShakeIndex' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_Event_Player) == 0x000040, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_CanPlayerKillInsect_Result) == 0x000060, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_CanPlayerKillInsect_Result' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_CustomEvent_Killable) == 0x000068, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_CustomEvent_Killable' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_GetObjectClass_ReturnValue) == 0x0000D0, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D8, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_Event_Character) == 0x0000E8, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_Event_BoneName) == 0x0000F0, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x0000F8, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_CustomEvent_LaunchVelocity) == 0x000108, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_CustomEvent_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_GetPlayerController_PlayerController) == 0x000120, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_GetPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_StartCameraShake__Server__CameraShakeIndex) == 0x00012C, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_StartCameraShake__Server__CameraShakeIndex' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_StartCameraShake__Server__CameraShakeIndex_1) == 0x000130, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_StartCameraShake__Server__CameraShakeIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_IsValid_ReturnValue_1) == 0x000134, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, K2Node_Event_DeltaSeconds) == 0x000138, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_GetVelocity_ReturnValue) == 0x000140, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_Not_PreBool_ReturnValue) == 0x000158, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_VSize_ReturnValue) == 0x000160, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_BooleanAND_ReturnValue) == 0x000168, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000169, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_Not_PreBool_ReturnValue_1) == 0x00016A, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_BooleanAND_ReturnValue_1) == 0x00016B, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_SetAudioAttachedEnabled_OutAudio) == 0x000170, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_SetAudioAttachedEnabled_OutAudio' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_SetAudioAttachedEnabled_OutAudio_1) == 0x000178, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_SetAudioAttachedEnabled_OutAudio_1' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_Array_Contains_ReturnValue) == 0x000180, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_BooleanAND_ReturnValue_2) == 0x000181, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_GetActorUpVector_ReturnValue) == 0x000188, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001A0, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_BreakVector_X) == 0x0001B8, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_BreakVector_Y) == 0x0001C0, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_BreakVector_Z) == 0x0001C8, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_MakeVector_ReturnValue) == 0x0001D0, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Insect_C_ExecuteUbergraph_BP_Insect, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0001E8, "Member 'BP_Insect_C_ExecuteUbergraph_BP_Insect::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

}

