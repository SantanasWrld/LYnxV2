#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InventoryItem

#include "Basic.hpp"

#include "S_InventoryItem_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_InventoryItem.W_InventoryItem_C.ExecuteUbergraph_W_InventoryItem
// 0x00F0 (0x00F0 - 0x0000)
struct W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetProgress_Progress;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSelected;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InventoryItem                       K2Node_CustomEvent_ItemInfo;                       // 0x0018(0x0068)(HasGetValueTypeHash)
	class ABP_InventoryItem_C*                    K2Node_CustomEvent_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0098(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Progress;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue_1;                  // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem) == 0x000008, "Wrong alignment on W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem");
static_assert(sizeof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem) == 0x0000F0, "Wrong size on W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, EntryPoint) == 0x000000, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_GetProgress_Progress) == 0x000008, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_GetProgress_Progress' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, K2Node_CustomEvent_IsSelected) == 0x000010, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::K2Node_CustomEvent_IsSelected' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000011, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, K2Node_CustomEvent_ItemInfo) == 0x000018, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::K2Node_CustomEvent_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, K2Node_CustomEvent_Item) == 0x000080, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000088, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_PlayAnimation_ReturnValue) == 0x000090, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, K2Node_Event_MyGeometry) == 0x000098, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, K2Node_Event_InDeltaTime) == 0x0000D0, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, K2Node_CustomEvent_Progress) == 0x0000D8, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::K2Node_CustomEvent_Progress' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_ObjectIsA_ReturnValue) == 0x0000E1, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_ObjectIsA_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_ObjectIsA_ReturnValue_1) == 0x0000E2, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_ObjectIsA_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_IsValid_ReturnValue_1) == 0x0000E3, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_BooleanOR_ReturnValue) == 0x0000E4, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0000E8, "Member 'W_InventoryItem_C_ExecuteUbergraph_W_InventoryItem::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function W_InventoryItem.W_InventoryItem_C.GetProgress
// 0x0048 (0x0048 - 0x0000)
struct W_InventoryItem_C_GetProgress final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Cameroid_C*                         K2Node_DynamicCast_AsBP_Cameroid;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCapturesLeft_CapturesLeft;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Flashlight_C*                       K2Node_DynamicCast_AsBP_Flashlight;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItem_C_GetProgress) == 0x000008, "Wrong alignment on W_InventoryItem_C_GetProgress");
static_assert(sizeof(W_InventoryItem_C_GetProgress) == 0x000048, "Wrong size on W_InventoryItem_C_GetProgress");
static_assert(offsetof(W_InventoryItem_C_GetProgress, Progress) == 0x000000, "Member 'W_InventoryItem_C_GetProgress::Progress' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_InventoryItem_C_GetProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, K2Node_DynamicCast_AsBP_Cameroid) == 0x000010, "Member 'W_InventoryItem_C_GetProgress::K2Node_DynamicCast_AsBP_Cameroid' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_InventoryItem_C_GetProgress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'W_InventoryItem_C_GetProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, CallFunc_GetCapturesLeft_CapturesLeft) == 0x00001C, "Member 'W_InventoryItem_C_GetProgress::CallFunc_GetCapturesLeft_CapturesLeft' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'W_InventoryItem_C_GetProgress::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'W_InventoryItem_C_GetProgress::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, K2Node_DynamicCast_AsBP_Flashlight) == 0x000030, "Member 'W_InventoryItem_C_GetProgress::K2Node_DynamicCast_AsBP_Flashlight' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'W_InventoryItem_C_GetProgress::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_GetProgress, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'W_InventoryItem_C_GetProgress::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_InventoryItem.W_InventoryItem_C.SetItem
// 0x0070 (0x0070 - 0x0000)
struct W_InventoryItem_C_SetItem final
{
public:
	struct FS_InventoryItem                       ItemInfo_0;                                        // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ABP_InventoryItem_C*                    Item_0;                                            // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItem_C_SetItem) == 0x000008, "Wrong alignment on W_InventoryItem_C_SetItem");
static_assert(sizeof(W_InventoryItem_C_SetItem) == 0x000070, "Wrong size on W_InventoryItem_C_SetItem");
static_assert(offsetof(W_InventoryItem_C_SetItem, ItemInfo_0) == 0x000000, "Member 'W_InventoryItem_C_SetItem::ItemInfo_0' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_SetItem, Item_0) == 0x000068, "Member 'W_InventoryItem_C_SetItem::Item_0' has a wrong offset!");

// Function W_InventoryItem.W_InventoryItem_C.SetProgressBar
// 0x0008 (0x0008 - 0x0000)
struct W_InventoryItem_C_SetProgressBar final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItem_C_SetProgressBar) == 0x000008, "Wrong alignment on W_InventoryItem_C_SetProgressBar");
static_assert(sizeof(W_InventoryItem_C_SetProgressBar) == 0x000008, "Wrong size on W_InventoryItem_C_SetProgressBar");
static_assert(offsetof(W_InventoryItem_C_SetProgressBar, Progress) == 0x000000, "Member 'W_InventoryItem_C_SetProgressBar::Progress' has a wrong offset!");

// Function W_InventoryItem.W_InventoryItem_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct W_InventoryItem_C_SetSelected final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItem_C_SetSelected) == 0x000001, "Wrong alignment on W_InventoryItem_C_SetSelected");
static_assert(sizeof(W_InventoryItem_C_SetSelected) == 0x000001, "Wrong size on W_InventoryItem_C_SetSelected");
static_assert(offsetof(W_InventoryItem_C_SetSelected, IsSelected_0) == 0x000000, "Member 'W_InventoryItem_C_SetSelected::IsSelected_0' has a wrong offset!");

// Function W_InventoryItem.W_InventoryItem_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_InventoryItem_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryItem_C_Tick) == 0x000004, "Wrong alignment on W_InventoryItem_C_Tick");
static_assert(sizeof(W_InventoryItem_C_Tick) == 0x00003C, "Wrong size on W_InventoryItem_C_Tick");
static_assert(offsetof(W_InventoryItem_C_Tick, MyGeometry) == 0x000000, "Member 'W_InventoryItem_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_InventoryItem_C_Tick, InDeltaTime) == 0x000038, "Member 'W_InventoryItem_C_Tick::InDeltaTime' has a wrong offset!");

}

