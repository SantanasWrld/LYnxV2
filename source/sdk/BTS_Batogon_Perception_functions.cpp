#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_Batogon_Perception

#include "Basic.hpp"

#include "BTS_Batogon_Perception_classes.hpp"
#include "BTS_Batogon_Perception_parameters.hpp"


namespace SDK
{

// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.ExecuteUbergraph_BTS_Batogon_Perception
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_Batogon_Perception_C::ExecuteUbergraph_BTS_Batogon_Perception(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_Batogon_Perception_C", "ExecuteUbergraph_BTS_Batogon_Perception");

	Params::BTS_Batogon_Perception_C_ExecuteUbergraph_BTS_Batogon_Perception Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.GetPossibleTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Batogon_C*                    Batogon                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>&                  Actors                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ABP_KillableCharacter_C**         Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_Batogon_Perception_C::GetPossibleTarget(class ABP_Batogon_C* Batogon, TArray<class AActor*>& Actors, class ABP_KillableCharacter_C** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_Batogon_Perception_C", "GetPossibleTarget");

	Params::BTS_Batogon_Perception_C_GetPossibleTarget Parms{};

	Parms.Batogon = Batogon;
	Parms.Actors = std::move(Actors);

	UObject::ProcessEvent(Func, &Parms);

	Actors = std::move(Parms.Actors);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.IsPossibleTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Batogon_C*                    Batogon                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_KillableCharacter_C**         Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_Batogon_Perception_C::IsPossibleTarget(class ABP_Batogon_C* Batogon, class AActor* Actor, bool* Result, class ABP_KillableCharacter_C** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_Batogon_Perception_C", "IsPossibleTarget");

	Params::BTS_Batogon_Perception_C_IsPossibleTarget Parms{};

	Parms.Batogon = Batogon;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_Batogon_Perception_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_Batogon_Perception_C", "ReceiveTickAI");

	Params::BTS_Batogon_Perception_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_Batogon_Perception.BTS_Batogon_Perception_C.SetTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KillableCharacter_C*          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_Batogon_Perception_C::SetTarget(class ABP_KillableCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_Batogon_Perception_C", "SetTarget");

	Params::BTS_Batogon_Perception_C_SetTarget Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}

}

