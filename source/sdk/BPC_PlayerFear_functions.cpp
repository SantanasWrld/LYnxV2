#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_PlayerFear

#include "Basic.hpp"

#include "BPC_PlayerFear_classes.hpp"
#include "BPC_PlayerFear_parameters.hpp"


namespace SDK
{

// Function BPC_PlayerFear.BPC_PlayerFear_C.ComponentBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBPC_PlayerFear_C::ComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "ComponentBeginOverlap");

	Params::BPC_PlayerFear_C_ComponentBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.ComponentEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerFear_C::ComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "ComponentEndOverlap");

	Params::BPC_PlayerFear_C_ComponentEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.ExecuteUbergraph_BPC_PlayerFear
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerFear_C::ExecuteUbergraph_BPC_PlayerFear(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "ExecuteUbergraph_BPC_PlayerFear");

	Params::BPC_PlayerFear_C_ExecuteUbergraph_BPC_PlayerFear Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.GetActiveFear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FearPerSecond                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 MinFear                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 MaxFear                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerFear_C::GetActiveFear(bool* Active, double* FearPerSecond, double* MinFear, double* MaxFear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "GetActiveFear");

	Params::BPC_PlayerFear_C_GetActiveFear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;

	if (FearPerSecond != nullptr)
		*FearPerSecond = Parms.FearPerSecond;

	if (MinFear != nullptr)
		*MinFear = Parms.MinFear;

	if (MaxFear != nullptr)
		*MaxFear = Parms.MaxFear;
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.InitAudioComponent
// (BlueprintCallable, BlueprintEvent)

void UBPC_PlayerFear_C::InitAudioComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "InitAudioComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.InitPostProcess
// (BlueprintCallable, BlueprintEvent)

void UBPC_PlayerFear_C::InitPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "InitPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.InstantFear
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MinFear                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerFear_C::InstantFear(double MinFear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "InstantFear");

	Params::BPC_PlayerFear_C_InstantFear Parms{};

	Parms.MinFear = MinFear;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.IsInSight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBPC_FearSource_C*                FearSource                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerFear_C::IsInSight(class UBPC_FearSource_C* FearSource, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "IsInSight");

	Params::BPC_PlayerFear_C_IsInSight Parms{};

	Parms.FearSource = FearSource;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.OnRep_Fear
// (BlueprintCallable, BlueprintEvent)

void UBPC_PlayerFear_C::OnRep_Fear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "OnRep_Fear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPC_PlayerFear_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerFear_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "ReceiveTick");

	Params::BPC_PlayerFear_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.RegisterOverlapEvents
// (BlueprintCallable, BlueprintEvent)

void UBPC_PlayerFear_C::RegisterOverlapEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "RegisterOverlapEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.SetFearSoundEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerFear_C::SetFearSoundEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "SetFearSoundEnabled");

	Params::BPC_PlayerFear_C_SetFearSoundEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.UpdateFearSound
// (BlueprintCallable, BlueprintEvent)

void UBPC_PlayerFear_C::UpdateFearSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "UpdateFearSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PlayerFear.BPC_PlayerFear_C.UpdatePostProcess
// (BlueprintCallable, BlueprintEvent)

void UBPC_PlayerFear_C::UpdatePostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerFear_C", "UpdatePostProcess");

	UObject::ProcessEvent(Func, nullptr);
}

}

