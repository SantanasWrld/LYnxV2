#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Helicopter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_PhysicalActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Helicopter.BP_Helicopter_C
// 0x0058 (0x0390 - 0x0338)
class ABP_Helicopter_C final : public ABP_PhysicalActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Helicopter_C;                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       FireKillingSphere;                                 // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialForceComponent*                  MainCrashForce;                                    // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_ScoringComponent_C*                Scoring;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       MainCrashKillingSphere;                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        CrashImpulseThreshold;                             // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Crashed;                                           // 0x0378(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              CrashSound;                                        // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CrashDamage;                                       // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FireDamage;                                        // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_Helicopter_FireKillingSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Crash__Server_(const struct FVector& Location, double Intensity);
	void ExecuteUbergraph_BP_Helicopter(int32 EntryPoint);
	void Explosion__All_(const struct FVector& Location, double Intensity);
	void MainCrash(const struct FVector& Location);
	void OnRep_Crashed();
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Helicopter_C">();
	}
	static class ABP_Helicopter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Helicopter_C>();
	}
};
static_assert(alignof(ABP_Helicopter_C) == 0x000008, "Wrong alignment on ABP_Helicopter_C");
static_assert(sizeof(ABP_Helicopter_C) == 0x000390, "Wrong size on ABP_Helicopter_C");
static_assert(offsetof(ABP_Helicopter_C, UberGraphFrame_BP_Helicopter_C) == 0x000338, "Member 'ABP_Helicopter_C::UberGraphFrame_BP_Helicopter_C' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, FireKillingSphere) == 0x000340, "Member 'ABP_Helicopter_C::FireKillingSphere' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, MainCrashForce) == 0x000348, "Member 'ABP_Helicopter_C::MainCrashForce' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, ParticleSystem) == 0x000350, "Member 'ABP_Helicopter_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, Scoring) == 0x000358, "Member 'ABP_Helicopter_C::Scoring' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, MainCrashKillingSphere) == 0x000360, "Member 'ABP_Helicopter_C::MainCrashKillingSphere' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, PointLight) == 0x000368, "Member 'ABP_Helicopter_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, CrashImpulseThreshold) == 0x000370, "Member 'ABP_Helicopter_C::CrashImpulseThreshold' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, Crashed) == 0x000378, "Member 'ABP_Helicopter_C::Crashed' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, CrashSound) == 0x000380, "Member 'ABP_Helicopter_C::CrashSound' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, CrashDamage) == 0x000388, "Member 'ABP_Helicopter_C::CrashDamage' has a wrong offset!");
static_assert(offsetof(ABP_Helicopter_C, FireDamage) == 0x00038C, "Member 'ABP_Helicopter_C::FireDamage' has a wrong offset!");

}

