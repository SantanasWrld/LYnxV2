#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Analytics

#include "Basic.hpp"

#include "BFL_Analytics_classes.hpp"
#include "BFL_Analytics_parameters.hpp"


namespace SDK
{

// Function BFL_Analytics.BFL_Analytics_C.AddEventProperties
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBlueprintJsonObject&      InEvent                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// const TMap<class FString, struct FBlueprintJsonValue>&properties                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FBlueprintJsonObject*            OutEvent                                               (Parm, OutParm)

void UBFL_Analytics_C::AddEventProperties(const struct FBlueprintJsonObject& InEvent, const TMap<class FString, struct FBlueprintJsonValue>& properties, class UObject* __WorldContext, struct FBlueprintJsonObject* OutEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFL_Analytics_C", "AddEventProperties");

	Params::BFL_Analytics_C_AddEventProperties Parms{};

	Parms.InEvent = std::move(InEvent);
	Parms.properties = std::move(properties);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (OutEvent != nullptr)
		*OutEvent = std::move(Parms.OutEvent);
}


// Function BFL_Analytics.BFL_Analytics_C.MakeAnalyticsBody
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    ApiKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FBlueprintJsonObject*            Body                                                   (Parm, OutParm)

void UBFL_Analytics_C::MakeAnalyticsBody(const class FString& ApiKey, class UObject* __WorldContext, struct FBlueprintJsonObject* Body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFL_Analytics_C", "MakeAnalyticsBody");

	Params::BFL_Analytics_C_MakeAnalyticsBody Parms{};

	Parms.ApiKey = std::move(ApiKey);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (Body != nullptr)
		*Body = std::move(Parms.Body);
}


// Function BFL_Analytics.BFL_Analytics_C.MakeAnalyticsEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   SessionID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FBlueprintJsonObject*            Event                                                  (Parm, OutParm)

void UBFL_Analytics_C::MakeAnalyticsEvent(const class FString& UserId, const class FString& EventName, int32 SessionID, class UObject* __WorldContext, struct FBlueprintJsonObject* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFL_Analytics_C", "MakeAnalyticsEvent");

	Params::BFL_Analytics_C_MakeAnalyticsEvent Parms{};

	Parms.UserId = std::move(UserId);
	Parms.EventName = std::move(EventName);
	Parms.SessionID = SessionID;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (Event != nullptr)
		*Event = std::move(Parms.Event);
}


// Function BFL_Analytics.BFL_Analytics_C.MakeIntEventProperty
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TMap<class FString, struct FBlueprintJsonValue>*properties                                             (Parm, OutParm)

void UBFL_Analytics_C::MakeIntEventProperty(const class FString& Key, int32 Value, class UObject* __WorldContext, TMap<class FString, struct FBlueprintJsonValue>* properties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFL_Analytics_C", "MakeIntEventProperty");

	Params::BFL_Analytics_C_MakeIntEventProperty Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (properties != nullptr)
		*properties = std::move(Parms.properties);
}


// Function BFL_Analytics.BFL_Analytics_C.MakeStringEventProperty
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TMap<class FString, struct FBlueprintJsonValue>*properties                                             (Parm, OutParm)

void UBFL_Analytics_C::MakeStringEventProperty(const class FString& Key, const class FString& Value, class UObject* __WorldContext, TMap<class FString, struct FBlueprintJsonValue>* properties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFL_Analytics_C", "MakeStringEventProperty");

	Params::BFL_Analytics_C_MakeStringEventProperty Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (properties != nullptr)
		*properties = std::move(Parms.properties);
}

}

