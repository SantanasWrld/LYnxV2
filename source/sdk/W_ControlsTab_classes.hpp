#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ControlsTab

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ControlsTab.W_ControlsTab_C
// 0x00E8 (0x03A8 - 0x02C0)
class UW_ControlsTab_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           BindingsParent;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                BlackBackground;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ControllerBtn;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              InvertMouseXCheckBox;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              InvertMouseYCheckBox;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                KeyboardBtn;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ResetBtn;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                SensitivitySlider;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SensitivityValue;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WindowBackground;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MainMenu_C*                          MainMenu;                                          // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   GameInstance;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerController_C*               PlayerController;                                  // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputUserSettings*             UserInputSettings;                                 // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UInputMappingContext*>           InputMappingContexts;                              // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UW_InputBinding_C*>              InputBindingWidgets;                               // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSet<class UInputAction*>                     IgnoredInputActions;                               // 0x0358(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__W_ControlsTab_BlackBackground_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_ControlsTab_ControllerBtn_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_ControlsTab_InvertMouseXCheckBox_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__W_ControlsTab_InvertMouseYCheckBox_K2Node_ComponentBoundEvent_6_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__W_ControlsTab_KeyboardBtn_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_ControlsTab_ResetBtn_K2Node_ComponentBoundEvent_4_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_ControlsTab_SensitivitySlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void ClearBindingWidgets();
	void ExecuteUbergraph_W_ControlsTab(int32 EntryPoint);
	void InitBindings();
	void InitUserInputSettings();
	void InputBindingChanged(class UW_InputBinding_C* BindingWidget, const struct FInputChord& Input);
	void IsBindingRevelant(const struct FEnhancedActionKeyMapping& KeyMapping, bool IsController, bool* Result);
	void MainMenuDisplayed();
	void RefreshBindingWidgets(bool IsController);
	void SaveBindings();
	void TabDisplayed();
	void TabFocus();
	void TabHidden();
	void TabInit(class UW_MainMenu_C* MainMenu_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ControlsTab_C">();
	}
	static class UW_ControlsTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ControlsTab_C>();
	}
};
static_assert(alignof(UW_ControlsTab_C) == 0x000008, "Wrong alignment on UW_ControlsTab_C");
static_assert(sizeof(UW_ControlsTab_C) == 0x0003A8, "Wrong size on UW_ControlsTab_C");
static_assert(offsetof(UW_ControlsTab_C, UberGraphFrame) == 0x0002C0, "Member 'UW_ControlsTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, BindingsParent) == 0x0002C8, "Member 'UW_ControlsTab_C::BindingsParent' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, BlackBackground) == 0x0002D0, "Member 'UW_ControlsTab_C::BlackBackground' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, ControllerBtn) == 0x0002D8, "Member 'UW_ControlsTab_C::ControllerBtn' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, InvertMouseXCheckBox) == 0x0002E0, "Member 'UW_ControlsTab_C::InvertMouseXCheckBox' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, InvertMouseYCheckBox) == 0x0002E8, "Member 'UW_ControlsTab_C::InvertMouseYCheckBox' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, KeyboardBtn) == 0x0002F0, "Member 'UW_ControlsTab_C::KeyboardBtn' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, ResetBtn) == 0x0002F8, "Member 'UW_ControlsTab_C::ResetBtn' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, SensitivitySlider) == 0x000300, "Member 'UW_ControlsTab_C::SensitivitySlider' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, SensitivityValue) == 0x000308, "Member 'UW_ControlsTab_C::SensitivityValue' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, WindowBackground) == 0x000310, "Member 'UW_ControlsTab_C::WindowBackground' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, MainMenu) == 0x000318, "Member 'UW_ControlsTab_C::MainMenu' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, GameInstance) == 0x000320, "Member 'UW_ControlsTab_C::GameInstance' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, PlayerController) == 0x000328, "Member 'UW_ControlsTab_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, UserInputSettings) == 0x000330, "Member 'UW_ControlsTab_C::UserInputSettings' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, InputMappingContexts) == 0x000338, "Member 'UW_ControlsTab_C::InputMappingContexts' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, InputBindingWidgets) == 0x000348, "Member 'UW_ControlsTab_C::InputBindingWidgets' has a wrong offset!");
static_assert(offsetof(UW_ControlsTab_C, IgnoredInputActions) == 0x000358, "Member 'UW_ControlsTab_C::IgnoredInputActions' has a wrong offset!");

}

