#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableScreen

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_InteractableScreen.BP_InteractableScreen_C.Interacted
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableScreen_C_Interacted final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableScreen_C_Interacted) == 0x000008, "Wrong alignment on BP_InteractableScreen_C_Interacted");
static_assert(sizeof(BP_InteractableScreen_C_Interacted) == 0x000008, "Wrong size on BP_InteractableScreen_C_Interacted");
static_assert(offsetof(BP_InteractableScreen_C_Interacted, Player) == 0x000000, "Member 'BP_InteractableScreen_C_Interacted::Player' has a wrong offset!");

// Function BP_InteractableScreen.BP_InteractableScreen_C.Interact
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractableScreen_C_Interact final
{
public:
	class ABP_UPPlayerCharacter_C*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableScreen_C_Interact) == 0x000008, "Wrong alignment on BP_InteractableScreen_C_Interact");
static_assert(sizeof(BP_InteractableScreen_C_Interact) == 0x000008, "Wrong size on BP_InteractableScreen_C_Interact");
static_assert(offsetof(BP_InteractableScreen_C_Interact, Player) == 0x000000, "Member 'BP_InteractableScreen_C_Interact::Player' has a wrong offset!");

// Function BP_InteractableScreen.BP_InteractableScreen_C.GetInteractDistance
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableScreen_C_GetInteractDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInteractDistance_Distance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableScreen_C_GetInteractDistance) == 0x000008, "Wrong alignment on BP_InteractableScreen_C_GetInteractDistance");
static_assert(sizeof(BP_InteractableScreen_C_GetInteractDistance) == 0x000018, "Wrong size on BP_InteractableScreen_C_GetInteractDistance");
static_assert(offsetof(BP_InteractableScreen_C_GetInteractDistance, Distance) == 0x000000, "Member 'BP_InteractableScreen_C_GetInteractDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_InteractableScreen_C_GetInteractDistance, CallFunc_GetInteractDistance_Distance) == 0x000008, "Member 'BP_InteractableScreen_C_GetInteractDistance::CallFunc_GetInteractDistance_Distance' has a wrong offset!");
static_assert(offsetof(BP_InteractableScreen_C_GetInteractDistance, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_InteractableScreen_C_GetInteractDistance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_InteractableScreen.BP_InteractableScreen_C.ExecuteUbergraph_BP_InteractableScreen
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_CustomEvent_Player;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UPPlayerCharacter_C*                K2Node_Event_Player;                               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen) == 0x000008, "Wrong alignment on BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen");
static_assert(sizeof(BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen) == 0x000018, "Wrong size on BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen");
static_assert(offsetof(BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen, EntryPoint) == 0x000000, "Member 'BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen, K2Node_CustomEvent_Player) == 0x000008, "Member 'BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen, K2Node_Event_Player) == 0x000010, "Member 'BP_InteractableScreen_C_ExecuteUbergraph_BP_InteractableScreen::K2Node_Event_Player' has a wrong offset!");

}

