#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Rocket

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Rocket.BP_Rocket_C.SpawnExplosion
// 0x00F0 (0x00F0 - 0x0000)
struct BP_Rocket_C_SpawnExplosion final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Rocket_C_SpawnExplosion) == 0x000010, "Wrong alignment on BP_Rocket_C_SpawnExplosion");
static_assert(sizeof(BP_Rocket_C_SpawnExplosion) == 0x0000F0, "Wrong size on BP_Rocket_C_SpawnExplosion");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, HitActor) == 0x000000, "Member 'BP_Rocket_C_SpawnExplosion::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, HitLocation) == 0x000008, "Member 'BP_Rocket_C_SpawnExplosion::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, HitNormal) == 0x000020, "Member 'BP_Rocket_C_SpawnExplosion::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000038, "Member 'BP_Rocket_C_SpawnExplosion::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'BP_Rocket_C_SpawnExplosion::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_Rocket_C_SpawnExplosion::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, CallFunc_Contains_ReturnValue) == 0x0000C0, "Member 'BP_Rocket_C_SpawnExplosion::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C8, "Member 'BP_Rocket_C_SpawnExplosion::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D0, "Member 'BP_Rocket_C_SpawnExplosion::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000D8, "Member 'BP_Rocket_C_SpawnExplosion::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_SpawnExplosion, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000E0, "Member 'BP_Rocket_C_SpawnExplosion::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function BP_Rocket.BP_Rocket_C.ReceiveHit
// 0x0150 (0x0150 - 0x0000)
struct BP_Rocket_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Rocket_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_Rocket_C_ReceiveHit");
static_assert(sizeof(BP_Rocket_C_ReceiveHit) == 0x000150, "Wrong size on BP_Rocket_C_ReceiveHit");
static_assert(offsetof(BP_Rocket_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_Rocket_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ReceiveHit, Other) == 0x000008, "Member 'BP_Rocket_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_Rocket_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_Rocket_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ReceiveHit, HitLocation) == 0x000020, "Member 'BP_Rocket_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ReceiveHit, HitNormal) == 0x000038, "Member 'BP_Rocket_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'BP_Rocket_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ReceiveHit, Hit) == 0x000068, "Member 'BP_Rocket_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_Rocket.BP_Rocket_C.ExecuteUbergraph_BP_Rocket
// 0x0158 (0x0158 - 0x0000)
struct BP_Rocket_C_ExecuteUbergraph_BP_Rocket final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0070(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket) == 0x000008, "Wrong alignment on BP_Rocket_C_ExecuteUbergraph_BP_Rocket");
static_assert(sizeof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket) == 0x000158, "Wrong size on BP_Rocket_C_ExecuteUbergraph_BP_Rocket");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, EntryPoint) == 0x000000, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_MyComp) == 0x000008, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_Other) == 0x000010, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_OtherComp) == 0x000018, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_bSelfMoved) == 0x000020, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_HitLocation) == 0x000028, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_HitNormal) == 0x000040, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_NormalImpulse) == 0x000058, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_Hit) == 0x000070, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_Hit' has a wrong offset!");

}

