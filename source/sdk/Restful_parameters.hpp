#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Restful

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Restful.RestfulFunctionLibrary.SendRestfulRequest
// 0x0110 (0x0110 - 0x0000)
struct RestfulFunctionLibrary_SendRestfulRequest final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 verb;                                              // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Content;                                           // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            headers;                                           // 0x0040(0x0050)(Parm, NativeAccessSpecifierPublic)
	float                                         Timeout;                                           // 0x0090(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResponseCode;                                      // 0x0094(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            responseHeaders;                                   // 0x00A8(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x00F8(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RestfulFunctionLibrary_SendRestfulRequest) == 0x000008, "Wrong alignment on RestfulFunctionLibrary_SendRestfulRequest");
static_assert(sizeof(RestfulFunctionLibrary_SendRestfulRequest) == 0x000110, "Wrong size on RestfulFunctionLibrary_SendRestfulRequest");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, WorldContextObject) == 0x000000, "Member 'RestfulFunctionLibrary_SendRestfulRequest::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, Success) == 0x000008, "Member 'RestfulFunctionLibrary_SendRestfulRequest::Success' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, URL) == 0x000010, "Member 'RestfulFunctionLibrary_SendRestfulRequest::URL' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, verb) == 0x000020, "Member 'RestfulFunctionLibrary_SendRestfulRequest::verb' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, Content) == 0x000030, "Member 'RestfulFunctionLibrary_SendRestfulRequest::Content' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, headers) == 0x000040, "Member 'RestfulFunctionLibrary_SendRestfulRequest::headers' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, Timeout) == 0x000090, "Member 'RestfulFunctionLibrary_SendRestfulRequest::Timeout' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, ResponseCode) == 0x000094, "Member 'RestfulFunctionLibrary_SendRestfulRequest::ResponseCode' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, Data) == 0x000098, "Member 'RestfulFunctionLibrary_SendRestfulRequest::Data' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, responseHeaders) == 0x0000A8, "Member 'RestfulFunctionLibrary_SendRestfulRequest::responseHeaders' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulRequest, LatentInfo) == 0x0000F8, "Member 'RestfulFunctionLibrary_SendRestfulRequest::LatentInfo' has a wrong offset!");

// Function Restful.RestfulFunctionLibrary.SendRestfulWithFileRequest
// 0x0110 (0x0110 - 0x0000)
struct RestfulFunctionLibrary_SendRestfulWithFileRequest final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 verb;                                              // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            headers;                                           // 0x0040(0x0050)(Parm, NativeAccessSpecifierPublic)
	float                                         Timeout;                                           // 0x0090(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResponseCode;                                      // 0x0094(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            responseHeaders;                                   // 0x00A8(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x00F8(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RestfulFunctionLibrary_SendRestfulWithFileRequest) == 0x000008, "Wrong alignment on RestfulFunctionLibrary_SendRestfulWithFileRequest");
static_assert(sizeof(RestfulFunctionLibrary_SendRestfulWithFileRequest) == 0x000110, "Wrong size on RestfulFunctionLibrary_SendRestfulWithFileRequest");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, WorldContextObject) == 0x000000, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, Success) == 0x000008, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::Success' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, URL) == 0x000010, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::URL' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, verb) == 0x000020, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::verb' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, Filename) == 0x000030, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::Filename' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, headers) == 0x000040, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::headers' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, Timeout) == 0x000090, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::Timeout' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, ResponseCode) == 0x000094, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::ResponseCode' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, Data) == 0x000098, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::Data' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, responseHeaders) == 0x0000A8, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::responseHeaders' has a wrong offset!");
static_assert(offsetof(RestfulFunctionLibrary_SendRestfulWithFileRequest, LatentInfo) == 0x0000F8, "Member 'RestfulFunctionLibrary_SendRestfulWithFileRequest::LatentInfo' has a wrong offset!");

}

