#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UPPlayerCameraManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_UPPlayerCameraManager.BP_UPPlayerCameraManager_C.ExecuteUbergraph_BP_UPPlayerCameraManager
// 0x000C (0x000C - 0x0000)
struct BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_View_Pitch_Min;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_View_Pitch_Max;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager) == 0x000004, "Wrong alignment on BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager");
static_assert(sizeof(BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager) == 0x00000C, "Wrong size on BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager");
static_assert(offsetof(BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager, EntryPoint) == 0x000000, "Member 'BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager, K2Node_CustomEvent_View_Pitch_Min) == 0x000004, "Member 'BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager::K2Node_CustomEvent_View_Pitch_Min' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager, K2Node_CustomEvent_View_Pitch_Max) == 0x000008, "Member 'BP_UPPlayerCameraManager_C_ExecuteUbergraph_BP_UPPlayerCameraManager::K2Node_CustomEvent_View_Pitch_Max' has a wrong offset!");

// Function BP_UPPlayerCameraManager.BP_UPPlayerCameraManager_C.OverrideViewPitchLimits
// 0x0008 (0x0008 - 0x0000)
struct BP_UPPlayerCameraManager_C_OverrideViewPitchLimits final
{
public:
	float                                         View_Pitch_Min;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         View_Pitch_Max;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UPPlayerCameraManager_C_OverrideViewPitchLimits) == 0x000004, "Wrong alignment on BP_UPPlayerCameraManager_C_OverrideViewPitchLimits");
static_assert(sizeof(BP_UPPlayerCameraManager_C_OverrideViewPitchLimits) == 0x000008, "Wrong size on BP_UPPlayerCameraManager_C_OverrideViewPitchLimits");
static_assert(offsetof(BP_UPPlayerCameraManager_C_OverrideViewPitchLimits, View_Pitch_Min) == 0x000000, "Member 'BP_UPPlayerCameraManager_C_OverrideViewPitchLimits::View_Pitch_Min' has a wrong offset!");
static_assert(offsetof(BP_UPPlayerCameraManager_C_OverrideViewPitchLimits, View_Pitch_Max) == 0x000004, "Member 'BP_UPPlayerCameraManager_C_OverrideViewPitchLimits::View_Pitch_Max' has a wrong offset!");

}

