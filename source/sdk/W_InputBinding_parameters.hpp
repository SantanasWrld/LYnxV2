#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InputBinding

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function W_InputBinding.W_InputBinding_C.ExecuteUbergraph_W_InputBinding
// 0x0110 (0x0110 - 0x0000)
struct W_InputBinding_C_ExecuteUbergraph_W_InputBinding final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerMappableKeySettings*             CallFunc_GetPlayerMappableKeySettings_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            K2Node_CustomEvent_SelectedKey;                    // 0x0010(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputUserSettings*             K2Node_CustomEvent_UserInputSettings;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              K2Node_CustomEvent_KeyMapping;                     // 0x0040(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsController;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            CallFunc_GetCurrentKey_InputChord;                 // 0x0098(0x0020)(HasGetValueTypeHash)
	TDelegate<void(const struct FInputChord& SelectedKey)> K2Node_CreateDelegate_OutputDelegate;     // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            CallFunc_GetDefaultKey_InputChord;                 // 0x00D0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            CallFunc_GetDefaultKey_InputChord_1;               // 0x00F0(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding) == 0x000008, "Wrong alignment on W_InputBinding_C_ExecuteUbergraph_W_InputBinding");
static_assert(sizeof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding) == 0x000110, "Wrong size on W_InputBinding_C_ExecuteUbergraph_W_InputBinding");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, EntryPoint) == 0x000000, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, CallFunc_GetPlayerMappableKeySettings_ReturnValue) == 0x000008, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::CallFunc_GetPlayerMappableKeySettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, K2Node_CustomEvent_SelectedKey) == 0x000010, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::K2Node_CustomEvent_SelectedKey' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000030, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, K2Node_CustomEvent_UserInputSettings) == 0x000038, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::K2Node_CustomEvent_UserInputSettings' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, K2Node_CustomEvent_KeyMapping) == 0x000040, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::K2Node_CustomEvent_KeyMapping' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, K2Node_CustomEvent_IsController) == 0x000090, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::K2Node_CustomEvent_IsController' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, CallFunc_GetCurrentKey_InputChord) == 0x000098, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::CallFunc_GetCurrentKey_InputChord' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000C8, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, CallFunc_GetDefaultKey_InputChord) == 0x0000D0, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::CallFunc_GetDefaultKey_InputChord' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_ExecuteUbergraph_W_InputBinding, CallFunc_GetDefaultKey_InputChord_1) == 0x0000F0, "Member 'W_InputBinding_C_ExecuteUbergraph_W_InputBinding::CallFunc_GetDefaultKey_InputChord_1' has a wrong offset!");

// Function W_InputBinding.W_InputBinding_C.GetCurrentKey
// 0x0120 (0x0120 - 0x0000)
struct W_InputBinding_C_GetCurrentKey final
{
public:
	struct FInputChord                            InputChord;                                        // 0x0000(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMappingName_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedPlayerMappableKeyProfile*      CallFunc_GetCurrentKeyProfile_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMapPlayerKeyArgs                      K2Node_MakeStruct_MapPlayerKeyArgs;                // 0x0030(0x0040)()
	struct FPlayerKeyMapping                      CallFunc_K2_FindKeyMapping_OutKeyMapping;          // 0x0070(0x0090)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0100(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(W_InputBinding_C_GetCurrentKey) == 0x000008, "Wrong alignment on W_InputBinding_C_GetCurrentKey");
static_assert(sizeof(W_InputBinding_C_GetCurrentKey) == 0x000120, "Wrong size on W_InputBinding_C_GetCurrentKey");
static_assert(offsetof(W_InputBinding_C_GetCurrentKey, InputChord) == 0x000000, "Member 'W_InputBinding_C_GetCurrentKey::InputChord' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_GetCurrentKey, CallFunc_GetMappingName_ReturnValue) == 0x000020, "Member 'W_InputBinding_C_GetCurrentKey::CallFunc_GetMappingName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_GetCurrentKey, CallFunc_GetCurrentKeyProfile_ReturnValue) == 0x000028, "Member 'W_InputBinding_C_GetCurrentKey::CallFunc_GetCurrentKeyProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_GetCurrentKey, K2Node_MakeStruct_MapPlayerKeyArgs) == 0x000030, "Member 'W_InputBinding_C_GetCurrentKey::K2Node_MakeStruct_MapPlayerKeyArgs' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_GetCurrentKey, CallFunc_K2_FindKeyMapping_OutKeyMapping) == 0x000070, "Member 'W_InputBinding_C_GetCurrentKey::CallFunc_K2_FindKeyMapping_OutKeyMapping' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_GetCurrentKey, K2Node_MakeStruct_InputChord) == 0x000100, "Member 'W_InputBinding_C_GetCurrentKey::K2Node_MakeStruct_InputChord' has a wrong offset!");

// Function W_InputBinding.W_InputBinding_C.GetDefaultKey
// 0x0040 (0x0040 - 0x0000)
struct W_InputBinding_C_GetDefaultKey final
{
public:
	struct FInputChord                            InputChord;                                        // 0x0000(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0020(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(W_InputBinding_C_GetDefaultKey) == 0x000008, "Wrong alignment on W_InputBinding_C_GetDefaultKey");
static_assert(sizeof(W_InputBinding_C_GetDefaultKey) == 0x000040, "Wrong size on W_InputBinding_C_GetDefaultKey");
static_assert(offsetof(W_InputBinding_C_GetDefaultKey, InputChord) == 0x000000, "Member 'W_InputBinding_C_GetDefaultKey::InputChord' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_GetDefaultKey, K2Node_MakeStruct_InputChord) == 0x000020, "Member 'W_InputBinding_C_GetDefaultKey::K2Node_MakeStruct_InputChord' has a wrong offset!");

// Function W_InputBinding.W_InputBinding_C.InitInputBinding
// 0x0060 (0x0060 - 0x0000)
struct W_InputBinding_C_InitInputBinding final
{
public:
	class UEnhancedInputUserSettings*             UserInputSettings_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              KeyMapping_0;                                      // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          IsController;                                      // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InputBinding_C_InitInputBinding) == 0x000008, "Wrong alignment on W_InputBinding_C_InitInputBinding");
static_assert(sizeof(W_InputBinding_C_InitInputBinding) == 0x000060, "Wrong size on W_InputBinding_C_InitInputBinding");
static_assert(offsetof(W_InputBinding_C_InitInputBinding, UserInputSettings_0) == 0x000000, "Member 'W_InputBinding_C_InitInputBinding::UserInputSettings_0' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_InitInputBinding, KeyMapping_0) == 0x000008, "Member 'W_InputBinding_C_InitInputBinding::KeyMapping_0' has a wrong offset!");
static_assert(offsetof(W_InputBinding_C_InitInputBinding, IsController) == 0x000058, "Member 'W_InputBinding_C_InitInputBinding::IsController' has a wrong offset!");

// Function W_InputBinding.W_InputBinding_C.InputKeySelected
// 0x0020 (0x0020 - 0x0000)
struct W_InputBinding_C_InputKeySelected final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_InputBinding_C_InputKeySelected) == 0x000008, "Wrong alignment on W_InputBinding_C_InputKeySelected");
static_assert(sizeof(W_InputBinding_C_InputKeySelected) == 0x000020, "Wrong size on W_InputBinding_C_InputKeySelected");
static_assert(offsetof(W_InputBinding_C_InputKeySelected, SelectedKey) == 0x000000, "Member 'W_InputBinding_C_InputKeySelected::SelectedKey' has a wrong offset!");

}

