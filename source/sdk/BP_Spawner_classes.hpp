#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Spawner

#include "Basic.hpp"

#include "E_SpawnContext_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_Spawnable_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Spawner.BP_Spawner_C
// 0x0048 (0x02E0 - 0x0298)
class ABP_Spawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_PlayersProximity_C*                PlayersProximity;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Placeholder;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_SpawnContext                                Context;                                           // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_Spawnable>                           Spawnables;                                        // 0x02C8(0x0010)(Edit, BlueprintVisible)
	bool                                          ForceSpawn;                                        // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlaceholderPreview;                                // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsed;                                            // 0x02DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DestroyPlaceholder();
	void ExecuteUbergraph_BP_Spawner(int32 EntryPoint);
	void GetSpawnTransform(E_Spawnable Spawnable, struct FTransform* SpawnTransform);
	void ReceiveBeginPlay();
	void SetDefaultPlaceholder();
	void UpdatePlaceholder();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Spawner_C">();
	}
	static class ABP_Spawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Spawner_C>();
	}
};
static_assert(alignof(ABP_Spawner_C) == 0x000008, "Wrong alignment on ABP_Spawner_C");
static_assert(sizeof(ABP_Spawner_C) == 0x0002E0, "Wrong size on ABP_Spawner_C");
static_assert(offsetof(ABP_Spawner_C, UberGraphFrame) == 0x000298, "Member 'ABP_Spawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, PlayersProximity) == 0x0002A0, "Member 'ABP_Spawner_C::PlayersProximity' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, Placeholder) == 0x0002A8, "Member 'ABP_Spawner_C::Placeholder' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, Arrow) == 0x0002B0, "Member 'ABP_Spawner_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_Spawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, Context) == 0x0002C0, "Member 'ABP_Spawner_C::Context' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, Spawnables) == 0x0002C8, "Member 'ABP_Spawner_C::Spawnables' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, ForceSpawn) == 0x0002D8, "Member 'ABP_Spawner_C::ForceSpawn' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, PlaceholderPreview) == 0x0002D9, "Member 'ABP_Spawner_C::PlaceholderPreview' has a wrong offset!");
static_assert(offsetof(ABP_Spawner_C, IsUsed) == 0x0002DA, "Member 'ABP_Spawner_C::IsUsed' has a wrong offset!");

}

