#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractableDoor

#include "Basic.hpp"

#include "BP_InteractableDoor_classes.hpp"
#include "BP_InteractableDoor_parameters.hpp"


namespace SDK
{

// Function BP_InteractableDoor.BP_InteractableDoor_C.Close
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.DestroyBridge
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::DestroyBridge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "DestroyBridge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.DestroyDoor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Origin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableDoor_C::DestroyDoor(const struct FVector& Origin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "DestroyDoor");

	Params::BP_InteractableDoor_C_DestroyDoor Parms{};

	Parms.Origin = std::move(Origin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.EndClosingFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::EndClosingFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "EndClosingFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.EndOpeningFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::EndOpeningFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "EndOpeningFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.ExecuteUbergraph_BP_InteractableDoor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableDoor_C::ExecuteUbergraph_BP_InteractableDoor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "ExecuteUbergraph_BP_InteractableDoor");

	Params::BP_InteractableDoor_C_ExecuteUbergraph_BP_InteractableDoor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.GetDoorMeshes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UStaticMeshComponent*>*    Meshes                                                 (Parm, OutParm, ContainsInstancedReference)

void ABP_InteractableDoor_C::GetDoorMeshes(TArray<class UStaticMeshComponent*>* Meshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "GetDoorMeshes");

	Params::BP_InteractableDoor_C_GetDoorMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Meshes != nullptr)
		*Meshes = std::move(Parms.Meshes);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.GetInteractText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            Text                                                   (Parm, OutParm)

void ABP_InteractableDoor_C::GetInteractText(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "GetInteractText");

	Params::BP_InteractableDoor_C_GetInteractText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.GetOpeningSide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   OpeningSide_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableDoor_C::GetOpeningSide(class AActor* Interactor, bool* OpeningSide_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "GetOpeningSide");

	Params::BP_InteractableDoor_C_GetOpeningSide Parms{};

	Parms.Interactor = Interactor;

	UObject::ProcessEvent(Func, &Parms);

	if (OpeningSide_0 != nullptr)
		*OpeningSide_0 = Parms.OpeningSide_0;
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UPPlayerCharacter_C*          Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableDoor_C::Interact(class ABP_UPPlayerCharacter_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "Interact");

	Params::BP_InteractableDoor_C_Interact Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.IsOpen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Open                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableDoor_C::IsOpen(bool* Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "IsOpen");

	Params::BP_InteractableDoor_C_IsOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Open != nullptr)
		*Open = Parms.Open;
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.OnRep_IsBroken
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::OnRep_IsBroken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "OnRep_IsBroken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.OnRep_IsClosed
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::OnRep_IsClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "OnRep_IsClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.Open
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_InteractableDoor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.SpawnBridge
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           BridgeClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableDoor_C::SpawnBridge(class UClass* BridgeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "SpawnBridge");

	Params::BP_InteractableDoor_C_SpawnBridge Parms{};

	Parms.BridgeClass = BridgeClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.StartClosingFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::StartClosingFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "StartClosingFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.StartCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::StartCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "StartCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.StartOpeningFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::StartOpeningFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "StartOpeningFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.Timeline_OpenDoor__FinishedFunc
// (BlueprintEvent)

void ABP_InteractableDoor_C::Timeline_OpenDoor__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "Timeline_OpenDoor__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.Timeline_OpenDoor__UpdateFunc
// (BlueprintEvent)

void ABP_InteractableDoor_C::Timeline_OpenDoor__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "Timeline_OpenDoor__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.ToggleState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableDoor_C::ToggleState(class AActor* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "ToggleState");

	Params::BP_InteractableDoor_C_ToggleState Parms{};

	Parms.Interactor = Interactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.UpdateBridge
// (BlueprintCallable, BlueprintEvent)

void ABP_InteractableDoor_C::UpdateBridge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "UpdateBridge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractableDoor.BP_InteractableDoor_C.UpdateDoor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  OpenProgress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractableDoor_C::UpdateDoor(double OpenProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractableDoor_C", "UpdateDoor");

	Params::BP_InteractableDoor_C_UpdateDoor Parms{};

	Parms.OpenProgress = OpenProgress;

	UObject::ProcessEvent(Func, &Parms);
}

}

