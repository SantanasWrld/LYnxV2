#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteriorVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_InteriorVolume.BP_InteriorVolume_C.BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_InteriorVolume_C_BndEvt__BP_InteriorVolume_Volume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.ExecuteUbergraph_BP_InteriorVolume
// 0x0358 (0x0358 - 0x0000)
struct BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_InteriorModuleConnection_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_InteriorModuleConnection_C*         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVolume_Result;                        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVolume_Result_1;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsInInterior_2;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Fog_Session_C*                      CallFunc_GetFog_Fog;                               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsInInterior_1;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsInInterior;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3[0x5];                                      // 0x01C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x01E8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character;        // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                K2Node_DynamicCast_AsBP_UPPlayer_Character_1;      // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_IsNotEmpty_ReturnValue;               // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UPGameInstance_C*                   CallFunc_GetGameInstance_GameInstance;             // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UPPlayerCharacter_C*                CallFunc_Array_Get_Item_1;                         // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVolume_Result_2;                      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume) == 0x000008, "Wrong alignment on BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume");
static_assert(sizeof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume) == 0x000358, "Wrong size on BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, EntryPoint) == 0x000000, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_Event_DeltaSeconds) == 0x000040, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_IsInVolume_Result) == 0x000044, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_IsInVolume_Result' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_GetPlayerPawn_ReturnValue) == 0x000048, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_IsInVolume_Result_1) == 0x000070, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_IsInVolume_Result_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_CustomEvent_IsInInterior_2) == 0x000071, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_CustomEvent_IsInInterior_2' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_GetFog_Fog) == 0x000078, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_GetFog_Fog' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000088, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_HasAuthority_ReturnValue) == 0x0000A4, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Less_IntInt_ReturnValue) == 0x0000A5, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_CustomEvent_IsInInterior_1) == 0x0000AC, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_CustomEvent_IsInInterior_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_SelectVector_ReturnValue) == 0x0000B0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000D0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001B8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001BC, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_CustomEvent_IsInInterior) == 0x0001C0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_CustomEvent_IsInInterior' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_HasAuthority_ReturnValue_1) == 0x0001C1, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_IsValid_ReturnValue_2) == 0x0001C2, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0001C8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0001D0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0001D8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0001E0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x0001E4, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x0001E8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_DynamicCast_AsBP_UPPlayer_Character) == 0x0002D0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_DynamicCast_AsBP_UPPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_DynamicCast_bSuccess) == 0x0002D8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0002E0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x0002E8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x0002F0, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002F8, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_DynamicCast_AsBP_UPPlayer_Character_1) == 0x000300, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_DynamicCast_AsBP_UPPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, K2Node_DynamicCast_bSuccess_1) == 0x000308, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Set_IsNotEmpty_ReturnValue) == 0x000309, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Set_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_GetGameInstance_GameInstance) == 0x000310, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_GetGameInstance_GameInstance' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Array_Length_ReturnValue_1) == 0x000318, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, Temp_int_Array_Index_Variable_1) == 0x00031C, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Less_IntInt_ReturnValue_1) == 0x000320, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Array_Get_Item_1) == 0x000328, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_Set_Remove_ReturnValue) == 0x000330, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000338, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume, CallFunc_IsInVolume_Result_2) == 0x000350, "Member 'BP_InteriorVolume_C_ExecuteUbergraph_BP_InteriorVolume::CallFunc_IsInVolume_Result_2' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.GetFog
// 0x0018 (0x0018 - 0x0000)
struct BP_InteriorVolume_C_GetFog final
{
public:
	class ABP_Fog_Session_C*                      Fog_0;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Fog_Session_C*                      CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_GetFog) == 0x000008, "Wrong alignment on BP_InteriorVolume_C_GetFog");
static_assert(sizeof(BP_InteriorVolume_C_GetFog) == 0x000018, "Wrong size on BP_InteriorVolume_C_GetFog");
static_assert(offsetof(BP_InteriorVolume_C_GetFog, Fog_0) == 0x000000, "Member 'BP_InteriorVolume_C_GetFog::Fog_0' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_GetFog, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BP_InteriorVolume_C_GetFog::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_GetFog, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_InteriorVolume_C_GetFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.GetGameInstance
// 0x0020 (0x0020 - 0x0000)
struct BP_InteriorVolume_C_GetGameInstance final
{
public:
	class UBP_UPGameInstance_C*                   GameInstance_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UPGameInstance_C*                   K2Node_DynamicCast_AsBP_UPGame_Instance;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_GetGameInstance) == 0x000008, "Wrong alignment on BP_InteriorVolume_C_GetGameInstance");
static_assert(sizeof(BP_InteriorVolume_C_GetGameInstance) == 0x000020, "Wrong size on BP_InteriorVolume_C_GetGameInstance");
static_assert(offsetof(BP_InteriorVolume_C_GetGameInstance, GameInstance_0) == 0x000000, "Member 'BP_InteriorVolume_C_GetGameInstance::GameInstance_0' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_GetGameInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_InteriorVolume_C_GetGameInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_GetGameInstance, K2Node_DynamicCast_AsBP_UPGame_Instance) == 0x000010, "Member 'BP_InteriorVolume_C_GetGameInstance::K2Node_DynamicCast_AsBP_UPGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_GetGameInstance, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_InteriorVolume_C_GetGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_GetGameInstance, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_InteriorVolume_C_GetGameInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.IsInVolume
// 0x0058 (0x0058 - 0x0000)
struct BP_InteriorVolume_C_IsInVolume final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_IsInVolume) == 0x000008, "Wrong alignment on BP_InteriorVolume_C_IsInVolume");
static_assert(sizeof(BP_InteriorVolume_C_IsInVolume) == 0x000058, "Wrong size on BP_InteriorVolume_C_IsInVolume");
static_assert(offsetof(BP_InteriorVolume_C_IsInVolume, Location) == 0x000000, "Member 'BP_InteriorVolume_C_IsInVolume::Location' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_IsInVolume, Result) == 0x000018, "Member 'BP_InteriorVolume_C_IsInVolume::Result' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_IsInVolume, CallFunc_GetComponentBounds_Origin) == 0x000020, "Member 'BP_InteriorVolume_C_IsInVolume::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_IsInVolume, CallFunc_GetComponentBounds_BoxExtent) == 0x000038, "Member 'BP_InteriorVolume_C_IsInVolume::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_IsInVolume, CallFunc_GetComponentBounds_SphereRadius) == 0x000050, "Member 'BP_InteriorVolume_C_IsInVolume::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_InteriorVolume_C_IsInVolume, CallFunc_IsPointInBox_ReturnValue) == 0x000054, "Member 'BP_InteriorVolume_C_IsInVolume::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_InteriorVolume_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_InteriorVolume_C_ReceiveTick");
static_assert(sizeof(BP_InteriorVolume_C_ReceiveTick) == 0x000004, "Wrong size on BP_InteriorVolume_C_ReceiveTick");
static_assert(offsetof(BP_InteriorVolume_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_InteriorVolume_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.SetLocalPlayerIsInInterior
// 0x0001 (0x0001 - 0x0000)
struct BP_InteriorVolume_C_SetLocalPlayerIsInInterior final
{
public:
	bool                                          IsInInterior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_SetLocalPlayerIsInInterior) == 0x000001, "Wrong alignment on BP_InteriorVolume_C_SetLocalPlayerIsInInterior");
static_assert(sizeof(BP_InteriorVolume_C_SetLocalPlayerIsInInterior) == 0x000001, "Wrong size on BP_InteriorVolume_C_SetLocalPlayerIsInInterior");
static_assert(offsetof(BP_InteriorVolume_C_SetLocalPlayerIsInInterior, IsInInterior) == 0x000000, "Member 'BP_InteriorVolume_C_SetLocalPlayerIsInInterior::IsInInterior' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.UpdateFogLocation
// 0x0001 (0x0001 - 0x0000)
struct BP_InteriorVolume_C_UpdateFogLocation final
{
public:
	bool                                          IsInInterior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_UpdateFogLocation) == 0x000001, "Wrong alignment on BP_InteriorVolume_C_UpdateFogLocation");
static_assert(sizeof(BP_InteriorVolume_C_UpdateFogLocation) == 0x000001, "Wrong size on BP_InteriorVolume_C_UpdateFogLocation");
static_assert(offsetof(BP_InteriorVolume_C_UpdateFogLocation, IsInInterior) == 0x000000, "Member 'BP_InteriorVolume_C_UpdateFogLocation::IsInInterior' has a wrong offset!");

// Function BP_InteriorVolume.BP_InteriorVolume_C.UpdateSkyboxVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_InteriorVolume_C_UpdateSkyboxVisibility final
{
public:
	bool                                          IsInInterior;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteriorVolume_C_UpdateSkyboxVisibility) == 0x000001, "Wrong alignment on BP_InteriorVolume_C_UpdateSkyboxVisibility");
static_assert(sizeof(BP_InteriorVolume_C_UpdateSkyboxVisibility) == 0x000001, "Wrong size on BP_InteriorVolume_C_UpdateSkyboxVisibility");
static_assert(offsetof(BP_InteriorVolume_C_UpdateSkyboxVisibility, IsInInterior) == 0x000000, "Member 'BP_InteriorVolume_C_UpdateSkyboxVisibility::IsInInterior' has a wrong offset!");

}

