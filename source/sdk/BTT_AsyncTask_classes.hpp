#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AsyncTask

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_AsyncTask.BTT_AsyncTask_C
// 0x0028 (0x00D0 - 0x00A8)
class UBTT_AsyncTask_C : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Duration;                                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          Controller;                                        // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Pawn;                                              // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbortTask(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ClearTimer();
	void EndTask(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BTT_AsyncTask(int32 EntryPoint);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void TimerEnded();
	void TryStartTask(class AAIController* OwnerController, class APawn* ControlledPawn, bool* Success, bool* InstantFinish);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_AsyncTask_C">();
	}
	static class UBTT_AsyncTask_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_AsyncTask_C>();
	}
};
static_assert(alignof(UBTT_AsyncTask_C) == 0x000008, "Wrong alignment on UBTT_AsyncTask_C");
static_assert(sizeof(UBTT_AsyncTask_C) == 0x0000D0, "Wrong size on UBTT_AsyncTask_C");
static_assert(offsetof(UBTT_AsyncTask_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_AsyncTask_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_AsyncTask_C, Duration) == 0x0000B0, "Member 'UBTT_AsyncTask_C::Duration' has a wrong offset!");
static_assert(offsetof(UBTT_AsyncTask_C, TimerHandle) == 0x0000B8, "Member 'UBTT_AsyncTask_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UBTT_AsyncTask_C, Controller) == 0x0000C0, "Member 'UBTT_AsyncTask_C::Controller' has a wrong offset!");
static_assert(offsetof(UBTT_AsyncTask_C, Pawn) == 0x0000C8, "Member 'UBTT_AsyncTask_C::Pawn' has a wrong offset!");

}

