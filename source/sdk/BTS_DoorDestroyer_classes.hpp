#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_DoorDestroyer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_DoorDestroyer.BTS_DoorDestroyer_C
// 0x0078 (0x0110 - 0x0098)
class UBTS_DoorDestroyer_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 DoorKey;                                           // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 TargetKey;                                         // 0x00C8(0x0028)(Edit, BlueprintVisible)
	bool                                          UseVentilation;                                    // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UNavigationQueryFilter>     DoorFilterClass;                                   // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UNavigationQueryFilter>     DefaultFilterClass;                                // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UNavigationQueryFilter>     VentilationFilterClass;                            // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_DoorDestroyer(int32 EntryPoint);
	void GetDoor(class APawn* Pawn, class ABP_InteractableDoor_C** Door);
	void GetTraceVector(const struct FVector& PawnLocation, const struct FVector& TargetLocation, struct FVector* Start, struct FVector* End);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveDeactivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_DoorDestroyer_C">();
	}
	static class UBTS_DoorDestroyer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_DoorDestroyer_C>();
	}
};
static_assert(alignof(UBTS_DoorDestroyer_C) == 0x000008, "Wrong alignment on UBTS_DoorDestroyer_C");
static_assert(sizeof(UBTS_DoorDestroyer_C) == 0x000110, "Wrong size on UBTS_DoorDestroyer_C");
static_assert(offsetof(UBTS_DoorDestroyer_C, UberGraphFrame) == 0x000098, "Member 'UBTS_DoorDestroyer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_DoorDestroyer_C, DoorKey) == 0x0000A0, "Member 'UBTS_DoorDestroyer_C::DoorKey' has a wrong offset!");
static_assert(offsetof(UBTS_DoorDestroyer_C, TargetKey) == 0x0000C8, "Member 'UBTS_DoorDestroyer_C::TargetKey' has a wrong offset!");
static_assert(offsetof(UBTS_DoorDestroyer_C, UseVentilation) == 0x0000F0, "Member 'UBTS_DoorDestroyer_C::UseVentilation' has a wrong offset!");
static_assert(offsetof(UBTS_DoorDestroyer_C, DoorFilterClass) == 0x0000F8, "Member 'UBTS_DoorDestroyer_C::DoorFilterClass' has a wrong offset!");
static_assert(offsetof(UBTS_DoorDestroyer_C, DefaultFilterClass) == 0x000100, "Member 'UBTS_DoorDestroyer_C::DefaultFilterClass' has a wrong offset!");
static_assert(offsetof(UBTS_DoorDestroyer_C, VentilationFilterClass) == 0x000108, "Member 'UBTS_DoorDestroyer_C::VentilationFilterClass' has a wrong offset!");

}

